<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-01029B52-55E0-5598-994F-BB5DE73D37EE"><title>What are Layers</title><shortdesc>This topic describes the concept of a <i>Layer</i> in the Communications Framework. </shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody><p>A Layer is a horizontal division of functionality in a stack. </p> <p>A Layer matches the concept of the Layer in the seven-layer International Organization for Standardization's OSI Model. A Layer also matches the concept of the Layer in the five layer model used to describe TCP/IP. </p> <p>A Layer can contain a single Communications Protocol. A Layer can also contain a number of related protocols collected into a single unit. TLS, TCP, IP, Ethernet are examples of the protocols. </p> <p>The concept of a Layer allows device creators to have different implementations in a given Layer. When a data connection starts or when the environment changes, the best protocol can be selected. </p> <p>The following diagram shows the concept. The diagram also shows the position of the Sockets Server Client APIs. </p> <fig id="GUID-B1EA40DF-E7D2-5326-9516-0DA2A917DC02"><title>
          Layers in the Communications Framework 
        </title> <image href="GUID-479133EB-1154-554E-8CEA-C61EDA747B69_d0e62935_href.png" placement="inline"/></fig> <p>Although each Layer contains a different protocol, the Communications Framework allows separate protocols to make a single Layer. For example: NCP, LCP and HDLC together make the PPP protocol. TCP, UDP, ICMP, IP together make the TCP/IP group of protocols. Each of these groups of protocols can be put together into a single Layer. </p> <p>The number of Layers only depends on the configuration of the Communications Stack. The top Layer has the Sockets Server. The bottom Layer has the drivers for the communication hardware . Each Layer interacts only with the Layer immediately above and the Layer immediately below. </p> <p>The framework APIs that connect the protocols in each Layer are consistent across the Communications Framework. All protocols share a common method of communication that is independent of protocol behaviour. A common method of communication allows protocols to be stacked. The Communications Framework provides flexibility in the configuration of the protocol stacks for each device. The following diagram shows a number of protocols at each Layer. </p> <fig id="GUID-D4A66FE7-8163-5383-A500-A8591CA9538E"><title>
          Protocols arranged in Layers in the Communications Framework 
        </title> <image href="GUID-5357F135-46B1-5C3F-BD2D-2E71D7BD0046_d0e62950_href.png" placement="inline"/></fig> </conbody><related-links><link href="GUID-61E0CD76-A2E3-5066-84A8-146EECA8ADCD.dita"><linktext>Socket Server</linktext> </link> </related-links></concept>