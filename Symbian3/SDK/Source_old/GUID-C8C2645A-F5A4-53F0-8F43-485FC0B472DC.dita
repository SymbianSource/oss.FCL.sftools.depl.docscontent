<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-C8C2645A-F5A4-53F0-8F43-485FC0B472DC" xml:lang="en"><title>External
and internal representations</title><shortdesc>Describes the <codeph>Internalize()</codeph> and <codeph>Externalize()</codeph> functions
for representing objects.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Since packages may be used to describe an object of any type, and may be
conveniently written to a file and sent over communications links, it is tempting
to use them to transmit all application data types.</p>
<p><note>This is strongly discouraged in Symbian platform programming.</note> </p>
<p>Packages directly package the <i>internal</i> representation of an object.
They should only be used when the internal representation is expected by all
recipients of the package. This would be the case, say, with inter thread
data transfer or certain rare types of file.</p>
<p>When an object is stored on file, or sent over a link, it is usually desirable
to define an <i>external</i> representation which may be safely read by <i>any</i> Symbian
platform implementation, even on a machine with different endianness, different
compiler options, and different machine word size.</p>
<p>In such a case, writing a struct directly is inappropriate. Instead, the <codeph>InternalizeL()</codeph> and <codeph>ExternalizeL()</codeph> functions
should be implemented for the object and should encapsulate all internalisation
and externalisation. The stream interface should be used, which may refer
to file, communications, clipboard and a number of other possibilities.</p>
</conbody></concept>