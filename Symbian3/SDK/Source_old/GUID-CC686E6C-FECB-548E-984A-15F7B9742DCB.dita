<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-CC686E6C-FECB-548E-984A-15F7B9742DCB"><title>Client Application Programming</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>This section explains the important steps that must be followed when programming a message client application. </p> <section><title>Basic set-up</title> <p>A client application performs the following steps in a set-up function, such as the <xref href="GUID-C8E0575D-5A7F-3D00-9BE5-AD8D6DBCF2F7.dita"><apiname>ConstructL()</apiname></xref> function of the application UI class: </p> <ol id="GUID-F7F948E4-EAAA-577C-8716-D8E176A7AC97"><li id="GUID-2AEA1017-FB12-5A40-BEEA-84FEE83BF7F5"><p>Create a <xref href="GUID-2DA04D96-F0AD-3FDC-9E36-1C27D889AF4B.dita"><apiname>CMsvSession</apiname></xref> session to Message Server. </p> </li> <li id="GUID-B773FE76-47A3-5B19-8078-7DDB94579836"><p>Create registry classes, so that MTM components can later be instantiated. </p> </li> <li id="GUID-BAD3AAF3-DB8A-5663-BDE8-6A556452D155"><p>From the session, obtain the root entry of the index, from which other entries can later be obtained. </p> </li> </ol> </section> <section><title>User interface</title> <p>Your message client application can now discover the immediate children of the root entry. To display entries to the user in a message or folder view format, the application can query the MTM type of each entry, and load icon resources from the appropriate User Interface MTMs. </p> <p>After an initial message view display, it is up to the message client application to handle user input events and access User Interface MTMs if required. For example, if the user selects an entry and then chooses an Edit command, the application must: </p> <ul><li id="GUID-F76EE23F-3E1F-55BD-B60F-BB0B248524CE"><p>identify the selected entry and set the context to this entry (so it has instances of the generic message header class <xref href="GUID-5A23B804-2C06-3407-9D48-1BFB212D699F.dita"><apiname>TMsvEntry</apiname></xref> and of the message encapsulation class <xref href="GUID-85BBE389-81F7-3E2F-A789-446D9BE2CC49.dita"><apiname>CMsvEntry</apiname></xref> for the entry) </p> </li> <li id="GUID-1C6DEA39-49FD-577A-92BC-B795F7B9BB85"><p>use the data from the <xref href="GUID-5A23B804-2C06-3407-9D48-1BFB212D699F.dita"><apiname>TMsvEntry</apiname></xref> object to discover the MTM type that handles the entry </p> </li> <li id="GUID-6A0CB9FA-EB73-53E7-B6E7-13B2B5C2EF78"><p>request instances of the relevant Client MTM and User Interface MTM objects from the registries </p> </li> <li id="GUID-95C58848-0C9F-5BE5-AC15-46924FEAAE24"><p>inform the Client MTM of the current context </p> </li> <li id="GUID-E4B73140-BBCA-5FBE-9CDC-755168FAC177"><p>call the <xref href="GUID-24E72659-DF99-303C-BE85-C53F1981CD20.dita"><apiname>EditL()</apiname></xref> function provided by the User Interface MTM. This returns a <xref href="GUID-AF724192-6580-3DE3-9287-3A005C0AA932.dita"><apiname>CMsvOperation</apiname></xref> operation object to manage the asynchronous operation. </p> </li> </ul> <p>See the <xref href="GUID-D73AD200-BE4D-50BF-BCF9-14627DE530B7.dita">example code</xref> for detailed illustration of the above steps. </p> </section> </conbody></concept>