<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-5F3B814F-30B2-5325-A83F-A48ACCF095EB"><title>Database compaction</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>When a File-store database is constructed using the <codeph>RDbNamedDatabase</codeph> interface, there is no access to the underlying store in order to compact it and recover any free space for re-use.</p> <p>The <codeph>RDbDatabase</codeph> abstract base class, however, supports a compaction interface, the <codeph>Compact()</codeph> member function. The class also offers a complementary interface, the <codeph>UpdateStats()</codeph> and <codeph>Size()</codeph> member functions, which calculate and report size and usage information.</p> <p>Incremental forms of these functions are also offered by the <codeph>RDbIncremental</codeph> class.</p> </conbody></concept>