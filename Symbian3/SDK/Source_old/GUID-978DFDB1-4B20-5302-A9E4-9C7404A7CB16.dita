<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-978DFDB1-4B20-5302-A9E4-9C7404A7CB16" xml:lang="en"><title>The range
checking wrapper for fixed length C++ arrays</title><shortdesc>C++ arrays do not provide range checking so Symbian platform offers
a thin wrapper to add this functionality to arrays.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>The C++ language provides <i>fixed length</i> arrays.</p>
<p>It is often convenient to use these arrays in applications whenever the
number of elements is fixed and known at compile time.</p>
<p>The main disadvantage of using C++ arrays is that there is no automatic
checking of index value. This means that it is possible to write over data
that lies beyond the end of the allocated array size, and to read invalid
data from beyond the end of the array.</p>
<p>The templated class <codeph>TFixedArray&lt;class T,TInt S&gt;</codeph>, is
a thin wrapper for C++ arrays. The major benefits of using this class over
a basic C++ array are the provision of range-checked indexing and support
for object deletion. There is no runtime penalty for using this class if debug-only
range-checking is used.</p>
<p>The class can be embedded as a data member of <codeph>CBase</codeph>-derived
objects. The class can also be used on the program stack.</p>
</conbody></concept>