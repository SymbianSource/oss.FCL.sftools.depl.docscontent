<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-898FF7CE-969C-5FE1-9346-34BCBE637A57"><title>Data safety and recovery</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>A robust stream structure is used to manage row data within a database, and relying on the permanent file store's update integrity, it will survive a crash; this excludes the case where the file itself is corrupted. Such an aborted access effects a rollback on the database when it is next opened, all committed data is immediately available, though indexes may have been damaged as for a controlled rollback.</p> <p>The database reports damage if it considers that it may have damaged indexes. When this is the case the database can still be used, but attempting to use any damaged index results in an error. Damaged indexes can be fully restored by recovering the database.</p> <p>Compacting the store which contains the database also guarantees no data loss.</p> <p>The store used by the database <note>must not be committed or reverted while the database is inside a transaction</note>, this can lead to loss of structural integrity within the database. Such damage is not repairable by DBMS. </p> <p>The database streams cannot be corrupted by any action of DBMS itself, but misuse of the store, the file or damage to the file system resulting in such corruption may be detected by the database and reported as an error. DBMS cannot repair such damage to a database.</p> </conbody></concept>