<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-7FF63B82-B719-5E42-B007-94E2FB9548CB" xml:lang="en"><title>Memory
Stores example code</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-909F271F-2546-5F1D-A948-FC7D8D6FC57B"><title>StreamInStore:
stream creation in a non-persistent store</title> <p><b>Description</b> </p> <p>The
example shows objects being externalized to a single stream in a non-persistent
store. The store itself is an in-memory store represented by a <codeph>CBufStore</codeph> object. </p> <p><b>Download</b> </p> <p>Download
the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-e35647dd-e2f0-458f-9dd2-3cb06b550221.zip" scope="external">StreamInStore.zip</xref> </p><p>Download some additional
files required by the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.zip" scope="external">CommonFramework.zip</xref></p><p>View the source code: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-e35647dd-e2f0-458f-9dd2-3cb06b550221.html" scope="peer">browse</xref>. View the additional file: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.html" scope="peer">browse</xref></p> <p><b>Class summary</b></p><ul>
<li><p><xref href="GUID-346D4908-15C7-3F15-945F-D561E774022D.dita"><apiname>RStoreWriteStream</apiname></xref> - Supports the writing of a stream
to a store.</p></li>
<li><p><xref href="GUID-4FA6EE6C-5B4E-39E0-B888-ABDE19985976.dita"><apiname>RStoreReadStream</apiname></xref> - Supports the opening and manipulation
of an existing stream in a store.</p></li>
<li><p><xref href="GUID-5EC5199D-50F2-3BFA-BA45-4C5C017281DD.dita"><apiname>CBufStore</apiname></xref> - In-memory non-persistent store. The
buffer store does not have a root stream and cannot be closed without losing
all the data.</p></li>
</ul> </section>
</conbody></concept>