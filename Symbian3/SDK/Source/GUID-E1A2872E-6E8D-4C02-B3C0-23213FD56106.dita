<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-E1A2872E-6E8D-4C02-B3C0-23213FD56106" xml:lang="en"><title>Handling
button events</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Use the <codeph>MCoeControlObserver</codeph> observer interface to observe
button events. Set the button container to be its observer.</p>
<p>For more information on events, see <xref href="GUID-A9330FEF-C559-4E2B-B064-0151FDADEA8C.dita">Event
handling</xref>.</p>
<codeblock xml:space="preserve">void CMyAppContainer::HandleControlEventL( CCoeControl* aControl, 
                                                  TCoeEvent aEventType ) 
    { 
        switch ( aEventType ) 
            { 

// Button state changed (button was pressed) 

            case EEventStateChanged: 
                … 
                break; 

// Button is pressed for a long time (in case of 
// a KAknButtonReportOnLongPress flagged button) 

            case CAknButton::ELongPressEvent: 
                … 
                break; 

// Button long press ended (in case of 
// a KAknButtonReportOnLongPress flagged button) 

            case CAknButton::ELongPressEndedEvent: 
                … 
                break; 

            default: 
                break; 
            } 
    } 

</codeblock>
</conbody></concept>