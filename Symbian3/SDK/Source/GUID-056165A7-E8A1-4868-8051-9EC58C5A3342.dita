<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-056165A7-E8A1-4868-8051-9EC58C5A3342" xml:lang="en"><title>Usability
considerations</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>All touch and gestural interfaces have to appear competent and safe. The
interface must appear such that it is not going to misuse users' personal
data or break down. Optimizing system performance is critical here. Low screen
refresh rate and latent images do not give the impression of a trustworthy
touch UI. The use of touch screen and sensors may also increase battery consumption
of mobile devices.</p>
<note><p>Touch screens consume most power during touch operations, and reducing
unnecessary user interaction can help increase power efficiency. Specifically
with resistive touch screens, avoiding excessively long touch and drag user
actions is recommended. The continuous touch event flow keeps the CPU busy.
The screen lock turns off the touch completely. To learn more about both optimizing
system performance and battery life, see the <xref href="http://developer.symbian.org/wiki/index.php/Power_Management" scope="external">Power Management</xref> section at the Symbian Foundation.</p></note>
<p>The best products predict the needs of their users and then fulfill those
needs in unexpectedly pleasing ways. Adaptive targets are one way to do this.
 Controls that match the users actions well are another way devices can be
clever.</p>
<p><b>Interaction design</b></p>
<p>Use appropriate and simple interaction logic:</p>
<ul>
<li><p>Navigation and controls must be clear and meaningful to prevent mistakes:
strokes along the touch panel must produce a logical outcome. </p></li>
<li><p>The coolest interaction in the world is empty unless it has clear meaning
for the person performing it. When using indirect controls, the UI response
must relate to the action the user is performing. </p></li>
<li><p>Meaningful controls are easier to learn and remember. </p></li>
</ul>
<p>Touch UI can employ direct or indirect controls, or a combination of both:</p>
<ul>
<li><p>Direct controls allow users to simply tap the item they want to manipulate
right on the screen itself, move it, make it bigger, scroll it, and so on.
For more information, see <xref href="GUID-CCE6DC36-625C-487C-9AD8-F1BF8E36080A.dita">UI
components</xref> and <xref href="GUID-BB8B3A11-0BBC-4759-A7F4-A28C9E70573F.dita">Touch
support for common UI components</xref>. </p></li>
<li><p>Indirect controls use some other means to manipulate an object, for
example, shaking, tilting, flipping, waving and so on. For more information,
see <xref href="GUID-AE979B97-5610-42F3-99A7-5A3D66D3C2E6.dita">Sensor interaction</xref>.</p></li>
<li><p>Although Symbian platform allows the use of scrollbars, it is common
to reverse the page scrolling orientation in applications such as browser.
In absence of scrollbars, users will flick or drag the page upwards rather
than pull a scrollbar down to move the page up, that is, to scroll down. In
this case, scrollbars are used as navigation indicators.</p></li>
</ul>
<fig id="GUID-604A80CE-CB23-45A9-BC29-A01395CD6A2F">
<image href="GUID-EE5937B6-9103-4711-B13B-06A62D56AF79_d0e69754_href.png" scale="60" placement="inline"/>
</fig>
<p>Direct taps and strokes are far easier for the user to understand and pick
up than abstract, indirect ones. A single view must always employ only a few
indirect strokes, so that the controls do not confuse the user. </p>
<p><b>Visual design</b></p>
<p>On touch screens, it is important to make a clear distinction between touchable
areas, and non-touchable areas, such as text. Borders, glow effects, or other
indicators can be used to highlight the interaction.<note>Theme design alone
is not sufficient for indicating touch functionality, where one theme may
indicate touch, another may not.</note></p>
<p>See also:</p>
</conbody></concept>