<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-2C767F68-2150-55C1-B801-AB6EB58FD97C"><title>Storing and restoring protocol</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>Storing a compound object, which contains other objects, is more difficult than storing a non compound object. Component objects must be stored first, followed by the containing object. </p> <p>As part of the process of storing components, one or more head streams are created, with corresponding stream IDs. A store map is used to hold the associations between the in-memory component objects and their associated stream IDs.</p> <p>The protocol for storing a compound object can be summarized:</p> <ol id="GUID-70E52B4C-3E5B-575F-8ACC-462378D67629"><li id="GUID-4249A5BD-91A9-53C2-8976-591EEECB66D8"><p>construct a store map</p> </li> <li id="GUID-13A15193-1455-57A6-A30D-BC3C523E51A4"><p>store the components, and store their pointer/stream ID associations in the store map</p> </li> <li id="GUID-15CE3B31-15F2-5978-A0DA-114D148E0068"><p>store the containing object, using the store map to store the stream IDs of its components)</p> </li> <li id="GUID-84B0D752-546A-5133-89DD-0FDF86FF465E"><p>delete the store map.</p> </li> </ol> <section><title>See also</title> <p><xref href="GUID-C1AA34CB-D63D-57E3-87F6-28AD22537D21.dita">Store map</xref> </p> </section> </conbody></concept>