<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-BC67F13E-4B5A-5078-AE9B-826304BC14FD" xml:lang="en"><title>Versit:
Versit Example</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-315BA525-228E-46A2-82D7-A03258C21771"><title>Description</title> <p>This example code first creates a vCard
parser using the <xref href="GUID-F4BEE3F4-F268-345D-B727-2C1D5E25F3F7.dita"><apiname>CParserVCard</apiname></xref> class. Then it creates a
NOTE property with a string literal as its value, using <xref href="GUID-07A6B09A-823D-3CE7-B621-157EACF60A8D.dita"><apiname>CParserGroupedProperty</apiname></xref> and <xref href="GUID-76E6CCFA-5BAC-34F1-A5B2-FB505A68E784.dita"><apiname>CParserPropertyValue</apiname></xref> classes.
The property is associated with the vCard parser using the <xref href="GUID-F4BEE3F4-F268-345D-B727-2C1D5E25F3F7.dita#GUID-F4BEE3F4-F268-345D-B727-2C1D5E25F3F7/GUID-43BF4FFE-E22D-32D9-9952-6F7BDF1DA348"><apiname>CParserVCard::AddPropertyL()</apiname></xref> method.
Finally, the vCard is externalized or exported to a file by calling the <xref href="GUID-F4BEE3F4-F268-345D-B727-2C1D5E25F3F7.dita#GUID-F4BEE3F4-F268-345D-B727-2C1D5E25F3F7/GUID-804FAC27-5985-3986-92E1-87D825F42D49"><apiname>CParserVCard::ExternalizeL()</apiname></xref> method. </p> <p>The
example also shows how to internalize or import a vCard from a file. A session
with the file server is established using the <xref href="GUID-E263C747-946F-35AA-9F1D-41833BD350FC.dita"><apiname>RFs</apiname></xref> class
to read the vCard from the file using a file read stream (<xref href="GUID-90A3AE1D-DCB2-3E98-8BE9-C48C15964E7D.dita"><apiname>RFileReadStream</apiname></xref> class). </p> <p>Note
that the procedure to create a vCal parser using the <xref href="GUID-6BEFF6A7-FBD8-306D-98A4-8711E788C702.dita"><apiname>CParserVCal</apiname></xref> class
is similar to that of creating a vCard parser. </p> </section>
<section id="GUID-FCC37BE4-D45C-45C2-81F4-821A3CAB096C"><title>Download</title> <p>Click on the following link to download
the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-58cce3c4-5d99-4c45-a395-4861992faf0c.zip" scope="external">VersitExample.zip</xref></p><p>Click: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-58cce3c4-5d99-4c45-a395-4861992faf0c.html" scope="peer">browse</xref> to view the example code. </p> </section>
<section id="GUID-2A3E5516-EAD4-4F61-A930-9E919F7D2927"><title>Usage</title> <p>This is a console application and it builds
an executable called <filepath>VersitExample.exe</filepath> in the standard
location (<filepath>\epoc32\release\winscw\</filepath> <i>&lt;build_variant&gt;</i> for
CodeWarrior). After launching the executable, depending on the emulator you
are using, you may need to navigate from the app launcher/shell screen to
view the console. </p> </section>
<section id="GUID-89FD1B79-98F9-4B7C-88D1-161DFBE3C108"><title>Class Summary</title><p>CParserVCard</p><p>CParserGroupedProperty
 </p><p>CParserPropertyValue</p></section>
<section id="GUID-6697889A-3C09-427A-A6AD-8038D13ACF49"><title>See also</title> <p> <xref href="GUID-27E38FBB-F417-56C8-BFCF-B32215668902.dita">Using
Versit</xref>  </p> </section>
</conbody></concept>