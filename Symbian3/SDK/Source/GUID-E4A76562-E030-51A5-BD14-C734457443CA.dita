<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-E4A76562-E030-51A5-BD14-C734457443CA" xml:lang="en"><title>Units,
drives and volumes</title><shortdesc>This topic describes the concepts related to unit, drive and volume..</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Classes <codeph>TDriveUnit</codeph>, <codeph>TDriveInfo</codeph> and <codeph>TVolumeInfo</codeph> encapsulate
drive and volume information. Drive and volume information both include the
attributes of the drive and the media mounted on it. The volume has additional
information including the amount of free space on the media and its size. </p>
<p>A unit is a device which may or may not have a drive in it. For removable
media, the unit is always present, but a drive may not be.</p>
<p>A drive may have from one to four partitions on it. Each partition represents
a volume. The volume may or may not be formatted.</p>
<p>A maximum of 26 drives are available and they may be represented by letters
(<filepath>A</filepath> to <filepath>Z</filepath>), or by numbers (0 to 25).
To find which drives are available, use <codeph>RFs::DriveList()</codeph> to
get the drive list. A <codeph>TDriveList</codeph> is an array of 26 bytes.
Drive <filepath>A</filepath> has value 0, <filepath>B</filepath> = 1 etc.
Any byte in the <keyword>drive         list</keyword> which has a non zero
value signifies that the corresponding drive exists. The byte's value can
be used to retrieve the drive's attributes by using a bitwise AND with the
corresponding drive attribute constant.</p>
<p><codeph>RFs::Drive()</codeph> may also be used to get drive attributes.</p>
<p>Class <codeph>RFormat</codeph> allows a drive to be formatted in a series
of steps. <codeph>RRawDisk</codeph> allows a diskâ€™s data to be accessed in
raw mode.</p>
</conbody></concept>