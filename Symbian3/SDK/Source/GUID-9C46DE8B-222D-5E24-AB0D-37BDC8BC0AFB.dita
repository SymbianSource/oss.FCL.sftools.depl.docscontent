<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-9C46DE8B-222D-5E24-AB0D-37BDC8BC0AFB" xml:lang="en"><title>Category
: Kern-Common</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>KERN-COMMON panics are raised by the kernel when various kernel-side utility
functions are called with bad arguments. </p>
<table id="GUID-C3E72AAA-A012-5810-BF7D-0B447B3EFB92">
<tgroup cols="2"><colspec colname="col0"/><colspec colname="col1"/>
<tbody>
<row>
<entry><p> <codeph>19</codeph>  </p> </entry>
<entry><p>This panic is raised if an invalid descriptor type is given to <xref href="GUID-C6946ECB-775F-3EC2-A56F-78F25B9FBE3D.dita#GUID-C6946ECB-775F-3EC2-A56F-78F25B9FBE3D/GUID-D7CE1BF2-F1B8-30E9-9D34-7BDDA39C1B0C"><apiname>Kern::KUDesGet()</apiname></xref> or <xref href="GUID-C6946ECB-775F-3EC2-A56F-78F25B9FBE3D.dita#GUID-C6946ECB-775F-3EC2-A56F-78F25B9FBE3D/GUID-8B62DE20-357F-3499-9F2E-FAD4B18C34D6"><apiname>Kern::KUDesPut()</apiname></xref>. </p> </entry>
</row>
<row>
<entry><p> <codeph>20</codeph>  </p> </entry>
<entry><p>This panic is raised when a length value passed to an 8-bit variant
descriptor member function is invalid. It may be raised by some descriptor
constructors and, specifically, by the <codeph>Replace()</codeph> and <codeph>Set()</codeph> descriptor
member functions. </p> </entry>
</row>
<row>
<entry><p> <codeph>21</codeph> </p> </entry>
<entry><p>This panic is raised when the index value passed to the 8-bit variant
descriptor <codeph>Operator()</codeph> is out of bounds. </p> </entry>
</row>
<row>
<entry><p> <codeph>22</codeph> </p> </entry>
<entry><p>This panic is raised when the position value passed to an 8-bit
variant descriptor member function is out of bounds. It may be raised by the <codeph>Left()</codeph>, <codeph>Right()</codeph>, <codeph>Mid()</codeph>, <codeph>Insert()</codeph>, <codeph>Delete()</codeph> and <codeph>Replace()</codeph> descriptor
member functions. </p> </entry>
</row>
<row>
<entry><p> <codeph>23</codeph>  </p> </entry>
<entry><p>This panic is raised if the source passed to Kern::KUDesGet() is
longer than the maximum length of the destination. </p> </entry>
</row>
<row>
<entry><p> <codeph>26</codeph> </p> </entry>
<entry><p>This panic is raised when expanding or contracting an <xref href="GUID-2A528453-0279-3E47-838C-F8A8D29B88F1.dita"><apiname>HBufC8</apiname></xref> buffer
using the <codeph>ReAlloc()</codeph> or <codeph>ReAllocL()</codeph> descriptor
member functions. Specifically, the panic occurs if the new length being specified
is too small to contain the data. </p> </entry>
</row>
<row>
<entry><p> <codeph>28</codeph> </p> </entry>
<entry><p>This panic is raised by the <codeph>Replace()</codeph> member function
of the 8-bit variant descriptor <xref href="GUID-445B19E5-E2EE-32E2-8D6C-C7D6A9B3C507.dita"><apiname>TDes8</apiname></xref>, when the length
of the source descriptor is negative or exceeds the maximum length of the
target descriptor. </p> </entry>
</row>
<row>
<entry><p> <codeph>29</codeph> </p> </entry>
<entry><p>This panic is raised when 8-bit variant descriptors are constructed
with negative length values. It may also be raised if the <codeph>Set()</codeph>, <codeph>Repeat()</codeph> and
the <codeph>Find()</codeph> member functions are passed negative length values. </p> </entry>
</row>
<row>
<entry><p> <codeph>30</codeph> </p> </entry>
<entry><p>This panic is raised when 8-bit variant descriptors are constructed
with negative maximum length values. </p> </entry>
</row>
<row>
<entry><p> <codeph>88</codeph>  </p> </entry>
<entry><p>This panic is raised by <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-CA07367C-D2AC-32AE-9614-A93DE2A146A7"><apiname>Mem::Compare()</apiname></xref>, <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-95543372-DF95-37C1-BDF0-AF760B3C7157"><apiname>Mem::CompareC()</apiname></xref> and <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-BB1F7591-D0AD-3722-A25E-9D828EA19515"><apiname>Mem::CompareF()</apiname></xref> when
the length of the area of memory designated as the left hand area, is negative.
This panic is raised in debug builds only. On the user side this is associated
with the USER category; on the kernel side this is associated with the KERN-COMMON
category. </p> </entry>
</row>
<row>
<entry><p> <codeph>89</codeph>  </p> </entry>
<entry><p>This panic is raised by <codeph>Mem::Compare()</codeph>, <codeph>Mem::CompareC()</codeph> and <codeph>Mem::CompareF()</codeph> when
the length of the area of memory designated as the right hand area, is negative.
This panic is raised in debug builds only. On the user side this is associated
with the USER category; on the kernel side this is associated with the KERN-COMMON
category. </p> </entry>
</row>
<row>
<entry><p> <codeph>90</codeph>  </p> </entry>
<entry><p>This panic is raised by <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-4D71DFF1-F113-3BBB-B607-AF61E8234307"><apiname>Mem::Copy()</apiname></xref> when the
length of the area of memory to be copied is negative. This panic is raised
in debug builds only. On the user side this is associated with the USER category;
on the kernel side this is associated with the KERN-COMMON category. </p> </entry>
</row>
<row>
<entry><p> <codeph>91</codeph>  </p> </entry>
<entry><p>This panic is raised by <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-183CDC27-56F1-371A-A9C5-730118788C86"><apiname>Mem::Move()</apiname></xref> when the
length of the area of memory to be moved is not a multiple of 4. This panic
is raised in debug builds only. On the user side this is associated with the
USER category; on the kernel side this is associated with the KERN-COMMON
category. </p> </entry>
</row>
<row>
<entry><p> <codeph>92</codeph>  </p> </entry>
<entry><p>This panic is raised by <codeph>Mem::Move()</codeph> when the address
of the source for the move operation is not aligned on a 4 byte boundary.
This panic is raised in debug builds only. On the user side this is associated
with the USER category; on the kernel side this is associated with the KERN-COMMON
category. </p> </entry>
</row>
<row>
<entry><p> <codeph>93</codeph>  </p> </entry>
<entry><p>This panic is raised by <codeph>Mem::Move()</codeph> when the address
of the target for the move operation is not aligned on a 4 byte boundary.
This panic is raised in debug builds only. On the user side this is associated
with the USER category; on the kernel side this is associated with the KERN-COMMON
category. </p> </entry>
</row>
<row>
<entry><p> <codeph>94</codeph>  </p> </entry>
<entry><p>This panic is raised by <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-A94B5FEC-4DFA-308F-9154-840BC848F162"><apiname>Mem::Swap()</apiname></xref> when the
length of the area of memory to be swapped is negative. This panic is raised
in debug builds only. On the user side this is associated with the USER category;
on the kernel side this is associated with the KERN-COMMON category. </p> </entry>
</row>
<row>
<entry><p> <codeph>95</codeph>  </p> </entry>
<entry><p>This panic is raised by <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-756045AC-3C85-3642-B24B-68B655B140B9"><apiname>Mem::Fill()</apiname></xref> and <xref href="GUID-677B3729-EDED-341B-BE83-59F4386CCCA4.dita#GUID-677B3729-EDED-341B-BE83-59F4386CCCA4/GUID-CFDAFF27-A7F5-378C-AC60-6F46CE62B01E"><apiname>Mem::FillZ()</apiname></xref> when
the length of the area of memory to be filled is negative. This panic is raised
in debug builds only. On the user side this is associated with the USER category;
on the kernel side this is associated with the KERN-COMMON category. </p> </entry>
</row>
<row>
<entry><p> <codeph>190</codeph>  </p> </entry>
<entry><p>This panic is raised when the security policy is found to be corrupt
while performing a security policy check. </p> </entry>
</row>
</tbody>
</tgroup>
</table></conbody></concept>