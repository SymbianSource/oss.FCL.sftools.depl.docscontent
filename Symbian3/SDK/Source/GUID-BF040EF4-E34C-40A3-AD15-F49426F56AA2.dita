<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-BF040EF4-E34C-40A3-AD15-F49426F56AA2" xml:lang="en"><title>Antiword
Example</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Antiword is an Open C console-based application.  ANTIWORD can be used
for the following purposes:  </p>
<p> converts a MS-word document (i.e. .doc) file in to a plain text(i.e. .txt)
file. </p>
<p>converts a MS-word document (i.e. .doc) file in to a Adobe acrobat(i.e.
.pdf) file. </p>
<p>converts MS-word document (i.e. .doc) file in to a post-script (i.e. .ps)
file. </p>
<p>converts a MS-word document (i.e. .doc) file in to a xml (i.e. .xml) file. </p>
<section id="GUID-026FD8D6-6C4A-5958-B289-775D4AE1E756-GENID-1-8-1-11-1-1-5-1-3-1-11-1-10-1-2-6"><title>Download</title> <p>Click
on the following link to download the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-72f72df3-653c-414c-a357-7613ad8bc169.zip" scope="external"> antiword.zip</xref></p><p>Click: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-72f72df3-653c-414c-a357-7613ad8bc169.html" scope="peer">browse</xref> to view the example code. </p> </section>
<section id="GUID-7E7C4564-B10E-41F9-8A9D-D8A6C5E9C51C-GENID-1-8-1-11-1-1-5-1-3-1-11-1-10-1-2-7"><title>Design and
Implementation</title> <p>The following sections provide information about
the implementation of the example. </p> <p><b>Capabilities</b> </p> The following
program capability is defined in the <filepath>antiword.mmp</filepath> file: <codeph>CAPABILITY
None</codeph><p><b>Implementation details of EXE</b> </p>This application
uses main() as the entry point for the application. This is simple console
based application.  Antiword is C application that is ported on the Open C
which demonstrates the changes made in the application in order to work on
Open C.  All changes made to the open source code is under SYMBIAN macro.
 Some of the environment variables are set explicitly using the Open C's setenv()
API.  The fillArg() subroutine converts the given input command string to
Linux's argv() format. Output of the conversion will be written to destination
file i.e last commandline argument where as the original application expects
the users to use the redirection operators for dumping the output to a target
file. Some status messages will be prompted to the user in case of wrong input
commands. The commandline help will be printed on the stdout using the original
help text.  The input data files (font and mapping files for conversion) are
added in the /data/resources directory and this directory will be exported
to the  private folder of the Antiword application's, so that /private/A0001323/resources/
will be used as the ANTIWORD_HOME directory in the application. The application
can be launched by clicking its icon in the emulator as well as in the device.<p><b>Limitations</b></p><p>Antiword
is not able to convert the embedded image or any other embedded multimedia
objects from the document file. It converts only the text. Some of the related
files, which supports the embedded images are commented in the mmp file as
these files depend on the open source's sprite library.</p></section>
<section id="GUID-67A72761-1D92-46D1-B1C9-7455978BDE4E-GENID-1-8-1-11-1-1-5-1-3-1-11-1-10-1-2-8"><title>Building and
Using</title> <p>The <xref href="GUID-3100800B-B2F7-50EF-BD4C-3C345ECCB2A5.dita">Symbian
build process</xref> describes how to build this example application. </p> To
build the Antiword application, go to the Antiword\group directory and build
the application.  The definition for the whole application can be found in
the bld.inf file in the group subdirectory of the applications main directory. </section>
</conbody></concept>