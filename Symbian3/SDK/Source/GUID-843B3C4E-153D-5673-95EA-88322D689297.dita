<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-843B3C4E-153D-5673-95EA-88322D689297" xml:lang="en"><title>File
names</title><shortdesc>This topic describes the file name and the limitations of
using them.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>The file server presents a DOS-like file system with long file names. For
compatibility with traditional DOS filenames, an extension is recognized on
names with appropriate formats. </p>
<p>When creating a file or directory note the following restrictions which
apply to the path and its components. </p>
<ul>
<li id="GUID-59880AE6-D5E4-5D6B-91AC-22134438D44F"><p>The total length of
the path including drive, path, name and extension, must not exceed 256 characters. </p> </li>
<li id="GUID-F5DDBB15-3AC5-534C-8401-8C5B19D71963"><p>Wildcards cannot be
used in any path component including the filename and extension, although
some higher level classes allow the use of wildcard characters in the filename
and extension. These classes are covered later in this guide. </p> </li>
<li id="GUID-29CE26E0-ADE6-5C35-AF3C-9E9475D7D95D"><p>Two consecutive backslashes
are not allowed in the path. </p> </li>
<li id="GUID-64D83F1D-D2D3-555F-AA09-E88E53C85D14"><p>The following characters
must not be included anywhere in the path (all other characters are acceptable) <filepath>&lt;</filepath>  <filepath>&gt;</filepath> <filepath>"</filepath>  <filepath>/</filepath>  <filepath>|</filepath> </p> </li>
<li id="GUID-FB41B42D-61A0-5B63-AC0C-7419B22DDE8C"><p>A <filepath>:</filepath> (colon)
may only be included immediately after the drive. </p> </li>
<li id="GUID-34B762BC-BA07-5292-A974-00C4DC65271E"><p>The path components
are separated by <filepath>\</filepath> backslashes, and a final backslash
must be used to indicate that a name is a path. </p> </li>
<li id="GUID-97825981-208E-5946-8F83-F8EB2EA4A4EE"><p>Long filenames are supported,
so a path or filename may have any number of full stops in it, with the exception
that following the final backslash (the filename and extension), the space
characters and names "<filepath>.</filepath> " and "<filepath>..</filepath> "
are not permitted as path components. </p> </li>
<li id="GUID-2EB050AC-652C-55C1-AE3F-1C3FC775BF20"><p>Spaces between the drive,
if specified, and the first directory in the path are illegal, although there
may be spaces between other path components, for instance between directories. </p> </li>
</ul>
<p>The file server does not use <filepath>.</filepath> and <filepath>..</filepath> to
mean current directory and parent directory respectively. If required, these
must be implemented by higher-level code. The <xref href="GUID-F673F02A-AC5B-3D0F-8D14-21E6221E5015.dita"><apiname>TParseBase</apiname></xref> class
provides filename parsing and manipulation functions. </p>
<p>The function <xref href="GUID-E263C747-946F-35AA-9F1D-41833BD350FC.dita#GUID-E263C747-946F-35AA-9F1D-41833BD350FC/GUID-91C2BEAC-2210-3CBA-A954-A5C52FFA1947"><apiname>RFs::IsValidName()</apiname></xref> tells you whether a
path name is valid or not. </p>
</conbody></concept>