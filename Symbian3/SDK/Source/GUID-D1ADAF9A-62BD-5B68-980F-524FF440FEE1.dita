<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-D1ADAF9A-62BD-5B68-980F-524FF440FEE1" xml:lang="en"><title>Using
CArrayFixFlat&lt;TAny&gt;</title><shortdesc>The <codeph>CArrayFixFlat&lt;Tany&gt;</codeph> class is useful for
constructing an array of fixed length buffers, where the length is decided
at run time.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-2AD32A65-729E-4C8C-B012-7CF5FC442EFE"><title>Arrays whose type is not known until class instantiation</title> <p>The <codeph>CArrayFixFlat&lt;Tany&gt;</codeph> class
is useful for constructing an array of fixed length buffers, where the length
is decided at run time. It is also useful as a data member of a base class
in a thin template class/base class pair where the type of the array element
is not known until the owning thin template class is instantiated.</p> <p>For
example, to implement a stack of fixed length objects of type <codeph>T</codeph>.</p> <codeblock id="GUID-86CBEBF4-FFE4-565B-A6A3-1BABE564205E" xml:space="preserve">class CExampleBase : public CBase
 {
public :
 ...
protected :
 ...
 void  PushL(const TAny* aPtr);
 TAny* Pop();
private :
 CArrayFixFlat&lt;TAny&gt; iArray;
 }</codeblock> <codeblock id="GUID-8A4100C4-280F-5BDC-9C44-908C58C4EA92" xml:space="preserve">template &lt;classÂ T&gt;
class CExample : public CExampleBase
 {
public :
 ...
 inline void PushL(const T* aPtr);
 inline T*   Pop();
 }</codeblock> </section>
</conbody></concept>