<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-72151EF7-52C0-5DF4-AC69-07087F31D9E8"><title>Externalising</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>The process of externalising an object involves externalising its data to a stream.</p> <p>For a class instance, this involves externalising each of its data members and components to a stream. This process is encapsulated by the <codeph>ExternalizeL()</codeph> member function of the class.</p> <p>A class always defines <codeph>ExternalizeL()</codeph> as:</p> <codeblock id="GUID-68FB2FAA-6298-5BFA-B282-AFD4586D134C" xml:space="preserve">void ExternalizeL(RWriteStream&amp; aStream) const;</codeblock> <p>and uses the write stream interface class <codeph>RWriteStream</codeph>. </p> <p>Note that <codeph>ExternalizeL()</codeph> is not virtual and there is no implication that a class that requires an <codeph>ExternalizeL()</codeph> function must be derived from any particular base class.</p> </conbody></concept>