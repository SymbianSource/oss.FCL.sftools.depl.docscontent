<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="GUID-42200C56-54B4-43C0-9319-C479433300DF" xml:lang="en"><title>Enabling
MTP over Bluetooth in the responder driven mode</title><shortdesc>This tutorial describes how to start the MTP over Bluetooth service
in responder driven mode.</shortdesc><prolog><metadata><keywords/></metadata></prolog><taskbody>
<context>       <p>In the responder-driven mode a request for MTP data transfer
is made by the Symbian device (the responder). However, the MTP over Bluetooth
service on the host PC must be running before the responder can make its request. </p> 
   </context>
<steps id="GUID-4DD07DEC-6017-4237-BE46-1D69E5FBD744-GENID-1-7-1-23-1-1-7-1-6-1-5-1-6-1-3-2">
<step id="GUID-9A69E5AD-E938-4092-A8C2-CB65C37C8962-GENID-1-7-1-23-1-1-7-1-6-1-5-1-6-1-3-2-1"><cmd>In the user application,
get the Bluetooth device address and PSM port of the remote device (the host
PC).  </cmd>
<info><p>To connect with the host PC, the device must know the Bluetooth device
address and port. The Bluetooth GUI and the Bluetooth Service Discovery Agent
can be used to get the address and port. Refer to the Example Client Application
section below for guidance on how to do this.  </p></info>
</step>
<step id="GUID-0C01583A-3F0C-474B-9AEC-430D2DDFF8A4-GENID-1-7-1-23-1-1-7-1-6-1-5-1-6-1-3-2-2"><cmd>Construct a buffer
which includes the address and PSM port of the host PC.</cmd>
<stepxmp><codeblock xml:space="preserve">struct TMTPBTRemoteDevice
   {
    TInt64   iDeviceAddr ;
    TUint16  iDeviceServicePort ;
   };
typedef TPckgBuf&lt;TMTPBTRemoteDevice&gt; TMTPBTRemoteDeviceBuf ;</codeblock></stepxmp>
</step>
<step id="GUID-710C87BE-B7E8-48C2-A733-43605232692B"><cmd>Instantiate a service provider, RMTPClient, and connect to the
MTP Server</cmd>
</step>
<step id="GUID-E23CB8FD-DA88-44EC-9AD1-EFFE8A024EC5"><cmd>Once the session between the MTP Client and the MTP Server is connected
the Client calls StartTransport() to load the MTP Bluetooth plug-in and connect
to the host PC. The UID for the Bluetooth Transport plug-in, 0x10286FCB, and
the buffer (the address and PSM of the host PC) are passed to this method. </cmd>
<stepxmp><codeblock xml:space="preserve">TInt error = KErrNone ;
RMTPClient mtp ;
error = mtp.Connect() ;
if ( KErrNone == error )
    {
    TMTPBTRemoteDevice data ;
    data.iDeviceAddr = iDevAddr ; // see example below
    data.iDeviceServicePort = static_cast&lt;TUint16&gt; ( iParser.iPort ) ; // see example below
    TMTPBTRemoteDeviceBuf initAddress( data ) ;

    // Load Bluetooth transport and connect to host PC
    error = mtp.StartTransport( KBTMTPClientUID, initAddress ) ;
    if( error != KErrNone )
       {
       // Error starting Bluetooth transport.
</codeblock></stepxmp>
<info><p>The MTP transport can be stopped as follows:  </p></info>
<stepxmp><codeblock xml:space="preserve">error = mtp.StopTransport( KBTMTPClientUID) ; 
if( error != KErrNone )
   {
   // Error  in stopping Bluetooth transport.
   }

mtp.Close() ;
</codeblock></stepxmp>
</step>
</steps>
<result>       <p>The MTP service is started on the device, and the MTP connection
between the device and the host PC is established.  </p>     </result>
</taskbody><related-links>
<link href="GUID-2247D2A7-5A68-558C-9919-F62C9BCA5B24.dita"><linktext>Enabling
MTP over Bluetooth Tutorial</linktext></link>
</related-links></task>