<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task xml:lang="en" id="GUID-C48890DD-BBFD-53FA-95D6-7F39D9C3C263"><title>Current Network Information Tutorial </title><shortdesc>This tutorial describes how to get the current network information with the telephony API for applications. </shortdesc><prolog><metadata><keywords/></metadata></prolog><taskbody> <steps id="GUID-200DAECA-5ABF-570A-8D51-66BEB8FD28C5"> <step id="GUID-EA612306-767E-52CF-9106-F37D09D9EC18"><cmd/><info>create a new instance of <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony</apiname></xref>  </info> </step> <step id="GUID-E28FA43C-9DCD-503C-B338-A055F957DB45"><cmd/><info>use <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::GetCurrentNetworkInfo()</apiname></xref> to get the current network information </info> </step> <step id="GUID-DB2736DE-3665-5C59-B7BB-5BE160834FA3"><cmd/><info>use <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::EGetCurrentNetworkInfoCancel</apiname></xref> to cancel the asynchronous request </info> </step> <step id="GUID-238778A6-986B-5F82-8B6C-7B5467CFD195"><cmd/><info>use <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::ECurrentNetworkInfoChange</apiname></xref> to get the notification of any changes to the current network information </info> </step> <step id="GUID-2197F674-C205-5D74-A175-941CD4CDA24D"><cmd/><info>pass the enumeration <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::ECurrentNetworkInfoChangeCancel</apiname></xref> to cancel the notification request. </info> </step> </steps> <example id="GUID-294DCE91-58A5-5AFE-90FC-7F8C6E4BE1EF"><title>Current network information example</title> <codeblock id="GUID-26F49E05-4B6E-5C58-B26D-59D4ADC40AD2" xml:space="preserve">#include &lt;e32base.h&gt;
#include &lt;Etel3rdParty.h&gt;

class CClientApp : public CActive
    { 

private:
    CTelephony* iTelephony;
    CTelephony::TNetworkInfoV1 iNetworkInfoV1;
    CTelephony::TNetworkInfoV1Pckg iNetworkInfoV1Pckg;

public:
    CClientApp(CTelephony* aTelephony);
    void SomeFunction();

private:
    /*
       These are the pure virtual methods from CActive that  
       MUST be implemented by all active objects
       */
    void RunL();
    void DoCancel();
    };

CClientApp::CClientApp(CTelephony* aTelephony)
    : CActive(EPriorityStandard),
      iTelephony(aTelephony),
      iNetworkInfoV1Pckg(iNetworkInfoV1)
    {
    //default constructor
    }

void CClientApp::SomeFunction()
    {
    iTelephony-&gt;GetCurrentNetworkInfo(iStatus, iNetworkInfoV1Pckg);
    SetActive();
    }

void CClientApp::RunL()
    {
    if(iStatus==KErrNone)
       {
       CTelephony::TNetworkMode mode = iNetworkInfoV1.iMode;
       if((mode == CTelephony::ENetworkModeCdma2000) || (mode == CTelephony::ENetworkModeCdma95))
          {} // CDMA network; process CDMA-specific information
       }
    }

void CClientApp::DoCancel()
    {
    iTelephony-&gt;CancelAsync(CTelephony::EGetCurrentNetworkInfoCancel);
    }</codeblock> </example> </taskbody></task>