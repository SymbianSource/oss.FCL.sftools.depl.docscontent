<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-BA9A7DF9-258A-5822-9115-E1102D609749"><title>Ownership of reference counting objects</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>A reference counting object, a <codeph>CObject</codeph> type, may be owned by another. This, in turn, may be owned by yet another. </p> <p>Ownership simply reflects a natural relationship. For example, a timer is owned by a thread and a thread is owned by a process. These objects are all instances of classes derived from <xref href="GUID-9230EF62-376A-389C-B720-7C1EDCB7EA97.dita"><apiname>CObject</apiname></xref>. </p> <p>A reference counting object assigns ownership of itself to another reference counting object using <xref href="GUID-9230EF62-376A-389C-B720-7C1EDCB7EA97.dita#GUID-9230EF62-376A-389C-B720-7C1EDCB7EA97/GUID-992FB670-72FC-31CA-9DE9-C7918169C022"><apiname>CObject::SetOwner()</apiname></xref>. For example: </p> <codeblock id="GUID-4D6F9852-44A4-5C3F-8B1B-1BBFA6B83C20" xml:space="preserve">
...
class CMyobject : public CObject
    {
    ...
    };
class CTheOwner : public CObject
    {
    ...
    }
...
CMyobject*    owned;
CTheOwner*    owner;
...
owned-&gt;SetOwner(owner);
</codeblock> </conbody></concept>