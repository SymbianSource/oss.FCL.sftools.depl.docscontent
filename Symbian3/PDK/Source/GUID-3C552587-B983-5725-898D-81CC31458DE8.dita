<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-3C552587-B983-5725-898D-81CC31458DE8"><title>Introduction to streams</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>A stream is a sequence of binary data; it is the external representation of one or more objects.</p> <p>A store is a collection of streams, each of which has a unique identity. An object stores itself by externalizing its data to one or more streams using the write stream interface and restores itself by internalizing from the same streams using the read stream interface.</p> <p>An instance of a class can be externalized to a stream, and internalized from a stream, by adding definitions and implementations for the two functions, <codeph>InternalizeL()</codeph> and <codeph>ExternalizeL()</codeph> to that class.</p> <p>A class that defines and implements these functions is a store-aware class.</p> </conbody></concept>