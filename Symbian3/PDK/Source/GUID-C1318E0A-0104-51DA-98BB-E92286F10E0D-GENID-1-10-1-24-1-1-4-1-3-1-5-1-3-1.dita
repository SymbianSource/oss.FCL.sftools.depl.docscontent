<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-C1318E0A-0104-51DA-98BB-E92286F10E0D-GENID-1-10-1-24-1-1-4-1-3-1-5-1-3-1"><title>Backup and Restore Types</title><shortdesc>Backup works by copying files (installed applications, Secure ID and data) from a Symbian device to a PC. Restore works by copying previously backed up files from the PC to the Symbian device. This section describes the different types of backup and restore. </shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody><p> <b>Note</b>: In each of the following sections, the backup process is explained. The restore process works in the same way, but it is a process from a PC to a device. </p> <section id="GUID-E928ED0E-2E60-5967-B3C9-482615595E36"><title>Base and incremental backup and restore</title> <p>For an easy and quick backup and restore, the Symbian platform implements base and incremental backups. A base backup (sometimes described as a full backup) is a backup of all or part of a drive that includes all the selected files. An incremental backup is a backup of all or part of a drive that only includes files that are new or changed since a previous backup. An incremental backup is smaller than a base backup and takes less time. </p> <p>There are (at least) two possible patterns of use for incremental backups: </p> <ul><li id="GUID-5570892A-5D00-54D5-BFED-DCC3377F2E8B"><p>The first pattern involves taking one base backup and then a series of incremental backups with each increment including only the files that are new or changed since the last increment. This pattern minimizes the time taken for each increment but has some drawbacks for restoring private files (because <i>all</i> the increments are required for restores). </p> </li> <li id="GUID-B30DBC49-EAA7-5235-AB68-D27F30FBCF5D"><p>The second pattern involves taking one base backup and then a series of incremental backups with each increment including only the files that are new or changed since the base backup. In this pattern, the time taken for an incremental backup is not minimized and may approach the time taken for a base backup but a restore operation only requires the base and a single increment. </p> </li> </ul> <p>The choice of which pattern to use is made by the PC software - not by the phone software. </p> <p> <b>Note</b>: An incremental backup cannot be created purely based on a date and time stamp. If a new file is added with an old time-stamp, a time-based increment would omit it. Therefore, any incremental backup requires a list of the files included in the preceding backup. </p> </section> <section id="GUID-BC292762-E8E7-5CAF-B700-BE7D1804DC29"><title>Full and partial backup and restore</title> <p>By default, a backup (whether base or incremental) aims to include all files on a specified drive. In practice, the application developer may only care about data belonging to one or more specific applications. By omitting other data files the time taken for the backup (or restore) is reduced. </p> <p>An additional benefit of partial backup and restore is that a data owner may be able to participate in backup or restore without requiring all file locks to be freed. For example, if a data owner only deals with its own private files, it is possible to back up its data in isolation. This allows backups to have less impact on the application developer. </p> </section> <section id="GUID-C1318E0A-0104-51DA-98BB-E92286F10E0D-GENID-1-10-1-24-1-1-4-1-3-1-5-1-3-1-3-4"><title>Active and passive backup and restore</title> <p>Based on the types of the data owner, backup and restore can be passive, active or active proxy: </p> <ul><li id="GUID-05991A4D-2229-51F2-A7E3-9F9F0742DC53"><p> <b>Active backup</b>: The data owner application or server must implement <xref href="GUID-743D2832-E73A-5184-A85D-306B2A6FFACC.dita">Active Backup Client</xref> and registers with the Backup Engine using a registration file (see <xref href="GUID-9A6273D8-7797-5190-AFEC-1AD113980B84.dita">Backup Registration Files</xref>). The Backup Engine starts the registered process for active backup if not already started. The data owning process then responds to a central signal when a backup or restore operation takes place and actively provides its private data to or receives it from the Backup Engine. This requires that the data-owning process include specific code to take part in backup and restore, and that it must be running when a backup or restore takes place. In this model the data-owning process registers with the Backup Engine but exercises complete control of which data is backed up and restored. </p> </li> <li id="GUID-FE0C6030-08B3-5B1C-B3DC-CCBB4F026363"><p> <b>Passive backup</b>: The data owner application or server registers with the Backup Engine using a backup registration file which lists the files and directories to be backed up. The data-owning process then releases file locks. The files are backed up by the Backup Engine. The Backup Engine has the required capability to access private data files belonging to other processes. </p> <p>Passive backup is very simple for application developers to implement â€“ all that is required is a backup registration file. Active backup requires more effort to implement but provides the data-owning process with more control over the data backed up and restored. </p> </li> <li id="GUID-4B35415A-B0BE-5121-867F-B8B2FB0EA7F6"><p> <b>Active Proxy</b>: Some processes manage data on behalf of other data owners and they are referred to as active proxy data owners. For example, the Central Repository manages data in repositories for other data owners. </p> <p>Active proxy data owners must have a backup registration file that registers them as active data owners. They must implement Active Backup Client methods that allow the Backup Engine to request backup data or supply restore data associated with the secure ID of the actual data owner. The APIs to request or supply data are similar to the Active Backup Client APIs but include an additional argument for the secure ID of the actual data owner. </p> </li> </ul> </section> </conbody><related-links><link href="GUID-796916B2-8B23-5AD8-9DB8-8B0DA7868A62.dita"><linktext>Backup-aware Software (Data Owner)</linktext> </link> <link href="GUID-743D2832-E73A-5184-A85D-306B2A6FFACC.dita"><linktext>Active Backup Client</linktext> </link> </related-links></concept>