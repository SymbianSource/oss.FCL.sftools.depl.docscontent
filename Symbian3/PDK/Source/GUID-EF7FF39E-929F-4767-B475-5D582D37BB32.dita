<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-EF7FF39E-929F-4767-B475-5D582D37BB32" xml:lang="en"><title>Window
server events</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Window server events are an important part of the application framework.
They allow applications to receive information regarding key presses, pointer
activities, application switches, and focus transitions. </p>
<p>Every application has at least a <xref href="GUID-FD2CDEB8-0784-4BE5-A775-170F57D71BBC.dita">UI
controller</xref>, which is the root for all other controls owned by the application.
When an event occurs under the window server, the window server passes the
event to the UI controller and possible other controls, depending on the event
and the architecture of your application.</p>
<p>For more information on the window server, see <xref href="GUID-0C4B86B5-530A-5839-86C1-46E7ABE281E0.dita">Introduction
to the window server</xref>.</p>
<p>The framework provides different functions to handle each type of event
separately. You must implement these functions for the events to be handled
by your application.</p>
<p> All the window server event types are defined in the <parmname>w32std.h</parmname> header,
and are as follows:</p>
<codeblock id="GUID-2F04E088-73B0-4006-903D-4651223E0434" xml:space="preserve">enum TEventCode 
    { 
    EEventNull, 
    EEventKey, 
    EEventKeyUp, 
    EEventKeyDown, 
    EEventModifiersChanged, 
    EEventPointer, 
    EEventPointerEnter, 
    EEventPointerExit, 
    EEventPointerBufferReady, 
    EEventDragDrop, 
    EEventFocusLost, 
    EEventFocusGained, 
    EEventSwitchOn, 
    EEventWindowGroupsChanged, 
    EEventErrorMessage, 
    EEventMessageReady, 
    EEventMarkInvalid, 
    EEventSwitchOff, 
    EEventKeySwitchOff, 
    EEventScreenDeviceChanged, 
    EEventFocusGroupChanged, 
    EEventCaseOpened, 
    EEventCaseClosed, 
    EEventWindowGroupListChanged, 
    EEventWindowVisibilityChanged, 
    EEventKeyRepeat=100, 
    EEventDirectScreenAccessBegin = 200, 
    EEventDirectScreenAccessEnd, 
    EEventHeartbeatTimerStateChange, 
    EEventUser = 1000, 
    }; 

</codeblock>
<p>The following window server events have a special function:</p>
</conbody></concept>