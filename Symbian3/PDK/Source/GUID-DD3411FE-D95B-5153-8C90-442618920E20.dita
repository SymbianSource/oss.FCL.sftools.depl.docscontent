<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-DD3411FE-D95B-5153-8C90-442618920E20" xml:lang="en"><title>How
to reserve space in a fixed flat array</title><shortdesc>To be sure that there is sufficient space available to add new
elements to a fixed flat array, you can use the <codeph>SetReserveL()</codeph> function
to pre-allocate memory.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>When adding elements to a flat array of elements having the same length
(a <codeph>CArrayFixFlat&lt;classÂ T&gt;</codeph> type) the array buffer may be
re-allocated to accommodate the extra elements. This can fail for lack of
memory.</p>
<p>If it is important to guarantee that the process of inserting elements
cannot fail at the time of insertion, then the necessary space in the array
buffer should be reserved in advance. This allows any out of memory situation
to be handled before starting to add elements to the array.</p>
<p><codeph>SetReserveL()</codeph> reserves sufficient space to accommodate
the required number of elements, in this case ten. </p>
<codeblock id="GUID-CF5FED7D-52D9-5247-8E25-DDD5813474E4" xml:space="preserve">CArrayFixFlat&lt;TElement&gt;* fixflat;
fixflat = new (ELeave) CArrayFixFlat&lt;TElement&gt;(3);
...
fixflat-&gt;SetReserveL(10);</codeblock>
<p>If the array already contains five elements, then another five elements
can be added to the array and be guaranteed not to fail for lack of memory.</p>
</conbody></concept>