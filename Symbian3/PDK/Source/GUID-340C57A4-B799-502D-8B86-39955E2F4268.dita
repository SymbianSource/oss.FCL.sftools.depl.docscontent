<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-340C57A4-B799-502D-8B86-39955E2F4268"><title> Creating an ESK File Tutorial</title><shortdesc>This topic describes how to create an ESK file. </shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody><section><title>Introduction</title> <p>An <codeph>ESK</codeph> file is a text file that specifies the order of the protocol modules. The socket server loads the protocol modules. </p> <p>The <codeph>ESK</codeph> file has two sections. The first section specifies the name of the new hook. The second section specifies the name of the file. The name of the file must have the extension and cannot have the full path name. </p> </section> <section><title>Location of the ESK file </title> <p>The location of the ESK file is based on the OS version and the kernel architecture. In the Emulator, the ESK file is found in the location <codeph>winscw\c\private\101F7989\ESock\</codeph>. On the hardware, the ESK file is found in the location <codeph>Z:\private\101F7989\ESock\</codeph>. </p> <p>Symbian OS v9.X and later supports only EKA2 architecture and <codeph>101F7989</codeph> specifies the Secure Identifier (SID). </p> </section> <section><title>Procedure</title> <ol id="GUID-ACE2F663-AFFE-544F-84B3-22BDA622240D"><li id="GUID-DED4A791-FFA9-54DC-AC5D-2286CFC4D397"><p>Create a new <codeph>ESK</codeph> file for every hook that binds the hook to another hook. </p> </li> <li id="GUID-B578104C-3971-59F8-B1E1-1672A1209B22"><p>To bind the hook to other protocols <codeph>bindto</codeph> and <codeph>bindfrom</codeph> directives must be used. The <codeph>bindto</codeph> directive forward data packets from one hook to other hooks and upper layer protocols. The <codeph>bindfrom</codeph> directive receives the data packets from IP6. </p> </li> </ol>  </section> <example><title>ESK file example</title> <p>The following code is an example of an <codeph>ESK</codeph> file: </p> <codeblock id="GUID-93D2CD8F-504F-5588-B4E6-741E0EE69BE6" xml:space="preserve">
[yourhook]
protocols= tcp,ip

[ip]
filename=tcpip6.prt
index=1
</codeblock> </example> <section><title>How to Create an ESK file</title> <p>The following code is an example to create an <codeph>ESK</codeph> file to bind a new hook called myhook: </p> <codeblock id="GUID-0D7F9FD9-53C6-5ED8-B2A6-C2CCEEE4F121" xml:space="preserve">
[sockman]
protocols=myhook,ip6
    
[myhook]
filename=myhook.prt
index=2
bindfrom=ip6
</codeblock> </section> </conbody><related-links><link href="GUID-6998404B-CC51-5337-B04F-8444C32B99C9.dita"><linktext>Writing an Inbound
                Hook</linktext> </link> </related-links></concept>