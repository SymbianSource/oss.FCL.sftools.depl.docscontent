<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-143DAD71-9BCA-52D3-8BC8-AE80DBF05636" xml:lang="en"><title>Using
PTP-IP Controller</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<section><title>Introduction</title><p>The PTP-IP Controller provides the <xref href="GUID-44FEC8DA-8C77-3A2B-B1CF-C0AAD854CDED.dita"><apiname>RPTPIPFramework</apiname></xref> and <xref href="GUID-E5CB0731-9BFC-32F2-951B-5F1C1C41D781.dita"><apiname>MPTPIPController</apiname></xref> classes. The framework class handles the controller using <codeph>RPTPIPFramework::Controller()</codeph>.</p></section>
<section><title>RPTPIPFramework </title><p> The following lists the functionality
of <xref href="GUID-44FEC8DA-8C77-3A2B-B1CF-C0AAD854CDED.dita"><apiname>RPTPIPFramework</apiname></xref> class: </p><ul>
<li><p><b>Instantiate</b>: Use the resource class <codeph>RPTPIPFramework::OpenL()</codeph> to
instantiate the PTP-IP Controller. This class returns an instance of the PTP-IP
Controller. </p></li>
<li><p><b>Destruct</b>: Use the resource class <codeph>RPTPIPFramework::Close()</codeph> to
remove the instance of PTP-IP controller. This class deletes any instance
of <codeph>Listener()</codeph>. </p></li>
<li><p><b>Cancel/Stop</b>: Use <codeph>StopTransport()</codeph> to stop the
Listener and PTP-IP Controller process. <codeph>StopTransport()</codeph> closes
all the sockets that the PTP-IP Controller process owns, and also closes the
client-side session with the MTP server. Use <codeph>PTPIPListener::StopL()</codeph> to
cancel the outstanding APIs. </p></li>
</ul> </section>
<section><title>MPTPIPController</title><p> The following lists the functionality
of <xref href="GUID-E5CB0731-9BFC-32F2-951B-5F1C1C41D781.dita"><apiname>MPTPIPController</apiname></xref> class: </p><ul>
<li><p><b>New blank socket</b>: Use<codeph> RSocket&amp; NewSocketL()</codeph> for
accepting the incoming connection request.</p></li>
<li><p><b>Accept socket</b>: Use <codeph>SocketAccepted(TRequestStatus&amp;
aStatus)</codeph> to notify the PTP-IP Controller that there is an incoming
connection request. It hands over the command or Event Sockets to the appropriate
Socket Handlers. </p></li>
<li><p><b>Set Device GUID</b>: Use <codeph>SetDeviceGUID(TDesC8&amp; aDeviceGUID)</codeph> to
save the Device Globally Unique Identifier (GUID). </p></li>
<li><p><b>Set Device Friendly Name</b>: Use <codeph>SetDeviceFriendlyName(TDesC16*
aDeviceFriendlyName)</codeph> to save the current Device Friendly Name.</p></li>
</ul> </section>
</conbody><related-links>
<link href="GUID-2D872656-7FD3-56D2-B084-8CC84E8453A4.dita"><linktext>MTP over
PTP-IP Overview</linktext></link>
<link href="GUID-7CFE584D-B605-5A3E-9294-84A28003000B.dita"><linktext>Implementing
a Filter</linktext></link>
<link href="GUID-24CF2B94-5F10-57D9-B0D4-E56A80266595.dita"><linktext>Implementing
a Listener</linktext></link>
</related-links></concept>