<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="GUID-24D47C0C-733B-5FF6-821E-D280EF526026" xml:lang="en"><title>Phone
Sub-session Tutorial</title><prolog><metadata><keywords/></metadata></prolog><taskbody>
<context><p>The phone abstracts a particular telephony device. The interface
allows the client to access the status and capabilities of the device. The
interface also ensures that the client is notified of any changes to the status
and capabilities. </p><p>The phone interface is provided by the <codeph>RPhone</codeph> class.</p><p>This
section describes the phone sub-session functions and how they are used.</p><table id="GUID-876C97FB-276C-4F5B-ABA8-B312FC1E7D3D">
<tgroup cols="2"><colspec colname="col1" colwidth="1.01*"/><colspec colname="col2" colwidth="0.99*"/>
<tbody>
<row>
<entry><b>Function</b></entry>
<entry><b>Description</b></entry>
</row>
<row>
<entry><codeph>Open() </codeph></entry>
<entry>Call this function to open a phone sub-session.   Each phone sub-session
opened, must be closed explicitly to prevent memory leaks. </entry>
</row>
<row>
<entry><codeph>Initialise()</codeph></entry>
<entry>Call this function to initialise or re-initialise a phone sub-session.
  You can initialise the sub-session either synchronously or asynchronoulsy. </entry>
</row>
<row>
<entry><codeph>InitialiseCancel()</codeph></entry>
<entry>Call this function to cancel an initialisation request. </entry>
</row>
<row>
<entry><codeph>GetCaps()</codeph></entry>
<entry>Call this function to find the capabilities supported by the phone. </entry>
</row>
<row>
<entry><codeph>NotifyCapsChanges()</codeph></entry>
<entry>Call this function to get the notification of capability changes. </entry>
</row>
<row>
<entry><codeph>NotifyCapsChangeCancel()</codeph></entry>
<entry>Call this function to cancel a capability change notification request. </entry>
</row>
<row>
<entry><codeph>GetStatus()</codeph></entry>
<entry>Call this function to find out the status of the phone modem. </entry>
</row>
<row>
<entry><codeph>EnumerateLines()</codeph></entry>
<entry>Call this function to find the number of lines associated with a phone
sub-session. </entry>
</row>
<row>
<entry><codeph>GetLineInfo()</codeph></entry>
<entry>Call this function to find information about a line sub-session </entry>
</row>
<row>
<entry><codeph>NotifyModemDetected()</codeph></entry>
<entry>Call this function to get notified when a new modem is attached or
an older modem is removed. This function is not useful for the devices with
permanently fixed modem. </entry>
</row>
<row>
<entry><codeph>NotifyModemDetectedCancel()</codeph></entry>
<entry>Call this function to cancel the modem detection notification request. </entry>
</row>
<row>
<entry><codeph>SetEmergencyClient()</codeph></entry>
<entry>Call this function to request memory allocation for a client to handle
emergency condtions. </entry>
</row>
<row>
<entry><codeph>TEmergencyRequest </codeph></entry>
<entry>The telephony server uses the <codeph>aEmergencyCondition</codeph> parameter
to pre-allocate memory. The parameter is a bit mask of emergency type enumerations
defined in the <codeph>TEmergencyRequest</codeph>. </entry>
</row>
</tbody>
</tgroup>
</table></context>


</taskbody></task>