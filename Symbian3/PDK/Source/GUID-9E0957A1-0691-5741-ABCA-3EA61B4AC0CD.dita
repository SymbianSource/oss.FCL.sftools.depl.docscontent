<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-9E0957A1-0691-5741-ABCA-3EA61B4AC0CD" xml:lang="en"><title>Command
Line Kernel Trace Tool Tutorial</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>This document explains how to use the BTrace.exe </p>
<section id="GUID-29D33B54-F2BE-40D0-9D2F-66558C0C8FFC"><title>Purpose</title> <p>This document explains how to use the command
line kernel trace tool to extract trace data from a device. </p> <p><b>Intended
Audience</b> </p> <p>Developers who need to debug a device using the command
line kernel trace tool. </p> <p><b>Required
Background</b> </p> <p>An understanding of the trace macros in EUser. </p> <p><b>Introduction</b> </p> <p>The command line kernel trace tool is a command
line tool which displays trace data produced by the BTrace framework. </p> <p><b>Setup and Configuration Requirements</b> </p> <p>The command line kernel
trace tool is included in all Base Text-Shell ROMs but must be manually added
to other kinds of ROM. </p> </section>
<section id="GUID-F0D74D76-4170-4E65-8841-03CECEE29957"><title>Using Command Line Kernel Trace Tool</title> <p>The following
tasks will be covered in this tutorial: </p> <ul>
<li id="GUID-54E2AE6F-C032-577F-BB2F-2AC27A73D8DC"><p>Using the command line
kernel trace tool to extract trace data. </p> </li>
</ul> <p><b>Basic
Procedure</b> </p> <p>The high level steps to setting a trace are shown here: </p> <ol id="GUID-A2BB2FC6-E7C9-5E2B-9A53-E2D62ED2A205">
<li id="GUID-135E6D0B-47AE-5CB6-9534-B88CAF4FC64A"><p>Determine the name of
the executable to be traced. </p> </li>
<li id="GUID-23569E4A-52E2-5222-BD3D-4F5F5FF1BA34"><p>Determine the category
to be filtered. </p> </li>
<li id="GUID-3FCAECEF-1D54-5650-A1E1-039B4C2CAB87"><p>Select a capture mode. </p> </li>
<li id="GUID-77716523-09EA-5ED2-815F-8C3C6E3CE58F"><p>Choose a file to write
to. </p> </li>
<li id="GUID-69959204-5A29-549A-9B0C-73EED477E5C9"><p>Enter the appropriate
commands into the command line. </p> </li>
</ol> </section>
<section id="GUID-AE55432C-95F7-4E5F-BC10-DFDC191FBF84"><title>Command syntax</title> <p>The syntax for the commands is this: </p> <codeblock id="GUID-34975380-97A0-542F-8459-EB7A361CBD17" xml:space="preserve">BTRACE [-fLIST] [-mN] [-bN] [-d] [filename]</codeblock> <p>where </p> <ul>
<li id="GUID-37A52096-B364-5E6B-BA65-6F6E411144F5"><p> <codeph>LIST</codeph> stands
for a list of comma separated category numbers, </p> </li>
<li id="GUID-ECEBFD03-F333-5D02-83C4-08602C0C4142"><p> <codeph>-mN</codeph> stands
for <codeph>-m</codeph> followed by an integer as defined in <xref href="GUID-9E859841-E8A3-37D5-9A19-BCAA3C700922.dita#GUID-9E859841-E8A3-37D5-9A19-BCAA3C700922/GUID-FD389070-4DFF-39F4-8942-90EFAADC5DCB"><apiname>RBTrace::TMode</apiname></xref>, </p> <ul>
<li id="GUID-BEC2173E-3E31-550E-AAD7-24196939CB08"><p>0 trace disabled and
new traces are discarded on overflow, </p> </li>
<li id="GUID-230EC509-1BCA-52E2-A94D-C23F573AB33F"><p>1 trace enabled and
new traces are discarded on overflow, </p> </li>
<li id="GUID-309F041F-8952-5060-9977-1420E9648478"><p>2 trace disabled and
old traces are discarded on overflow, </p> </li>
<li id="GUID-E6AC8A4A-0581-5C7D-BF98-10718C61AAF9"><p>3 trace enabled and
old traces are discarded on overflow, </p> </li>
</ul> </li>
<li id="GUID-A47CBDC1-2ACF-53A9-8E85-4D86640700C2"><p>-bN stands for the size
in bytes of the capture buffer, </p> </li>
<li id="GUID-A477E02A-49BC-502A-B425-DA3C9495DF3A"><p>-d causes the contents
of the trace buffer to be dumped to the debug port, and </p> </li>
<li id="GUID-EFC2A4F9-6B2A-5AD2-A723-0353C46844C2"><p>filename is the file
to which the trace data is to be written. </p> </li>
</ul> <p>Here is an example command: </p> <codeblock id="GUID-FF0234CE-437D-5827-AAA4-25FC8DF620EC" xml:space="preserve">BTRACE -f1,2,3 -m3 -b1024
MyTestProgram.exe
BTRACE d:\MyLog.txt</codeblock> </section>
</conbody><related-links>
<link href="GUID-7EA3FAD3-9A41-5B2D-8F46-8C8965CE8B97.dita"><linktext>BTraceX Overview</linktext>
</link>
<link href="GUID-7B477BA5-CC5B-56A2-82BC-E1BC0049FECB.dita"><linktext>BTraceC Overview</linktext>
</link>
<link href="GUID-55C05441-33B5-5057-971D-4200345E941E.dita"><linktext>BTraceC Tutorial</linktext>
</link>
<link href="GUID-F27F49B3-4AC1-5517-AF3A-1ADBA1E87A0B.dita"><linktext> Command
Line Kernel Trace Tool                 Overview</linktext></link>
<link href="GUID-5CEA46BA-5AA2-51B4-8BBA-5B6EF141D68A.dita"><linktext> Reading
Kernel Trace Data                 From Chunks Tutorial</linktext></link>
<link href="GUID-7195C3C2-6DF4-56DE-B3C7-00CC10A22AD2.dita"><linktext>Writing Trace
Data to                 Buffers Tutorial</linktext></link>
<link href="GUID-625A116D-185D-57A3-9FB7-B8257F4AB1B2.dita"><linktext> Setting
Trace Filters                 Tutorial</linktext></link>
<link href="GUID-2341CFE1-1CDF-537A-99FB-78C59FFA30CE.dita"><linktext> Requesting
Data                 Notification Tutorial</linktext></link>
</related-links></concept>