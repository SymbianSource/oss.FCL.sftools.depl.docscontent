<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-BBCC018A-BBD3-5609-8FCB-C9BF7EC5F627" xml:lang="en"><title>Dynamic
Behavior</title><shortdesc>This topic describes the dynamic behavior of the domain manager
for state transitions.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>This topic describes the dynamic behavior of the domain manager for state
transitions. </p>
<p>Internally, the power state of a domain is a property that the domain manager
manages through the publish &amp; subscribe mechanism. Applications associated
with a domain subscribe to this property, in effect listening for any changes
that may be made; the domain manager publishes changes to the property. </p>
<p>Applications don't use the publish &amp; subscribe APIs directly; instead
they call <xref href="GUID-26767FE7-3AF2-3E21-9965-915855B7AB55.dita#GUID-26767FE7-3AF2-3E21-9965-915855B7AB55/GUID-3885B73A-D29A-3CE6-8A0B-1448BC5A0BFA"><apiname>RDmDomain::RequestTransitionNotification()</apiname></xref> to
request notification of changes to the domain's power state; this is, in effect,
a request to subscribe to the property. </p>
<p>When the domain manager publishes a change to the domain's power state,
applications are notified of the new value through completion of the notification
request, and can then get the new value by calling <xref href="GUID-26767FE7-3AF2-3E21-9965-915855B7AB55.dita#GUID-26767FE7-3AF2-3E21-9965-915855B7AB55/GUID-C9D18ADA-5C1B-3EF1-ABFB-A3CD4F9859B2"><apiname>RDmDomain::GetPowerState()</apiname></xref>. </p>
<p>Internally, a domain's power state property is identified by the <codeph>KUidDmPropertyCategory</codeph> UID,
and a key which is the value of the domain Id. </p>
<p>The property value itself is an integer made up of an [update number, domain
state] pair where domain state is one of the three values: <xref href="GUID-9EF60A90-6EEA-3F63-9A33-A6C1C3664C17.dita"><apiname>EPwActive</apiname></xref>, <xref href="GUID-D001F4B1-2B9F-3443-9E95-36BC3D4B2DD5.dita"><apiname>EPwStandby</apiname></xref>, <xref href="GUID-60665A9C-B9B1-3589-97A2-1FCBE8C03BBA.dita"><apiname>EPwOff</apiname></xref>,
and the update number is a 16-bit value that is incremented by 1 each time
the property is changed by the domain manager. </p>
<p>Once this property, i.e. the domain's power state, has changed, the domain
manager expects all registered applications to make appropriate changes to
their internal state, and then to acknowledge the change by calling <xref href="GUID-26767FE7-3AF2-3E21-9965-915855B7AB55.dita#GUID-26767FE7-3AF2-3E21-9965-915855B7AB55/GUID-624E1642-5EDA-35D3-BFB3-212BC4456230"><apiname>RDmDomain::AcknowledgeLastState()</apiname></xref>.
The domain manager imposes a time limit on each domain, and expects all applications
within a domain to acknowledge the change within that period. The time value
itself is part of a domain definition, and may vary between domains. Once
the time limit has been reached, the domain manager considers the power state
transition to be complete, whether or not all expected acknowledgements have
been received. Any acknowledgement received after the time limit are ignored. </p>
<fig id="GUID-712F469B-3C88-5209-8D7C-BDDF2C050A59">
<image href="GUID-52298398-A727-5EC2-80A9-4B9704366455_d0e373541_href.png" placement="inline"/>
</fig>
</conbody></concept>