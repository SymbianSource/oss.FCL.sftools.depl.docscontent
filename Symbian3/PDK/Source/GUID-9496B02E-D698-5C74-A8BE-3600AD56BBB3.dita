<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-9496B02E-D698-5C74-A8BE-3600AD56BBB3" xml:lang="en"><title>Simple Example
Device Driver</title><shortdesc>This section presents a simple example device driver.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>This section presents a simple example device driver that uses the <codeph>DLogicalChannel</codeph> framework.
You can use it as a starting point for writing a new driver. </p>
<p>The example is also included in Symbian platform kits in the <filepath>os/kernelhwsrv/kerneltest/e32test/examples/driver1/</filepath> source
code directory. </p>
<p>The driver models reading and writing of data to a hardware device. The
code does not interface to real hardware, but simulates reading and writing
operations using a timer. The only difference between this driver and one
that drives real hardware is the need to define the interrupt IDs and to define
the corresponding Interrupt Service Routines (ISR) to schedule DFCs. </p>
<p>The code included here may by copied and pasted as needed. The example
is made up of the following files: </p>
<ul>
<li id="GUID-34240263-9122-541E-A96D-9B2E0D232B86"><p>Header files: </p> <ul>
<li id="GUID-57D44227-D956-534D-B4ED-6DADF0817199"><p> <xref href="GUID-130575A7-894A-566B-9B8E-902B211BFE7A.dita">driver1.h</xref> implements
the user-side interface to the driver, by providing a class derived from <codeph>RBusLogicalChannel</codeph>. </p> </li>
<li id="GUID-F5478A5B-F782-514D-BCFF-36C49FA95798"><p> <xref href="GUID-0CFC2113-37F9-58B5-AF27-125C23C3087F.dita">driver1_dev.h</xref> declares
the interfaces for the driver's factory and channel classes. </p> </li>
</ul> </li>
<li id="GUID-C24C9CDE-F7FD-5197-B665-6C05D7AB69C7"><p>The LDD implementation: </p> <ul>
<li id="GUID-C2FC4AAC-DECF-5C08-B62D-EC98B8303D81"><p> <xref href="GUID-25E075FD-3CA5-5BF4-9205-38691BB5B54A.dita">driver1_ldd.mmp</xref> </p> </li>
<li id="GUID-330CBDFB-8248-5C78-8A1D-8FD01A10CAF7"><p> <xref href="GUID-8D0CAB9C-F8C2-5D77-8AA2-CC143DEDB350.dita">driver1_ldd.cpp</xref> </p> </li>
</ul> </li>
<li id="GUID-0D1F60D0-0F96-5FF6-99AA-B83F29F32226"><p>The PDD implementation: </p> <ul>
<li id="GUID-E05B9D83-A3AB-5FB3-9145-FE4F7F9C392F"><p> <xref href="GUID-53853B48-838C-5BD2-8B4E-0E6896AEA519.dita">driver1_pdd.mmp</xref> </p> </li>
<li id="GUID-C7DE6BA7-C608-5B78-AC3C-D763EBE67089"><p> <xref href="GUID-3F1E303E-2946-5D71-9D9B-9F4F5B1BC424.dita">driver1_pdd.cpp</xref> </p> </li>
</ul> </li>
<li id="GUID-99E35DB3-DD52-575D-A03B-1E09E6E73A89"><p>Test code: </p> <ul>
<li id="GUID-9BC1F69C-9262-5027-BD5E-75DC8A72CC92"><p> <xref href="GUID-4F81D2F7-7A69-5CFB-8A6D-CE79ED712B6F.dita">driver1_test.mmp</xref> </p> </li>
<li id="GUID-3F337869-0296-5F30-9B98-B3816DCB1DC3"><p> <xref href="GUID-3FB53EE9-7781-5B97-8EEA-B6300EF42334.dita">driver1_test.cpp</xref> </p> </li>
</ul> </li>
</ul>
</conbody></concept>