<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-114C52FE-C8C5-4418-9C73-CEBB228C7542" xml:lang="en"><title>List
types</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Based on the functionality, the following list categories can be identified:</p>
<ul>
<li><p>Menu list </p></li>
<li><p>Selection list</p></li>
<li><p>Markable list </p></li>
<li><p>Multi-selection list</p></li>
<li><p>Setting list </p></li>
<li><p>Hierarchical list</p></li>
<li><p>Hierarchical column list</p></li>
<li><p>Forms</p></li>
</ul>
<p>Lists belonging to one category may have different graphical appearances.
See <xref href="GUID-CB548959-A1D6-4585-B8E3-B09E37E0CB43.dita">List layouts</xref> for
information about different looking list items.</p>
<p>On the whole, list items and command should not be mixed, but in cases
where some command in a list would significantly boost efficiency and user
experience, it is perfectly acceptable to add one command onto the list. It
is important that there is no more than one command per list, and that the
command is placed as the first item on that list.</p>
<section id="GUID-6EF8CB10-EDF4-4457-86D8-F0DDD5ECFEAD"><title>Using
different list types in applications</title><p>The APIs to use
for lists are the <xref format="html" href="specs/guides/Lists_API_Specification/Lists_API_Specification.html" scope="peer">Lists API</xref> (for menu, selection, markable, and multi-selection
lists) and the <xref format="html" href="specs/guides/Hierarchical_Lists_API_Specification/Hierarchical_Lists_API_Specification.html" scope="peer">Hierarchical lists API</xref> (for hierarchical and hierarchical
column lists). For implementation information, see <xref format="htrml" href="specs/guides/Lists_API_Specification/Lists_API_Specification.html#Lists_API_Specification.topic3" scope="peer">Using the Lists API</xref> and <xref format="html" href="specs/guides/Hierarchical_Lists_API_Specification/Hierarchical_Lists_API_Specification.html#Hierarchical_Lists_API_Specification.topic3" scope="peer">Using the Hierarchical lists API</xref>.</p><p>For forms, the
API is the <xref format="html" href="specs/guides/Form_API_Specification/Form_API_Specification.html" scope="peer">Form API</xref>. For implementation information, see <xref format="html" href="specs/guides/Form_API_Specification/Form_API_Specification.html#Form_API_Specification.topic3" scope="peer">Using the Form API</xref></p><p>For list types other than the
hierarchical lists, the flags used to create the different list types in resource
files, are described in <xref format="html" href="specs/guides/Lists_API_Specification/Lists_API_Specification.html#Lists_API_Specification.topic2.2.6" scope="peer">Listbox types in listbox resource definition</xref>.</p></section>
<example><p/><p><b>See also</b>:</p></example>
</conbody></concept>