<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-699E6012-92E0-56A2-943A-B6282E6A86B5"><title>How to Configure Parity Error Control: Tutorial</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>This tutorial discusses the use of parity errors. </p> <p>While it is normal in modern systems with error-corrected links to set serial ports up with no parity, there will be occasions when enabling detection of parity errors is both useful and desirable. </p> <p>There are a number of different ways that parity errors can be handled: </p> <ul><li id="GUID-B35ED69F-79CD-5C98-A773-65F2AA734196"><p>ignore parity errors and discard any bytes with bad parity </p> </li> <li id="GUID-B4098D3D-F95D-53AA-973F-8ADE59052E21"><p>replace bytes received with bad parity with the <xref href="GUID-5204369B-5112-391B-B5CF-51ECCDDC40B6.dita"><apiname>TCommConfigV01.iParityErrorChar</apiname></xref> character </p> </li> <li id="GUID-100CF9BE-9ABF-562C-81A6-C88D9C4B2A29"><p>immediately complete any read operation with a <xref href="GUID-6B4EB479-5996-3D3D-8613-0B4E1C199AEB.dita"><apiname>KErrCommsParity</apiname></xref> error </p> </li> </ul> <p>Use the <codeph>TCommConfig</codeph> package to change the value of <codeph>iParityError</codeph> and <codeph>iParityErrorChar</codeph> to change the parity settings. </p> <p>Note: <codeph>iParityError</codeph> can be masked with <xref href="GUID-4CBEE430-7F2A-3809-8A6F-B6CE54E19422.dita"><apiname>KConfigXonXoffDebug</apiname></xref>. This has no effect on parity error control. It is an internal developmental debugging control which forces the <keyword>high water mark</keyword> to software flow control level of 5 bytes below 50% level instead the usual 75% level, irrespective of whether software flow control is enabled or not. </p> </conbody></concept>