<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-E14C1D1E-B7E5-5244-8BE7-386C542AAB58"><title>HTTP string table</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>HTTP Client installs a standard string table, defining enumerations in the HTTP namespace. It is used to define method names, header names, session and transaction property names, parameter names for headers, and commonly used MIME types (used for the <codeph>Accept</codeph> and <codeph>Content-Type</codeph> headers). </p> <p>Strings in the string table are constructed, copied, and freed using <xref href="GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B.dita"><apiname>RStringPool</apiname></xref>. The following are the main points to note: </p> <ul><li id="GUID-48D0F4CA-C885-5A61-A6EA-7F7AC05EBE5C"><p>Strings taken from the HTTP string table are accessed using <xref href="GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B.dita#GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B/GUID-D6F8ADC0-2079-32A9-BB91-405886DCE2CA"><apiname>RStringPool::String()</apiname></xref> or <xref href="GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B.dita#GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B/GUID-F4DB32B1-AA81-39FB-BC91-4D1C529F9DBC"><apiname>RStringPool::StringF()</apiname></xref>; they do not need to be closed. </p> </li> <li id="GUID-713532CC-0B35-549D-B5D9-D0F46DA78AEB"><p>Strings not in the HTTP string table must be opened using <xref href="GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B.dita#GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B/GUID-EC2CEE9F-3103-35CD-B09A-A0A308ED0D5B"><apiname>RStringPool::OpenStringL()</apiname></xref> or <xref href="GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B.dita#GUID-4BF6ECD3-5FB3-3A6A-B9CE-98871BD0812B/GUID-59537E09-280E-3EAD-8EE9-591FDCC7540D"><apiname>RStringPool::OpenFStringL()</apiname></xref>, and must be closed after use. </p> </li> <li id="GUID-7F6977B1-F18A-559C-814D-71AB3E481316"><p>Strings can be directly compared, whether <xref href="GUID-86301BC4-2A98-3F9B-BAE3-A6DE8D3BD632.dita"><apiname>RString</apiname></xref> or <xref href="GUID-B886F0AA-DB9C-356C-9B96-33252820F93E.dita"><apiname>RStringF</apiname></xref>. Comparison is efficient and quick. </p> </li> <li id="GUID-6011127B-7574-5D11-80BE-061C40387DBD"><p>Strings are not freed from memory until all instances that were <codeph>Open()</codeph> ed have been <codeph>Close()</codeph> d. </p> </li> <li id="GUID-2B6CD08C-C1E0-5A27-B7E5-7E4C7CD81346"><p>The HTTP string pool is automatically created when the first session is started, and can be accessed using the handle returned by <xref href="GUID-651801A5-5473-3856-9647-46823598C5C1.dita#GUID-651801A5-5473-3856-9647-46823598C5C1/GUID-F84F563A-28CA-3CBA-80CE-603DD381F8D5"><apiname>RHTTPSession::StringPool()</apiname></xref>. </p> </li> </ul> </conbody></concept>