<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-15967AB3-B03C-5DAA-A784-D25ABFFC995E" xml:lang="en"><title>File
Stores example code</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>These examples demonstrate aspects of streaming and file stores. </p>
<section><title>Download</title> <p>Download the examples: </p><p><xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-9f94a7e6-3189-40ed-abfd-65ee28cba96c.zip" scope="external">WriteDirectFS.zip</xref>, <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-756e5358-63aa-4a1a-927f-363114b2c8e3.zip" scope="external">WritePermFS1.zip</xref> and <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-85ccfa50-732b-4080-993e-f6b025543326.zip" scope="external">WritePermFS2.zip</xref></p><p>Download the additional
files required for all the examples: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.zip" scope="external">CommonFramework.zip</xref>.</p> </section>
<section id="GUID-8C6125A5-AB9A-5D5D-BED6-7EE040400CA4"><title>WriteDirectFS:
externalising a network of objects to a direct file store</title> <p><b>Example
code</b> </p><p>Click: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-9f94a7e6-3189-40ed-abfd-65ee28cba96c.html" scope="peer">browse</xref> to view the example code.</p><p>View the additional
files: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.html" scope="peer">CommonFramework</xref>.</p> <p><b>Description</b> </p> <p>This
example externalises a network of objects to a direct file store and then
internalises them again. It demonstrates the persistence of a direct file
store and the idea of the root stream. </p><p><b>Class summary</b></p><ul>
<li><p><xref href="GUID-346D4908-15C7-3F15-945F-D561E774022D.dita"><apiname>RStoreWriteStream</apiname></xref> - Supports the writing of a stream
to a store.</p></li>
<li><p><xref href="GUID-4FA6EE6C-5B4E-39E0-B888-ABDE19985976.dita"><apiname>RStoreReadStream</apiname></xref> - Supports the opening and manipulation
of an existing stream in a store.</p></li>
<li><p><xref href="GUID-8B713854-7858-3E02-8A1C-B3E6C1C9EA85.dita"><apiname>CDirectFileStore</apiname></xref> - Direct file store.</p></li>
</ul> </section>
<section id="GUID-BB30B109-E407-5253-841F-5BBBA4079A06"><title>WritePermFS1:
externalising a network of objects to a permanent file store</title> <p><b>Example
code</b> </p><p> Click: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-756e5358-63aa-4a1a-927f-363114b2c8e3.html" scope="peer">browse</xref> to view the example code.</p> <p><b>Description</b> </p> <p>This
example constructs and writes a network of objects to a permanent file store.
Each object is then loaded back in, one at a time, its content displayed at
the console and then destroyed. </p><p><b>Class summary</b></p><ul>
<li><p><xref href="GUID-346D4908-15C7-3F15-945F-D561E774022D.dita"><apiname>RStoreWriteStream</apiname></xref> - Supports the writing of a stream
to a store.</p></li>
<li><p><xref href="GUID-4FA6EE6C-5B4E-39E0-B888-ABDE19985976.dita"><apiname>RStoreReadStream</apiname></xref> - Supports the opening and manipulation
of an existing stream in a store.</p></li>
<li><p><xref href="GUID-A61CA45C-B19A-33FC-8233-76530DCDF03C.dita"><apiname>CPermanentFileStore</apiname></xref> - Permanent file store.</p></li>
</ul> </section>
<section id="GUID-394D948C-13AB-505F-97E8-5AB3DCAEED45"><title>WritePermFS2:
externalising a network of objects to a permanent file store</title> <p><b>Example
code</b> </p><p>Click: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-85ccfa50-732b-4080-993e-f6b025543326.html" scope="peer">browse </xref> to view the example code.</p><p><b>Description</b> </p> <p>This
example shows further use of a permanent file store. </p><p><b>Class summary</b></p><ul>
<li><p><xref href="GUID-346D4908-15C7-3F15-945F-D561E774022D.dita"><apiname>RStoreWriteStream</apiname></xref> - Supports the writing of a stream
to a store.</p></li>
<li><p><xref href="GUID-4FA6EE6C-5B4E-39E0-B888-ABDE19985976.dita"><apiname>RStoreReadStream</apiname></xref> - Supports the opening and manipulation
of an existing stream in a store.</p></li>
<li><p><xref href="GUID-A61CA45C-B19A-33FC-8233-76530DCDF03C.dita"><apiname>CPermanentFileStore</apiname></xref> - Permanent file store.</p></li>
</ul> </section>
</conbody></concept>