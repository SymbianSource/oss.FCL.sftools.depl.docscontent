<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-9C6D94B2-8F03-5A4D-9AEC-7C3FEA0E1ACA" xml:lang="en"><title>Dictionary
read streams</title><shortdesc>How to read from a stream located in a dictionary store.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Applications must construct an <codeph>RDictionaryReadStream</codeph> object
before they can read from a stream located in a dictionary store. </p>
<p>The dictionary store in which the stream is located and the UID associated
with that stream are specified when the <codeph>RDictionaryReadStream</codeph> is
opened.</p>
<p>The following code fragment is typical. <codeph>store</codeph> is a pointer
to an opened dictionary store. <codeph>RDictionaryReadStream::OpenLC()</codeph> opens
the stream associated with the UID <codeph>theuid</codeph>:</p>
<codeblock id="GUID-DDAF541C-43E2-54D0-A4BD-1484F208A6F1" xml:space="preserve">...
TUid theuid;
CDictionaryStore* store;
...
RDictionaryReadStream instream;
instream.OpenLC(*store,theuid);
TSomeData data;
instream &gt;&gt; data;
CleanupStack::PopAndDestroy();
...</codeblock>
</conbody></concept>