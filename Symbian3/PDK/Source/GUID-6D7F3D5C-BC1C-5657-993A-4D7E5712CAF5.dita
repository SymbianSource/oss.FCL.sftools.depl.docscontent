<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-6D7F3D5C-BC1C-5657-993A-4D7E5712CAF5" xml:lang="en"><title>start
stringtable</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p> <codeph>start stringtable</codeph>  <varname>source-file</varname>  </p>
<p>[<codeph>exportpath</codeph>  <varname>location</varname>] </p>
<p>[<codeph>headeronly</codeph>] </p>
<p> <codeph>end</codeph>  </p>
<p>A <codeph>start stringtable</codeph> section specifies the source file
for the string table. A string table is a collection of string identifiers
with corresponding values. The source file is a simple text file with the
file extension <filepath>.st</filepath>, and is used to generate the <filepath>.cpp</filepath> and <filepath>.h</filepath> files
which contains the string constants required for the program. The header file
location is added to the list of <xref href="GUID-50941508-B999-5FCC-B2B9-F29F5F2CA4C1.dita">userinclude</xref> directories
so that the source files may include the generated header. The <filepath>.cpp</filepath> file
is added to the list of source files, which are built into a component. </p>
<p>For more information on string tables, refer to <xref href="GUID-27340D18-A31D-512E-920A-B06C784A978A.dita">String
Pools</xref>. </p>
<p> <b>Note:</b> The <filepath>.cpp</filepath> file need not be added explicitly
into the list of sources, as this will be done implicitly while building the
component. </p>
<p>The optional <codeph>exportpath</codeph>  <varname>location</varname> specifies
a directory location for the generated header file. </p>
<p>The optional <codeph>headeronly</codeph> keyword causes only the <filepath>.h</filepath> file
to be generated, and no <filepath>.cpp</filepath> files are generated or included
into the project. If the <codeph>exportpath</codeph> is specified, the <filepath>.h</filepath> file
is copied to the specified location. </p>
<example><p>This example will generate <filepath>HttpStringConstants.cpp</filepath> and <filepath>HttpStringConstants.h</filepath> using
the <filepath>HttpStringConstants.st</filepath> file, and export the <filepath>HttpStringConstants.h</filepath> to
the <filepath>\epoc32\include</filepath> directory.</p><codeblock id="GUID-C38AB36E-AEE7-5D70-A7BF-929B07DFB234" xml:space="preserve">START STRINGTABLE HttpStringConstants.st
EXPORTPATH    \epoc32\include
END
</codeblock></example>
</conbody></concept>