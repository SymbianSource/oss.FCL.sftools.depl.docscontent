<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-67B311E5-5522-5367-BEC2-F5C9285AC99D"><title>Architecture of the Unified Trace Solution</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>The full Unified Trace solution consists of the following components: </p> <ul><li id="GUID-547E35C6-7C41-5C68-8612-24B783B67DCC"><p> <b>UTrace OS component:</b> Includes UTrace API and trace configuration tool. </p> </li> <li id="GUID-A27CE047-9077-5823-9F46-AB70CE412BA9"><p> <b>UTrace non-OS component:</b> Includes host-side analysis tools, a command line interface, USB transport, and the host-side configuration. </p> </li> </ul> <p>The following diagram illustrates the high-level architecture of the Unified Trace solution. </p> <fig id="GUID-027F45C6-B1B7-5AA2-84DD-09AE5A350075"><title>
          Unified Trace solution architecture  
        </title> <image href="GUID-9C5A4B75-1A58-568E-AAB4-B44B61586037_d0e703702_href.png" placement="inline"/></fig> <table id="GUID-EF6DECE2-1DCF-50B7-BAEA-BF291357FD0D"><tgroup cols="2"><colspec colname="col0"/><colspec colname="col1"/><tbody><row><entry><p> <b>Carbide.c++</b>  </p> </entry> <entry><p>Provided by Nokia </p> </entry> </row> <row><entry><p> <b>TPTP</b>  </p> </entry> <entry><p>Provided by Eclipse </p> </entry> </row> <row><entry><p> <b>Trace viewer</b>  </p> </entry> <entry><p>Uses the TPTP module to view traces in CBE format. </p> </entry> </row> <row><entry><p> <b>Trace config API</b>  </p> </entry> <entry><p>Java API-Windows service and host-side device driver to remote configure trace configuration tool </p> </entry> </row> <row><entry><p> <b>BTrace</b>  </p> </entry> <entry><p>Filters traces coming from UTrace </p> </entry> </row> <row><entry><p> <b>Buffer</b>  </p> </entry> <entry><p>BTrace.dll-provides an API to access the BTrace buffer, this implements the BTrace handler. </p> </entry> </row> </tbody> </tgroup> </table> <p>The tracing process consists of three basic phases: </p> <ul><li id="GUID-8191AF4C-DACF-51D1-9773-571AC3E494F1"><p> <b>Instrumentation</b>  </p> <ul><li id="GUID-C740802A-38C3-546B-B9A4-61E8C4C119DD"><p>Inserting trace macros in the application or component code using the UTrace API. Each trace is identified by a primary filter, and optionally a secondary filter. </p> </li> <li id="GUID-42C06693-98C6-5034-9298-EE63BA16B5C9"><p>Compiling and transferring the application to the target. </p> </li> </ul> </li> <li id="GUID-86E744FC-835B-55FE-BC46-5AA77CC9A6FF"><p> <b>Tracing</b>  </p> <ul><li id="GUID-432BB07C-495A-59D2-87D5-0A3C06B679D4"><p>Enabling the logging of the traces on the target using trace configuration tool. The trace configuration tool should use filters to decide which traces are to be logged and which are to be discarded. </p> </li> <li id="GUID-091AF5FF-CBFB-5332-86CA-39E0FBF792DE"><p>Starting the application to enable tracing. </p> </li> <li id="GUID-40808498-D0C8-5293-8785-82BBC1A9E9A9"><p>Stopping the application to log the traces. </p> </li> </ul> </li> <li id="GUID-86C684A1-191B-519C-BFAC-EF3CC5B3976F"><p> <b> Analysis</b>  </p> <ul><li id="GUID-EB2D6CDB-A3F6-5720-8BC5-8FE9C7B3984B"><p>Transferring the resulting log file to a PC. </p> </li> <li id="GUID-CEC1248C-3545-52E0-B261-A3E3A4D85F68"><p>The logs could then be processed, analysed and viewed on screen in a human-readable format. A Trace Environment Developer can provide their own analysis tool, or the Carbide.c++ or Eclipse-based TPTP Log Viewer is available in particular CustKits. </p> </li> </ul> </li> </ul> </conbody></concept>