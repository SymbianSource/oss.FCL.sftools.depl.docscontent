<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-F535B464-3125-549B-9130-E59B64C4B865"><title>Stream dictionaries</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>A stream dictionary is an object of type <codeph>CStreamDictionary</codeph>. It maintains a list of two-way associations between a UID and a stream ID.</p> <p>Each <codeph>TUid</codeph> and <codeph>TStreamId</codeph> pair forms an entry in an array. The <codeph>CStreamDictionary</codeph> class provides member functions to manage these entries, for example, to add a new entry or to change the stream ID associated with a UID.</p> <p>Applications often have a need to identify a stream associated with a particular purpose. That purpose is, itself, identified by UID. A stream dictionary allows the stream ID corresponding to a specific UID to be looked up.</p> <p>The stream dictionary can be externalised. It is often externalised as the root stream of a store, after all the other streams have been written. When the store is opened, the stream dictionary can then be internalised from the root stream, and other streams looked up based on the associated UIDs.</p> <p>System initialisation files use stream dictionaries</p> <p><b>See also</b> </p> <p><xref href="GUID-79F39C97-75E8-5DB1-B976-8FE76E6E60C9.dita">Dictionary stores</xref> </p> <p><xref href="GUID-95DF676F-F9BA-56E0-A4DE-E68B42C06932.dita">UID Manipulation</xref> </p> </conbody></concept>