<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-2D8093D7-58A8-59CD-96EF-5B0AAE029478" xml:lang="en"><title>Using
Lock()</title><shortdesc>Explains how to use the <codeph>Lock()</codeph> function to delay
the events.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>We can ask for a timer event to occur at a particular twelfth in the next
second using the <codeph>Lock()</codeph> function.</p>
<codeblock id="GUID-E6153332-DB58-55CF-959D-E3D5DC3FD47D" xml:space="preserve">...
TRequestStatus stat;
TTimerLockSpec lockspec;
RTimer timer;
...
timer.Lock(lockspec,stat)
...</codeblock>
<p>The current time is A seconds + B milliseconds, then </p>
<codeblock id="GUID-DF7B584A-9D21-55A1-883A-1CEA54B733DE" xml:space="preserve">Lock(EThreeOclock, stat);</codeblock>
<p>will complete at C seconds + 3/12 milliseconds, where C=A, if B&lt;3/12milliseconds
or C=A+1.</p>
</conbody></concept>