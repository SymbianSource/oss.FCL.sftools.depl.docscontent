<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-39897348-B27A-5C02-B65C-C26D122BCAE4" xml:lang="en"><title>Tables</title><shortdesc>Describes how to manipulate tables in the database.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Two classes and a template class are used to manipulate tables in the database.</p>
<p>The <codeph>RDbTable</codeph> class is used to manipulate a named table
in the database, providing access to the data as a rowset. A named index can
be used to order the rowset, and to provide fast key-based row retrieval from
the table.</p>
<p>The <codeph>TDbSeekKey</codeph> class is used to pass a key value to <codeph>RDbTable::SeekL()</codeph>,
for lookup in the currently active index on that rowset. It can store a key
value of any type. </p>
<p><codeph>TDbSeekKey</codeph> can only hold a single-column key. Use the <codeph>TDbSeekMultiKey&lt;TInt
S&gt;</codeph> templated class to allow multi-column indexes to be searched using
multi-column key values. The template parameter <codeph>S</codeph> specifies
the maximum number of column values that can be added to the key value.</p>
</conbody></concept>