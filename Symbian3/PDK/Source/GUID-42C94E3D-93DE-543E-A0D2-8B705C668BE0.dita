<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-42C94E3D-93DE-543E-A0D2-8B705C668BE0"><title>Base Services Utility Library Overview</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>Base Services Utility Library (BSUL) is a Symbian platform component used by the system servers (such as messaging server, sensor server and so on) to sanitise and validate the Inter-Process Communication (IPC) messages. It can also be used to cache F32 drive information and base64-based encoding and decoding. </p> <section><title>BSUL details</title> <p>The DLL that provides the functionality is <codeph>bsul.dll</codeph> and the library to which your code must link is <codeph>bsul.lib</codeph>. </p> </section> <section><title>Description</title> <p>System servers are vulnerable to IPC attack if they do not sanitise the incoming IPC messages. This might lead to the system server to panic that forces the device to reboot, and make the error tracking difficult. To handle these issues, BSUL provides IPC message sanitisation mechanism to improve the robustness under the IPC attack. </p> <p>A system server must use BSUL to sanitise incoming IPC messages and validate them against the constraints in a message schema used to store the messages. It can also be used for caching drive information, base64-based encoding and decoding, handling errors and logging. </p> </section> <section><title>APIs</title> <p>The key classes of BSUL are: </p> <table id="GUID-80A27AF8-8FA7-5B97-9A5D-4E6E7D7B1A36"><tgroup cols="2"><colspec colname="col0"/><colspec colname="col1"/><thead><row><entry>API</entry> <entry>Description</entry> </row> </thead> <tbody><row><entry><p> <xref href="GUID-45AFEB13-9D05-365D-A2A6-A34EF48A494D.dita"><apiname>CClientMessage</apiname></xref>  </p> </entry> <entry><p>Wrapper around <xref href="GUID-D7D422D3-65E5-378B-8F52-6485BC5603A0.dita"><apiname>RMessage2</apiname></xref> that provides message validation and error handling to improve robustness of system servers under IPC attack. </p> </entry> </row> <row><entry><p> <xref href="GUID-5A4F3BD2-12F3-3FC3-9B74-8CC3FBF012E5.dita"><apiname>CCachedDriveInfo</apiname></xref>  </p> </entry> <entry><p>Cache F32 drive information. </p> </entry> </row> <row><entry><p> <xref href="GUID-FD32794A-A20A-3B64-98A8-8D5D8C975124.dita"><apiname>Base64Codec</apiname></xref>  </p> </entry> <entry><p>Base64-based encoding and decoding. </p> </entry> </row> </tbody> </tgroup> </table> </section> </conbody><related-links><link href="GUID-3B2FB34B-B4FC-5273-AE35-DADA2FA4C419.dita"><linktext>Using ClientMessage Framework</linktext> </link> </related-links></concept>