<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-1EDE641E-EF8C-542D-A7B3-7C496D41EF3D"><title>Thread and process ID</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>Each thread and process is allocated an ID which is unique across all threads and processes. The ID is allocated when the thread or process is created.</p> <p>The main motivation for the ID is to provide assistance for debuggers; it provides an easy way to identify threads and processes.</p> <p>In general, applications and servers can use IDs for thread and process identification or, indeed, for whatever purpose that suits them.</p> <p>While a thread ID is a property of the thread, it can be retrieved from the thread by calling RThread::Id(). The ID is encapsulated by a TThreadId object that is returned by the function.</p> <p>The <codeph>TThreadId</codeph> class provides <codeph>==</codeph> and <codeph>!=</codeph> operators for comparing two thread IDs.</p> <p>The process ID is similar; it can be retrieved from the process by calling RProcess::Id(), and is encapsulated by a TProcessId object returned by the function.</p> </conbody></concept>