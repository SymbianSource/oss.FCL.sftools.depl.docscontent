<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-0970A970-6E56-556C-B032-B7EAF8ABBBA6" xml:lang="en"><title>How
to use CleanupReleasePushL()</title><shortdesc><codeph>CleanupReleasePushL()</codeph> pushes a <codeph>TCleanupItem</codeph> onto
the cleanup stack ready for <codeph>CleanupStack::PopAndDestroy()</codeph> to
release.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>The <codeph>CleanupReleasePushL()</codeph> templated function constructs
and pushes a <codeph>TCleanupItem</codeph> onto the cleanup stack. When <codeph>CleanupStack::PopAndDestroy()</codeph> is
called, the <codeph>Release()</codeph> member function of the object encapsulated
by the <codeph>TCleanupItem</codeph> is called.</p>
<codeblock id="GUID-5CBFFD7F-68B3-55E5-9518-2A2899710AAA" xml:space="preserve">...
RTestThree three;
CleanupReleasePushL(three);
...
CleanupStack::PopAndDestroy();
...
</codeblock>
<p>The <codeph>TCleanupItem</codeph> object encapsulates a reference to the <codeph>RTestThree</codeph> object;
the cleanup operation is the static function <codeph>Release()</codeph> of
the templated class <codeph>CleanupRelease&lt;class T&gt;</codeph>. This is implemented
by simply calling the <codeph>Release()</codeph> member function of <codeph>RTestThree</codeph>.
This means that <codeph>RTestThree</codeph> must define or inherit a member
function <codeph>Release()</codeph> which performs whatever clean up is required.</p>
</conbody></concept>