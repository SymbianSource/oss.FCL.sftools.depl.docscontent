<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="GUID-3490A064-8421-4ABB-9E93-99A5565CF4D7" xml:lang="en"><title>Additional
Connection Preferences</title><shortdesc>Extended Connection Preferences API allows applications to set
a few additional preferences that customize the connection establishment.
These preferences, when used with specific SNAP ID, SNAP Type , IAP or connection
selection dialog enable the applications to have more control on the connection.</shortdesc><prolog><metadata><keywords/></metadata></prolog><taskbody>
<context id="GUID-9A074511-667D-43E5-80D8-3FDAE3321E09"><p>The additional
connection preferences that can be set using the Extended Connection
Preferences API are listed below. One or more of the preferences can be set
based on connection establishment requirements. For more details on the restrictions
regarding the preferences that can be used jointly, refer <xref href="GUID-B78E8AC0-CDC8-3DEC-AF3C-98C8994DA34A.dita"><apiname> TExtendedConnPref </apiname></xref> .</p></context>
<steps-unordered id="GUID-4DD07DEC-6017-4237-BE46-1D69E5FBD744-GENID-1-12-1-17-1-1-4-1-1-5-1-1-7-1-3-2">
<step id="GUID-81D0BBB7-82EA-46B5-98A6-1BD426777AA5"><cmd><b>Define Bearer
Filtering</b></cmd>
<info><p>Extended Connection Preferences API allows the application to limit
the used bearers.</p><p>In the below example, only WLAN bearer is allowed.</p><codeblock xml:space="preserve">preferences.SetBearerSet( TExtendedConnPref::EExtendedConnBearerWLAN );
</codeblock></info>
</step>
<step id="GUID-E819B95A-90D2-4E80-89B5-3A3EAF1BCBDB"><cmd><b>Disallow Automatic
Bearer Switching</b></cmd>
<info><p>The established connection can be broken by the middleware when a
better connection is available. For example, when a known WLAN IAP is available,
the established 3G connection is disconnected. This is also known as Forced
Roaming. Forced Roaming is enabled by default.</p><p> The sudden disconnection
can be disabled by the applications prior to connection establishment. </p><codeblock xml:space="preserve">preferences.SetForcedRoaming( EFalse );</codeblock><p>Forced
roaming applies only on connections made to the Internet SNAP.</p></info>
</step>
<step id="GUID-85E14D5A-4F68-49E9-9DBB-1E52EFA09289"><cmd><b>Inform middleware
that application handles contention</b> </cmd>
<info><p>When there are multiple active connections and there is a requirement
for a new connection , the list of active connections are displayed and the
user selects the connection to be disconnected. This accommodates the new
connection request to be processed. </p><p>If the Disconnect dialog is disabled,
the contention situation is not exposed to the user and the application handles
 the contention by itself.</p><codeblock xml:space="preserve">preferences.SetDisconnectDialog( EFalse );</codeblock></info>
</step>
<step id="GUID-0C8D3720-047B-4449-9645-6788ED6E0BE8"><cmd><b>Disable connecting
soft notes and Queries</b></cmd>
<info><p>During connection establishment , pop-ups(soft notes) indicate the
state of the connection providing visibility and cost awareness to the user.
The application can disable these soft notes using the Extended Connection
Preferences API. </p><p>The application can start a connection and roam between
different bearers without any notes about connection state shown to the user.</p><codeblock xml:space="preserve">preferences.SetNoteBehaviour( TExtendedConnPref::ENoteBehaviourConnDisableNotes );</codeblock><p>The application can start a connection and roam between different bearers
without displaying any queries to the user but inform the user on the events
with dialogs or notes. The user is able to see the notes about connection
state. Queries that need user confirmation are not exposed to the user.</p><codeblock xml:space="preserve">preferences.SetNoteBehaviour( TExtendedConnPref::ENoteBehaviourConnDisableQueries ); 
</codeblock><p>The application can start a connection and roam between different
bearers without any queries, dialogs or notes. The connection state details
are not exposed to the user.</p><codeblock xml:space="preserve">preferences.SetNoteBehaviour( TExtendedConnPref::ENoteBehaviourConnSilent );</codeblock></info>
</step>
</steps-unordered>
</taskbody></task>