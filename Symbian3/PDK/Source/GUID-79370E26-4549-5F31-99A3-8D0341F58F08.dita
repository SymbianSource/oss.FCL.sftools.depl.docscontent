<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-79370E26-4549-5F31-99A3-8D0341F58F08" xml:lang="en"><title>Retrieving
Versions and Device Type Information </title><abstract><p>This section explains the tasks that can be performed using System
Utilities such as retrieving software and language package versions and device
type information. </p></abstract><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-1884087E-5436-4E3D-A730-64AAF0212595"><title>Retrieving
the current software version</title><p>To retrieve the software version of
the device, call <codeph>GetSWVersion()</codeph> function. This function sets
the parameter passed to a Unicode string holding the current software version. </p><codeblock xml:space="preserve">TBuf&lt;KSysUtilVersionTextLength&gt; version;
if( SysUtil::GetSWVersion( version ) == KErrNone )
     {     // Use the version string.     ...
     }
</codeblock></section>
<section id="GUID-8B03C857-EEE3-4E30-8E64-F6E71919D484"><title>Retrieving
the current software version for the current language package</title><p>To
retrieve the software version of the device which is compatible with the currently
installed language package, call <codeph>GetLangSWVersion()</codeph>. This
function sets the parameter passed to a Unicode string holding the required
software version. </p></section>
<section id="GUID-B887AAAC-F785-499A-98EB-54D14C1350A9"><title>Retrieving
the current language package version</title><p>To retrieve the version of
the currently installed language package, call <codeph>GetLangVersion()</codeph>.
This function sets the parameter passed to a Unicode string holding the language
package. </p><p><b>Note</b>: The following functions read data from text files: </p><ul>
<li><p><codeph>GetSWVersion()</codeph> reads from <filepath>Z:\\resource\\versions\\sw.txt</filepath></p></li>
<li><p><codeph>GetLangSWVersion()</codeph> reads from <filepath>Z:\\resource\\versions\\langsw.txt</filepath> </p></li>
<li><p><codeph>GetLangVersion()</codeph> reads from <filepath>Z:\\resource\\versions\\lang.txt</filepath> </p></li>
</ul><p>The GetSWVersion() and GetLangSWVersion() functions convert the newline
character "\n" to the Unicode newline character but GetLangVersion()function
does not convert.</p></section>
<section id="GUID-9D638BAD-9A37-45FE-BF12-BAEFFB740D47"><title>Retrieving
the device type information</title><p>To retrieve the device type information,
call GetDeviceTypeInfoL() function. It consists of a pointer to an instance
of CDeviceTypeInformation. This instance contains the complete set of device
type information attributes that are provisioned by the device manufacturer. </p><codeblock xml:space="preserve">TPtrC16 modelNamePtrC;
if( User::LeaveIfError( deviceTypeInfo-&gt;GetModelName( modelNamePtrC ) ) == CDeviceTypeInformation::KDefaultValue )
          {
          // We have a default attribute value, do something else
          ...
          }
else
          {
          // We have a device creator supplied attribute value.
          ...
          }
</codeblock></section>
</conbody><related-links>
<link href="GUID-ED6ED5E6-5A95-54F2-B5B2-6145A10F44BE.dita"><linktext>System Utilities
Overview</linktext></link>
<link href="GUID-3AFA592E-ED32-5AC6-B331-E7191CF2D5E2.dita"><linktext>Checking
the Availability of Memory</linktext></link>
</related-links></concept>