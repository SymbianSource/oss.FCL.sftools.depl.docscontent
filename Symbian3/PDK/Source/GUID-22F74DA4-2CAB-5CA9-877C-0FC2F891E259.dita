<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-22F74DA4-2CAB-5CA9-877C-0FC2F891E259" xml:lang="en"><title>Dictionary
write streams</title><shortdesc>How to write to a stream in a dictionary store.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Applications must construct an <codeph>RDictionaryWriteStream</codeph> object
before they can write to a stream located in a dictionary store.</p>
<p>To prepare a stream for writing, use the <codeph>RDictionaryWriteStream::AssignL()</codeph> or <codeph>RDictionaryWriteStream::AssignLC()</codeph> functions, passing a reference to the dictionary store and the UID associated
with the stream.</p>
<p>If no stream is associated with the UID, then a new stream is created.
An association is made between the resulting stream ID and the UID.</p>
<p>If a stream is currently associated with the specified UID, then the existing
stream is prepared for replacement.</p>
<p>The following code fragment is typical. <codeph>store</codeph> is a pointer
to an opened dictionary store. <codeph>RDictionaryWriteStream::AssignLC()</codeph> opens
the stream associated with the UID <codeph>theuid</codeph> and prepares the
stream for writing:</p>
<codeblock id="GUID-48CA0DB4-44D8-5E1C-8211-1EB21F2CBACD" xml:space="preserve">...
TUid theuid;
CDictionaryStore* store;
...
RDictionaryWriteStream outstream;
outstream.AssignLC(*store,theuid);
TSomeData data;
...
outstream &lt;&lt; data;
outstream.CommitL()
CleanupStack::PopAndDestroy(); // cleanup the write stream
...
store-&gt;CommitL(); // commit changes to the dictionary store
...</codeblock>
</conbody></concept>