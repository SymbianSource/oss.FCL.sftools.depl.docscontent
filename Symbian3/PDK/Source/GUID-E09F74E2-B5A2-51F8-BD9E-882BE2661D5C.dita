<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-E09F74E2-B5A2-51F8-BD9E-882BE2661D5C"><title>MiniGUI Environment Overview</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>This topic introduces the MiniGUI environment (also known as the MinGUI environment) which provides the minimum components to get a working ScreenPlay graphics stack. The MiniGUI environment allows hardware vendors to test their ScreenPlay graphics and multimedia adaptations without the complete UI platform. </p> <p> <b>Variant</b>: ScreenPlay. <b>Target audience</b>: Device creators. </p> <p>When a new hardware platform is introduced, it is common to use a Textshell environment as part of base porting. The Textshell environment allows graphics and multimedia vendors to test and validate their hardware adaptation components without waiting for the complete platform to be ported. However, the Textshell environment is based on a special version of Window Server: Text Window Server, which is non-ScreenPlay. </p> <p>A disadvantage of using the Textshell environment is that hardware vendors need to provide two different implementations of their ScreenPlay adaptation components: one for the Text Window Server and one for the full Window Server. This is because the Text Window Server does not provide the ScreenPlay functionality that the full Window Server provides in the final product. ScreenPlay uses UI composition functionality that relies on the composition engine. This functionality is driven by the full Window Server. Therefore the full Window Server must be used in order to properly validate ScreenPlay adaptation components, such as EGL, or the multimedia framework at an early stage of product development. </p> <fig id="GUID-B33B7E76-5441-5404-BB62-910A351A7BD0"><title>
          Textshell environment 
        </title> <image href="GUID-9F6C46FF-1F5A-591C-B33F-29E9885973B3_d0e253535_href.jpg" placement="inline"/></fig> <p>The MiniGUI environment is a ScreenPlay environment. As it uses the full Window Server, the MiniGUI environment needs the ScreenPlay components in the Graphics package to be present. However, the MiniGUI does not require other UI components above the Window Server. Graphics and multimedia vendors can therefore test their adaptation components in the MiniGUI environment without the whole UI platform. </p> <p>Using the MiniGUI environment for validation means that hardware vendors only need to create one implementation of their adaptation component. Therefore they no longer need to create a separate implementation especially for Textshell. </p> <fig id="GUID-4B18AEBF-204D-50FD-8DD0-F32C12FCA6BA"><title>
          MiniGUI environment 
        </title> <image href="GUID-51FE06D3-48DF-5BEE-A145-FC9D82DC0FB4_d0e253547_href.jpg" placement="inline"/></fig> </conbody><related-links><link href="GUID-D93978BE-11A3-5CE3-B110-1DEAA5AD566C.dita"><linktext>The ScreenPlay Graphics Architecture</linktext> </link> <link href="GUID-ED20B02A-C146-5E28-A102-D3AE11D9015F.dita"><linktext>Building and Running the MiniGUI
                Tutorial</linktext> </link> </related-links></concept>