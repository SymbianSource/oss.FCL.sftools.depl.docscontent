<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-96C7CBD4-4B25-5AA1-A54F-1764B54FDC7E"><title>How to write a derived class with two-phase construction</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>When writing a derived class, you must use the derived class <codeph>ConstructL()</codeph> to call the correct base class <codeph>ConstructL()</codeph>. </p> <p>Call the base class <codeph>ConstructL()</codeph> before the derived-class specific construction starts. This mirrors the action of C++ constructors.</p> <codeblock id="GUID-DA0E4184-AC27-565F-9DA1-2CBB59A1E949" xml:space="preserve">class CCompoundDerived : public CCompound
    {
public:
    ...
protected:
    ...
    void ConstructL();
private:
    ...
    };</codeblock> <codeblock id="GUID-C67C0AC0-8974-54C2-AEBE-0557DA7C6838" xml:space="preserve">void CCompoundDerived::ConstructL()
    {
    this-&gt;CCompound::ConstructL();
    // own construction
    }</codeblock> </conbody></concept>