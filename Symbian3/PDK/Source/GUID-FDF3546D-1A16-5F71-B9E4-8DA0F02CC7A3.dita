<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-FDF3546D-1A16-5F71-B9E4-8DA0F02CC7A3" xml:lang="en"><title>Reclamation
And Compaction, As A Single Job</title><shortdesc>Describes the use of <codeph>ReclaimL()</codeph> and <codeph>CompactL()</codeph> functions.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Space reclamation for a store can be performed as a single job by calling
the store’s <codeph>ReclaimL()</codeph> member function.</p>
<p>Compaction for a store can be performed as a single job by calling the
store’s <codeph>CompactL()</codeph> member function.</p>
<p>Both <codeph>ReclaimL()</codeph> and <codeph>CompactL()</codeph> only return
once space reclamation or compaction are complete, and this can take some
time.</p>
<p>Once compaction is complete, the store must be committed.</p>
<p>Streams <i>must</i> be closed before calling <codeph>CompactL()</codeph>.</p>
</conbody></concept>