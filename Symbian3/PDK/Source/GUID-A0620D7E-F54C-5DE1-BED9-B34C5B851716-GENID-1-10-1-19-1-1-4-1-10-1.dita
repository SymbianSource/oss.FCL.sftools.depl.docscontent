<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-A0620D7E-F54C-5DE1-BED9-B34C5B851716-GENID-1-10-1-19-1-1-4-1-10-1" xml:lang="en"><title>MmfExFormatPlugin:
Multimedia Framework format encoder/decoder plug-ins example</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<section><title>Description</title> <p> <filepath>MmfExFormatPlugin</filepath> demonstrates
how to implement format encoder and decoder plug-ins for the Multimedia Framework.
Multimedia data is usually packaged in a particular format, which specify
the properties of the data (e.g. duration, frame intervals), and how the buffers
for holding the data are organised. A format decoder plug-in is responsible
for reading a particular format; a format encoder plug-in for writing a particular
format. </p> <p>The example handles the RAW audio format (PCM data with no
headers). The decoder plug-in <codeph>CMMFRawFormatRead</codeph> reads RAW
audio; it implements the ECom interface <codeph>CMMFFormatDecode</codeph>.
The encoder plug-in <codeph>CMMFRawFormatWrite</codeph> writes RAW audio:
it implements the ECom interface <codeph>CMMFFormatEncode</codeph>. </p> </section>
<section id="GUID-274A59C1-E06A-584E-A014-6DBDFA772CB8-GENID-1-10-1-19-1-1-4-1-10-1-2-2"><title>Download</title> <p>Click
on the following link to download the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-c45b20eb-0700-4957-9e3a-d7c3e5a2180f.zip" scope="external">MmfExFormatPlugin.zip file</xref></p><p>Click: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-c45b20eb-0700-4957-9e3a-d7c3e5a2180f.html" scope="peer">browse </xref> to view the example code. </p> </section>
<section><title>Class summary</title><p> <xref href="GUID-708A7583-5C55-3FE1-8238-974C8821588D.dita"><apiname>MDataSink </apiname></xref>  <xref href="GUID-765257E7-403F-3D8E-8A5E-E1679F247F33.dita"><apiname>CMMFFormatDecode </apiname></xref>  <xref href="GUID-2230F976-A798-30EB-ABA6-09C86716A4B5.dita"><apiname>MDataSource </apiname></xref> <xref href="GUID-AE26E6A4-C1AD-3B35-B5F7-CE0AB60169BB.dita"><apiname> CMMFDataBuffer </apiname></xref>  <xref href="GUID-3E6BEFFD-698D-397A-9112-C9D330B5244B.dita"><apiname>CMMFChannelAndSampleRateConverterFactory </apiname></xref>  <xref href="GUID-A032838C-1F41-328E-900A-2683B1EBF1A7.dita"><apiname>CMMFChannelAndSampleRateConverter </apiname></xref>  <xref href="GUID-9A7A83ED-592B-3A0C-BABB-3B90099BCF7C.dita"><apiname>CMMFBuffer </apiname></xref> <xref href="GUID-9CD77063-1956-3EA9-9A82-17FDD6497CC7.dita"><apiname> CMMFFormatEncode </apiname></xref>  </p></section>
</conbody></concept>