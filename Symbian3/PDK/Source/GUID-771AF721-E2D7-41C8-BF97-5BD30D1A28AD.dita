<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
	Nokia Corporation - initial contribution.
Contributors: 
-->  <!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd"><concept id="GUID-771AF721-E2D7-41C8-BF97-5BD30D1A28AD" xml:lang="en"><title> Status
pane</title><prolog><metadata><keywords></keywords></metadata></prolog><conbody>
<p>The Status pane displays status information of the current application
and state, as well as general information about the device status, such as
signal strength and battery charge. It occupies the top part of the screen
and comes in two variants: extended and small. The Status pane may also be
totally left out in certain applications or situations.</p>
<p>Extended Status pane is a development of the earlier standard Symbian Status
pane that contained a Context pane. Context pane cannot be used
any more.</p>
<note><p>The status pane used in Idle is a modified extended Status pane. </p></note>
<p>Small Status pane can be used in cases where it is imperative to maximize
Main pane area (for example, Browser). </p>
<p>The Status pane contains the following subpanes:</p>
<ul>
<li><p><xref href="GUID-66EFFCF5-581A-4EE7-B784-8087A1081B6D.dita">Title pane</xref></p></li>
<li><p><xref href="GUID-76FD2A71-E8A3-4C82-9704-3F7F6AD4DFD8.dita">Navi pane</xref></p></li>
<li><p><xref href="GUID-DF3F2FD0-FF68-4CEF-843F-CBC9E84F3A7F.dita">Signal pane</xref></p></li>
<li><p><xref href="GUID-A947B5A8-9138-4FA2-B8D8-2850AEB2F38C.dita">Battery pane</xref></p></li>
<li><p><xref href="GUID-314B1556-5CB5-4BCC-93C0-B22DB849D2D5.dita">Universal indicator
pane</xref></p></li>
<li><p>Digital clock</p></li>
</ul>
<fig id="GUID-CD56E0F0-76CE-4F3E-92E7-6CF2125B9767">
<title>Status pane areas</title>
<image href="GUID-D0FE1B14-706E-4E4D-902E-AB2B25F02464_d0e53018_href.png" scale="70" placement="inline"></image>
</fig>
<section id="GUID-681C48E1-D94F-4960-8BC4-DEB5C8B677DF"><title>Using
the status pane in C++ applications</title><p>The API to use for the status
pane is the Status
pane API. For implementation information, see Using
the status pane API.</p><p>Use the Status pane API for the following
tasks:</p><ul>
<li><p>Creating
the status pane using a resource file</p></li>
<li><p>Accessing
the status pane</p></li>
<li><p>Accessing
controls in the status pane's subpanes</p></li>
<li><p>Showing
and hiding the status pane</p></li>
<li><p>Dynamically
changing status pane layout </p></li>
<li><p>Observing
status pane events</p></li>
</ul><p>Applications can define and modify the title and navi subpanes. For
implementation information on the subpanes in the status pane, see the following
APIs:</p><ul>
<li><p>Title
pane API for the title pane</p></li>
<li><p>Navigation
pane API for the navi pane</p></li>
</ul><p>Use the method <xref href="jar:GUID-759FBC7F-5384-4487-8457-A8D4B76F6AA6.jar!/html/classCEikStatusPaneBase_1_1TPaneCapabilities.html#bc5c25636d87ce1eaa38fc294336bdd5" format="application/java-archive"><codeph>IsAppOwned()</codeph></xref> in the class <xref href="jar:GUID-759FBC7F-5384-4487-8457-A8D4B76F6AA6.jar!/html/classCEikStatusPaneBase_1_1TPaneCapabilities.html" format="application/java-archive"><codeph>CEikStatusPaneBase::TPaneCapabilities</codeph></xref> to test whether
the pane is owned by the application or the server. Applications can only
interact directly with application owned subpanes.</p><p><xref href="jar:GUID-759FBC7F-5384-4487-8457-A8D4B76F6AA6.jar!/html/classCEikStatusPane.html" format="application/java-archive"><codeph>CEikStatusPane</codeph></xref> is the interface through which applications
use the status pane. This class synchronises the status pane layout with the
server side status pane object. To do this, the method <xref href="jar:GUID-759FBC7F-5384-4487-8457-A8D4B76F6AA6.jar!/html/classCEikStatusPane.html#2d082d2526d324f9c153da7ffde9651c" format="application/java-archive"><codeph>ApplyCurrentSettingsL()</codeph></xref> must be called whenever the
owner application switches to the foreground. </p><p><draft-comment translate="no" time="2008-05-23T11:14">Relationship
between events/similar for entire status pane and subpanes: should be clearer
on what's done where</draft-comment></p><p> The following options are available
for modifying the default behavior of the status pane:  </p><ul>
<li><p>Since the status pane is a compound control, it can be made visible
or invisible like an other control with <codeph>CCoeControl::MakeVisible()</codeph>. <codeph>CCoeControl::MakeVisible()</codeph> can
be called before or after the control is activated. An example of a call to
make the status pane invisible is as follows:  </p><codeblock xml:space="preserve">CEikStatusPane* sp = StatusPane();// Gets a pointer to the status pane in the UI controller 
StatusPane()-&gt;MakeVisible(EFalse); //make pane invisible somewhere in your code</codeblock></li>
<li><p>Accessing and modifying controls inside the status pane.</p><p> The
Status Pane API provides methods for accessing the status pane control and
modifying the status pane layout.   </p><p>If you wish to modify panes within
the status pane, you need to get a pointer to the status pane and then use
one of the following classes and methods: </p><ul>
<li><p><xref href="jar:GUID-759FBC7F-5384-4487-8457-A8D4B76F6AA6.jar!/html/classCAknTitlePane.html" format="application/java-archive"><codeph>CAknTitlePane</codeph></xref> for
the title subpane</p></li>
<li><p>Methods defined by the Navigation
pane API for accessing the navi subpane </p></li>
<li><p>The Tabs
API for accessing tabs in the navi subpane.</p></li>
</ul></li>
<li><p>Defining new resources for the status pane to override the default
behavior</p><p> Once you have defined your resources, you may need to use
some of the status pane APIs to achieve the desired effect in your application.
 </p><p>For more information, see the Status
pane API and Navigation
pane API reference documentation.   </p></li>
<li><p>You could also possibly derive your own classes from the available
classes or their base classes to customize your own controls. </p></li>
</ul></section>
</conbody></concept>