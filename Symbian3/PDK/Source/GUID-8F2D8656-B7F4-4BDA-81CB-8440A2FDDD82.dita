<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-8F2D8656-B7F4-4BDA-81CB-8440A2FDDD82" xml:lang="en"><title>Dimming
or hiding toolbar extension items</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>You can dim or hide toolbar extension items if an extension item function
is not available in certain cases.</p>
<p>The example below shows how to set the extension button unavailable. In
the example, the boolean parameter <codeph>aHide</codeph> indicates if the
button should be hidden or dimmed.</p>
<codeblock xml:space="preserve">void CMyAppView::SetExtensionButtonUnavailableL( TBool aHide )
    {
    CAknToolbar* toolbar = Toolbar();
    if ( toolbar )
        {
        CAknToolbarExtension* toolbarExtension = toolbar-&gt;ToolbarExtension();
        if ( toolbarExtension )
            {
            if ( aHide )
                {
                // To show the item again: 
                // toolbar-&gt;HideItem( KExtensionButtonId, EFalse );
                toolbarExtension-&gt;HideItemL( KExtensionButtonId, ETrue );
                }
            else
                {
                // To undim the item again:
                // toolbar-&gt;SetItemDimmed( KExtensionButtonId, EFalse );
                toolbarExtension-&gt;SetItemDimmed( KExtensionButtonId, ETrue );
                }
            }
        }
    }
</codeblock>
</conbody></concept>