<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-3EF88A1D-CCB6-5DE5-9CA6-F6E785A6898A" xml:lang="en"><title>Communications
Framework Quick Start</title><shortdesc>This topic describes the activities that users can do to make use
of the Communications Framework. </shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-DBF1C87D-7360-54B7-8658-B6659BF77F06-GENID-1-12-1-9-1-1-5-1-3-1"><title>Getting started
with Communications Framework</title> <ul>
<li id="GUID-2EF077BD-0194-5C6B-B4B6-A226A09DBA5D"><p>To manage communications
connections and transfer data, use the client interfaces provided by the Sockets
Server, together with additional interfaces that are provided by implementations
of specific communications protocols. For example, to communicate over the
TCP protocol, use the Sockets Server together with the Internet Sockets libraries
provided by Networking Services. </p> </li>
<li id="GUID-D57F54F9-8006-54E8-991B-C6180D53F00C"><p>To implement new communications
protocols, implement plug-ins that conform to the Comms Architecture. </p> </li>
<li id="GUID-7AC9CA5C-7138-5526-8CAE-B42B852B2F8C"><p>To configure the communications
set up of a phone, use the Comms Database. </p> </li>
<li id="GUID-CE7D99C4-7F70-58D1-8221-66BC71403C49"><p>To communicate over
a serial port, such as RS232, and to access other communications protocols
that can be used in a similar way, use the Serial Communications Server. </p> </li>
</ul> </section>
<section id="GUID-C0D0A389-FAEE-4077-9584-FE7A85E9572E"><title>Architecture</title> <p>The Communications Framework enables
communication in mobile devices. It allows the devices to connect to networks,
create and store network settings, manage memory used for communications,
and send and receive data. </p> <p>The Communications Framework comprises
the following collections: </p> <ul>
<li id="GUID-E9C6BC79-01AD-53E4-8885-486D7B3E0CDB"><p> <b>Communications Process
and Settings</b>  </p> <p>This collection contains the Comms Root Server and
Comms Root Server Configurator components. For more information see <xref href="GUID-2FED5145-58E4-5560-8E52-6BD499EECE13.dita">Root Server</xref>. </p> </li>
<li id="GUID-08F51E77-4EE3-580C-922D-16D366ADD559"><p> <b>Communications Configuration</b>  </p> <p>This
collection contains the Comms Database. The Comms Database contains data about
all of the settings in the communication framework. For more information about
the Comms Database, see <xref href="GUID-BD971173-E009-58DA-AF9C-F4AAFF77B138.dita">Comms
Database</xref>. </p> </li>
<li id="GUID-E19E0A03-7B46-51FE-BDFC-0EB0F73F2896"><p> <b>Data Communications
Server </b>  </p> <p>This collection contains the ESock Server and ESock Server
Configurator components. For more information, see <xref href="GUID-2139B04C-6ED6-599B-A018-D92451B8353E.dita">Data
Communications Server</xref>. </p> </li>
<li id="GUID-2865D60A-BA76-5937-8A28-09316F5DF699"><p> <b>Communications Framework
Utilities </b>  </p> <p>This collection contains the Comms framework, Comms
Elements and MBuf Manager. For more information, see <xref href="GUID-12D1F61B-6BC6-5215-A832-E84C0F480765.dita">Communications
Framework Utilities</xref>. </p> </li>
<li id="GUID-23E59E44-9AC6-5EB4-886A-86549AD875BF"><p> <b>Serial Server and
Serial Comms Server Plug-ins </b>  </p> <p>These collections contain the C32
Serial Server and the C32 Serial Server and the Serial Port CSY. For more
information, see <xref href="GUID-9B83CDD4-FC94-51A0-AC67-CD04BCAFEF08.dita">Serial
Communications Server</xref>. </p> </li>
</ul> <p>The following diagram outlines the Communication Framework collections
and the components associated with each collection. </p> <fig id="GUID-201CB2BD-3398-57FA-B5D7-B38D1FFE77FD">
<image href="GUID-5598B53F-2A6D-5813-913C-94B2AB36134E_d0e108630_href.png" placement="inline"/>
</fig> </section>
<section id="GUID-47666C49-F51E-4297-9222-6ABDD2FF32B8"><title>Technologies</title> <p>The Comms Framework defines the structure
and operations of the communications protocol stack in Symbian platform,
and allows applications to use the stack through a sockets type API. It defines
the concepts, roles, and rules that govern the function of the stack, but
does not itself implement specific protocols, such as TCP/IP, in that stack. </p> <p>This
section describes the key features and technologies implemented by the Communications
Framework. </p> <ul>
<li id="GUID-2141A1D6-D3F8-5AA8-AE2A-1E6EAC715E04"><p> <b>Comms Database</b>  </p> <p>The
Comms database comprises a series of tables which are used to store communications
settings. Each table is made up of a set of records. These records are in
turn made up of a series of fields. A field is the basic unit of information
in the Comms Database. For more information, see <xref href="GUID-BD971173-E009-58DA-AF9C-F4AAFF77B138.dita">Comms
Database</xref>. </p> </li>
<li id="GUID-64F701EE-FDC3-54EE-A1CB-19B9448F2DA0"><p> <b>Root Server</b>  </p> <p>Root
Server manages the process in which all Communications Servers are loaded.
The process is called <i>C32exe</i> and is also known as <i>C32</i>. For more
information, see <xref href="GUID-236D3822-13C3-5AD8-B0FB-C28732E17CF7.dita">What
is Root Server and the C32exe Process?</xref>. </p> </li>
<li id="GUID-9299C35C-4EBD-534F-9B72-813D7D6EF981"><p> <b>ESock Server</b>  </p> <p>ESock
Server provides a generic interface to communications protocols through communication
end points known as sockets. They provide a generic interface to network level
communications protocols for common operations involved in network computing.
These include sending data, receiving data, establishing connections, and
configuring network protocols. </p> </li>
<li id="GUID-B2449768-EC88-5FFE-9AA2-017FDCBACF50"><p> <b>Network Interface
Manager</b>  </p> <p>The Network Interface Manager (NifMan) creates and manages
network interfaces. The Network interfaces enable the devices to connect to
networks. For more information about NifMan, see <xref href="GUID-31371091-A28D-5203-BE6A-0F182F99582D.dita">Network
Interface Manager (NifMan)</xref>. </p> </li>
<li id="GUID-3E3E2DFC-12A2-5E56-B5AC-D1A7B4C73DC1"><p> <b>MBufManager</b>  </p> <p>An
MBuf is part of the implementation of a buffer in the Comms Architecture and
represents a section of memory. The Communications framework creates a MBufs
when the device starts. The MBufManager provides memory management for the
Comms processes. For more information about buffers and MBufs, see <xref href="GUID-A248C2C0-5F64-5484-85B2-57C86E3499E1.dita">Memory
Management</xref>. </p> </li>
<li id="GUID-C359C51A-2A1A-596C-9492-490FD97A4D91"><p> <b>C32 Serial Server</b>  </p> <p>The
Serial Communications Server provides a public API to access the serial ports
of the device. It provides functionality such as timeouts and port sharing
for all Serial Protocol Modules. For more information, see the <xref href="GUID-6C7B7778-9B2E-5D8C-B2D8-74AC1DEEDF61.dita">Serial
Communications Server</xref>. </p> </li>
</ul> </section>
</conbody></concept>