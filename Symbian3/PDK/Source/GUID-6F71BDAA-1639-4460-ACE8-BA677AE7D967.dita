<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="GUID-6F71BDAA-1639-4460-ACE8-BA677AE7D967" xml:lang="en"><title>Switching
ON the lights</title><prolog><metadata><keywords/></metadata></prolog><taskbody>
<context><p>The <codeph>LightOnL()</codeph> method call switch ON the specified
target light. Multiple light targets can be specified by using bitwise-or.</p><p>The
following code snippet demonstrates how to switch ON lights for infinite duration
with default intensity for multiple targets (Lights are switched ON with fade-in): </p><codeblock xml:space="preserve">iLight-&gt;LightOnL( CHWRMExtendedLight::EPrimaryDisplay | CHWRMExtendedLight::EPrimaryKeyboard );</codeblock><p>The following code snippet demonstrates how to switch ON lights for the
specified duration with default intensity for one target (Lights are switched
ON with fade-in):</p><codeblock xml:space="preserve">// aDuration = 5000 milliseconds
light-&gt;LightOnL( CHWRMExtendedLight::ESecondaryDisplay, 5000 );
</codeblock><p>After the duration expires, if there are no previous infinite
time duration call in this session, the light state for target is changed
to whatever state was caused by the last infinite time duration call, or default
state determined by inactivity timer.</p><p>The following code snippet demonstrates
how to switch ON lights for the specified duration with specified intensity
for one target (fade-in is also controlled): </p><codeblock xml:space="preserve">// aDuration = 5000 milliseconds
// aIntensity = 50, intensity can be between KHWRMLightMinIntensity and KHWRMLightMaxIntensity, inclusive.
// aFadeIn = EFalse means that lights will turn ON instantly and fade-in is not used,
// ETrue would mean that lights would smoothly fade-in.
light-&gt;LightOnL( CHWRMExtendedLight::ESecondaryDisplay, 5000, 50, EFalse );</codeblock><note> All
devices do not support fade-out. In such scenarios where fade-out is not supported,
the device behaves in its default state.</note></context>
</taskbody></task>