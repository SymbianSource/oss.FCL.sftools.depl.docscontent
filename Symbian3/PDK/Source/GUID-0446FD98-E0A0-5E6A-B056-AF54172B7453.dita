<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-0446FD98-E0A0-5E6A-B056-AF54172B7453" xml:lang="en"><title>Using
CArrayPak&lt;TAny&gt;</title><shortdesc>The class is useful for constructing an array of variable length
buffers, where the length is decided at run time. </shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-65CC02B4-A4FD-4A7C-9D93-BF92A1B9DDAB"><title>Arrays whose type is not known until class instantiation</title> <p>The
class is useful for constructing an array of variable length buffers, where
the length is decided at run time. It is also useful as a data member of a
base class in a thin template class/base class pair, where the type of the
array element is not known until the owning thin template class is instantiated.</p> <p>For
example, to implement a stack of packed (variable length) objects of type <codeph>T</codeph>.</p> <codeblock id="GUID-C6370DDF-44D6-52BA-A0C3-898F66918210" xml:space="preserve">class CExampleBase : public CBase
 {
public :
 ...
protected :
 ...
 void  PushL(const TAny* aPtr);
 TAny* Pop();
private :
 CArrayPak&lt;TAny&gt; iArray;
 }</codeblock> <codeblock id="GUID-0D3E2CBC-E9E5-551B-8704-A48D63D5901A" xml:space="preserve">template &lt;classÂ T&gt;
class CExample : public CExampleBase
 {
public :
 ...
 inline void PushL(const T* aPtr);
 inline T*   Pop();
 }</codeblock> </section>
</conbody></concept>