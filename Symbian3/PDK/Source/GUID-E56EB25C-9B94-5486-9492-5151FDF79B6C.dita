<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-E56EB25C-9B94-5486-9492-5151FDF79B6C" xml:lang="en"><title>Global
Surface Updates</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>Global surface updates are surface updates that are submitted to all displays
rather than just one display. By using global surface updates, the Video Renderer
can update surfaces on all displays including ones that it is not aware of.
When the Video Renderer sends a global surface update, the update is broadcast
by the Graphics <xref href="GUID-81A0A2E9-4BB9-58BF-B2D3-08098E7E9C7C.dita">Surface
Update</xref> component to all Composition Implementations present in the
system. Each Composition Implementation determines whether the surface is
displayed on its associated screen and if so, forces an update. For more information,
see <xref href="GUID-D2ECF215-B53C-5659-BA86-5B658C0C2D2F.dita">Global Surface
Updates</xref> in the Graphics Guide. </p>
<p>The Video Renderer registers and unregisters surfaces with the Window Server
for all available displays. When the client calls <xref href="GUID-AFEC8287-41C9-36BB-B0F7-ECC034D34DC6.dita"><apiname>CVideoRenderer::CreateSurfaceL()</apiname></xref>,
the Video Renderer creates the surface and then registers it with each display.
When the client calls <xref href="GUID-AFEC8287-41C9-36BB-B0F7-ECC034D34DC6.dita"><apiname>CVideoRenderer::DestroySurfaceL()</apiname></xref>,
the Video Renderer unregisters the surface with each display and then destroys
it. The following sequence diagram shows how the Video Renderer registers
and unregisters surfaces: </p>
<fig id="GUID-B9190405-76E6-557D-A1F7-03ADDB8E456D">
<title>           Surface registration          </title>
<image href="GUID-D729593E-C131-5F67-BF0C-6C9AD847C9F9_d0e534745_href.png" placement="inline"/>
</fig>
<p>The Video Renderer uses the global constant <codeph>KAllScreens</codeph> (provided
by the Surface Update component) to ensure all displays are updated with new
data. The following sequence diagram shows the Video Renderer passing <codeph>KAllScreens</codeph> in
the call to <xref href="GUID-AFEC8287-41C9-36BB-B0F7-ECC034D34DC6.dita"><apiname>RSurfaceUpdateSession::SubmitUpdate()</apiname></xref>: </p>
<fig id="GUID-4CA7A049-1B60-5CB5-956A-DDDFF0A5E3B1">
<title>           Data flow between client, Video Renderer and Surface Update
client-side API          </title>
<image href="GUID-3C8FD050-1CD4-5AFB-ACB7-4264536BB300_d0e534768_href.png" placement="inline"/>
</fig>
</conbody><related-links>
<link href="GUID-98FBEA7E-78BA-5A64-90D6-4641418003B4.dita"><linktext>Video Renderer
Component</linktext></link>
<link href="GUID-63CB6C7E-44EC-5D0B-A37D-FE78F7D76592.dita"><linktext>Graphics
Composition Collection</linktext></link>
</related-links></concept>