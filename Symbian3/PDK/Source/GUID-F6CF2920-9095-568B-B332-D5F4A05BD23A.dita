<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-F6CF2920-9095-568B-B332-D5F4A05BD23A" xml:lang="en"><title>Headers</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>HTTP request and response headers are handled by the classes <xref href="GUID-54F9A87B-FE2F-3429-9793-0A24B83466B9.dita"><apiname>RHTTPHeaders</apiname></xref> and <xref href="GUID-DEE8279A-3BEC-316F-97B8-6C49FEDBD5B3.dita"><apiname>THTTPHdrVal</apiname></xref>.
Calling <codeph>GetHeaderCollection()</codeph> on <xref href="GUID-8D952FEE-0EA0-3DBC-AADB-6F4200B82687.dita"><apiname>RHTTPRequest</apiname></xref> and <xref href="GUID-BA9EA976-E4CF-37D7-9E73-420A6D50203F.dita"><apiname>RHTTPResponse</apiname></xref> objects
returns the <codeph>RHTTPHeaders</codeph> for the HTTP request and HTTP response
respectively. </p>
<p> <codeph>RHTTPHeaders</codeph> represents the entire message header, that
is, the entire set of header fields in a request or a response. <codeph>THTTPHdrVal</codeph> represents
a value that a single header field can take. </p>
<p>HTTP will set some header fields automatically. The client is not required
to add the following to requests: </p>
<ul>
<li id="GUID-0D70B611-CE1F-589A-BC84-7FE9D3FDF4E7"><p> <b> Content-Length:</b> This
is derived from the client's request <xref href="GUID-1B03F068-9552-37BA-A284-8E54FAC2AAC5.dita"><apiname>MHTTPDataSupplier</apiname></xref>. </p> </li>
<li id="GUID-28748F12-A98D-5DA7-8D1B-2E54C0E841E1"><p> <b> Connection:</b> This
is handled automatically to manage a HTTP/1.1 persistent connection. If a
client wants to indicate that the persistent connection is to close, it must
add a Connection header. </p> </li>
<li id="GUID-12390813-6FDC-5752-9DFD-7CAC8DB0D33E"><p> <b>Host:</b> This is
taken from the client's request URL. If a relative URL is supplied, the client
must add a Host header. </p> </li>
<li id="GUID-337B6F8F-2E95-51D6-9ECE-A0410E30BDCF"><p> <b>Transfer-Encoding:</b> This
is added automatically if the client's request <codeph>MHTTPDataSupplier</codeph> specifies
an unknown overall data size. </p> </li>
<li id="GUID-9001744A-AE2A-51A7-96D6-F08158002EB0"><p> <b>Authorisation:</b> This
is added automatically by the Authentication filter. </p> </li>
</ul>
<p>Also, HTTP's filters and protocol handler deals automatically with some
headers contained in the server response. These are: </p>
<ul>
<li id="GUID-FCD99F5A-7BED-5A41-AA1C-BB88E86C41C5"><p> <b>Content-Length:</b> This
value is provided through the response body <codeph>MHTTPDataSupplier</codeph>. </p> </li>
<li id="GUID-19E15F12-53E4-53C1-A160-2A5F003DD4F4"><p> <b>Connection:</b> This
is handled automatically to manage the HTTP/1.1 persistent connection. </p> </li>
<li id="GUID-5F60A3C3-B900-54F0-BC70-A36C4F815013"><p> <b>Location:</b> This
is handled automatically by the Redirection filter. </p> </li>
<li id="GUID-8F651542-DD14-5633-9758-8B2C4B64A290"><p> <b>Transfer-Encoding:</b> This
is handled automatically by the protocol handler, and 'chunked' encodings
are removed before presenting the response body to the client. </p> </li>
<li id="GUID-D5C08974-4FAF-59F6-9F43-7B95ED2F21C0"><p> <b>WWW-Authenticate:</b> This
is added automatically by the Authentication filter. </p> </li>
</ul>
</conbody></concept>