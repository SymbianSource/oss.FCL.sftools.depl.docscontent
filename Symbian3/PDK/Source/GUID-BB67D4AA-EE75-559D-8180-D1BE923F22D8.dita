<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-BB67D4AA-EE75-559D-8180-D1BE923F22D8" xml:lang="en"><title>Streaming
example code</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>These examples demonstrate aspects of streaming. </p>
<section id="GUID-CAA3834A-2781-5259-A0BC-4D40F39595E4"><title>SimpleClass:
streaming a simple class to a single stream</title> <p><b>Description</b> </p> <p>This
example shows the basic idea of streaming, i.e. externalizing a simple object
to a stream using an <codeph>ExternalizeL()</codeph> function (or the <codeph>&lt;&lt;</codeph> operator)
and internalizing an object from a stream using <codeph>InternalizeL()</codeph> function
(or the <codeph>&gt;&gt;</codeph> operator). </p> <p><b>Download</b> </p> <p>Download
the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-54324d6f-39fb-4543-a63e-c15f09a12605.zip" scope="external">SimpleClass.zip</xref> .</p><p>Download some additional files
required by the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.zip" scope="external">CommonFramework.zip</xref>.</p><p>View the source code: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-54324d6f-39fb-4543-a63e-c15f09a12605.html" scope="peer">browse</xref>. View the additional files: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.html" scope="peer">browse</xref>.</p> <p><b>Class summary</b></p><ul>
<li><p><xref href="GUID-346D4908-15C7-3F15-945F-D561E774022D.dita"><apiname>RStoreWriteStream</apiname></xref> - Supports the writing of a stream
to a store.</p></li>
<li><p><xref href="GUID-4FA6EE6C-5B4E-39E0-B888-ABDE19985976.dita"><apiname>RStoreReadStream</apiname></xref> - Supports the opening and manipulation
of an existing stream in a store.</p></li>
</ul> </section>
<section id="GUID-F831D318-2C97-571A-B2DB-26172B22288E"><title>CompoundClass:
streaming a compound class to a single stream</title> <p><b>Description</b> </p> <p>This
example shows how a compound object is externalized to and internalized from
a single stream. </p> <p><b>Download</b> </p> <p>Download the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-68df4c76-f86b-4ae8-a2b9-d8b3081c9cd1.zip" scope="external">CompoundClass.zip</xref>. </p><p>Download some additional
files required by the example: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/zips/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.zip" scope="external">CommonFramework</xref>.</p><p>View the source code: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-68df4c76-f86b-4ae8-a2b9-d8b3081c9cd1.html" scope="peer">browse</xref>. View the additional files: <xref href="guid-6013a680-57f9-415b-8851-c4fa63356636/guid-89fa6105-e749-4e5f-a233-a000e3b9390b.html" scope="peer">browse</xref>.</p> <p><b>Class summary</b></p><ul>
<li><p><xref href="GUID-346D4908-15C7-3F15-945F-D561E774022D.dita"><apiname>RStoreWriteStream</apiname></xref> - Supports the writing of a stream
to a store.</p></li>
<li><p><xref href="GUID-4FA6EE6C-5B4E-39E0-B888-ABDE19985976.dita"><apiname>RStoreReadStream</apiname></xref> - Supports the opening and manipulation
of an existing stream in a store.</p></li>
</ul> </section>
</conbody></concept>