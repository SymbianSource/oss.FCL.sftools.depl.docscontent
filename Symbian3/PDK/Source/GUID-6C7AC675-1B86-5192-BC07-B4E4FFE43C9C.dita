<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-6C7AC675-1B86-5192-BC07-B4E4FFE43C9C"><title>Alternative Call Mode Settings Tutorial</title><shortdesc>This tutorial describes how to get and set the alternative call mode information. </shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody><p>Alternating call is a GSM service that allow clients to create a call with two alternating bearer services, for example an alternating voice and data call or an alternating voice and fax call. </p> <section><title>Procedure</title> <ul><li id="GUID-5D59381C-5DF4-5693-8267-00160B41ECEB"><p>Get the phone alternating call capabilities using <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::GetAlternatingCallCaps()</apiname></xref>. </p> <p>Capabilities are described in <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::TMobilePhoneAlternatingCallCaps</apiname></xref>. </p> </li> <li id="GUID-74ADE8B8-7199-544E-8FC2-10305B599F2D"><p>Use <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::NotifyAlternatingCallCapsChange()</apiname></xref> to get the notification of any changes to the capabilities. </p> </li> <li id="GUID-DB239222-BC82-56D0-8ABE-CF4FE5188707"><p>Get the current alternating call mode using <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::GetAlternatingCallMode()</apiname></xref>. </p> <p>Modes are described in <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::TMobilePhoneAlternatingCallMode</apiname></xref>. </p> </li> <li id="GUID-E62115AA-7C04-5A42-B010-1639B165F268"><p>Set the mode to use for the next call using <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::SetAlternatingCallMode()</apiname></xref>  </p> </li> <li id="GUID-0E80F505-C31E-50B9-8F61-C27991F867BA"><p>Use <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone::NotifyAlternatingCallModeChange()</apiname></xref> to get the notification of any changes to the mode. </p> </li> </ul>  </section> <example><title>Alternative call mode example</title> <p>The following code checks if the phone supports alternative voice and data calls. If the phone supports, it gets the alternative call mode, and checks if the next call is first voice then data. </p> <p>The code assumes <codeph>iMobilePhone</codeph> is an <xref href="GUID-AA81AFA4-6FAC-3B0D-A082-BE0AEC58CCA8.dita"><apiname>RMobilePhone</apiname></xref> object. </p> <codeblock id="GUID-FE82B767-0F8F-55BA-948D-8ADE6D8B3711" xml:space="preserve">TUint32 alternatingCaps;
User::LeaveIfError(iMobilePhone.GetAlternatingCallCaps(alternatingCaps));
if (alternatingCaps &amp; RMobilePhone::KCapsMTVoiceData)
    {
    RMobilePhone::TMobilePhoneAlternatingCallMode mode;
    RMobilePhone::TMobileService firstService;
    iMobilePhone.GetAlternatingCallMode(mode, firstService);
    if ( (mode == RMobilePhone::EAlternatingModeVoiceData) &amp; 
        (firstService == RMobilePhone::EVoiceService) )
        {
</codeblock> </example> <section><title>See also</title> <p> <xref href="GUID-F15FE507-F8E6-572F-B0F9-AF4651DD0046.dita">Alternative Call Tutorial</xref>  </p> </section> </conbody></concept>