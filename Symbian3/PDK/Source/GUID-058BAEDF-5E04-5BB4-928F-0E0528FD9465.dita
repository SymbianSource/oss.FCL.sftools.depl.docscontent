<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-058BAEDF-5E04-5BB4-928F-0E0528FD9465" xml:lang="en"><title>MultiMediaCard
Technology</title><shortdesc>MultiMediaCard (MMC) is a low cost data storage and communication
media, and is defined by the <i>MultiMediaCard System Specification</i></shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p> The MMC specification is published by the <xref href="http://www.mmca.org" scope="external">MultiMediaCard Association</xref>. </p>
<p>Communication is based on a 7-pin serial bus designed to operate in a low
voltage range (2.0 - 3.6V). The MultiMediaCard specification defines a communication
protocol referred to as MMC mode (0-20MHz). In addition, for compatibility
with existing controllers, MultiMediaCards may offer an alternative communication
protocol which is based on the SPI standard (0-5MHz). </p>
<section id="GUID-69DA6510-AF66-566A-9B19-5554B4743D0B"><title> Omissions</title> <p>The
following features of the MultiMediaCard System Specification are not provided
in the Symbian platform MultiMediaCard controller: </p> <ul>
<li id="GUID-75439A4B-28C8-58A6-81A8-92BF08F490A1"><p>Stream read and write
operations are not supported. </p> </li>
<li id="GUID-85C665FB-152C-5A94-A245-E99D44F384C2"><p>SPI bus mode is not
supported. </p> </li>
<li id="GUID-26F8D809-57EF-5CCB-99A5-BFDCA59A5F76"><p>The MultiMediaCard System
Specification includes a feature where a MultiMediaCard can be put into a
disconnected state. This can be performed on a card which is currently in
the programming state, i.e. writing data to the disk. To place that card into
the disconnected state involves placing another card into the transfer state,
which means giving the other card the current data transfer focus. A disconnected
card will not terminate the programming operation and, if re-selected, moves
back to the programming state. The Symbian platform MultiMediaCard controller
does not support this mode of operation even if the underlying hardware interface
does. </p> </li>
</ul> </section>
</conbody></concept>