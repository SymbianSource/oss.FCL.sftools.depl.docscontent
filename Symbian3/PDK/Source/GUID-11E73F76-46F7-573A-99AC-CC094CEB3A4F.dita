<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-11E73F76-46F7-573A-99AC-CC094CEB3A4F"><title> Overview</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>A Profile Agent plug-in handles registration requests from many clients. The SIP Profile Agent is a framework which allows different SIP service providers specific registration behaviours such as 3GPP, IP Multimedia Subsystem (IMS), <xref scope="external" href="http://www.ietf.org">IETF</xref>, and Proprietary. </p> <p>The SIP profile defines the configuration of the service provider. Some provider type specific registration behaviours are implemented as ECOM plug-ins and are used to register the profiles of the corresponding type. </p> <p>The SIP Profile Agent subsystem stores the SIP profiles in a persistent storage. These profiles contain information necessary to provide the required registration behaviour. The SIP profile stores the following main parameters: </p> <ul><li id="GUID-132E9A1A-359E-5FEA-B382-0275B4B9E1E6"><p>The user-friendly name of the service provider </p> </li> <li id="GUID-053A3DDD-BF97-5C67-A5DC-05D71FDFC4C8"><p>The type of profile, for example 3GPP IMS, Proprietary, and IETF </p> </li> <li id="GUID-A04FA44E-974C-5579-B16D-B842892243F8"><p>The AORs of the user </p> </li> <li id="GUID-A56E6107-93AA-5E02-A8BC-18CA1C59E3ED"><p>The Internet Access Provider Identifier (IAP ID) used </p> </li> <li id="GUID-173E8860-C8B1-5C6C-AF93-615EA0ACB760"><p>The address of the SIP registrar server and the SIP proxy server with optional connection and security parameters </p> </li> <li id="GUID-71C75616-6F83-51D1-AA7B-1B448D5B40F6"><p>The compression and security preferences </p> </li> <li id="GUID-CD49105D-818B-576A-801D-34BA7010F92C"><p>An indication of whether the profile is always automatically registered, or only when it is used by the SIP application </p> </li> <li id="GUID-793C74E2-40F1-5DD3-888F-699B891A3982"><p>Any number of extension parameters stored as key-value pairs </p> </li> </ul> <section><title>Architectural relationships</title> <p>SIP Profile Agent framework uses the following APIs to provide the different SIP profile registration behaviours: </p> <table id="GUID-0E09AB48-D686-52AF-9178-36ABBCCABCB9"><tgroup cols="2"><colspec colname="col0"/><colspec colname="col1"/><thead><row><entry>API</entry> <entry>Purpose</entry> </row> </thead> <tbody><row><entry><p>ECOM Plug-in Architecture </p> </entry> <entry><p>To load SIP Profile Agent plug-in implementations </p> </entry> </row> <row><entry><p>File Server Client Side </p> </entry> <entry><p>To manage a SIP profile storage file </p> </entry> </row> <row><entry><p>Publish &amp; Subscribe API </p> </entry> <entry><p>To receive backup/restore events </p> </entry> </row> <row><entry><p>Store API </p> </entry> <entry><p>To store and retrieve SIP profiles </p> </entry> </row> <row><entry><p>Sockets client API </p> </entry> <entry><p>To get the SIP server's address using DHCP </p> </entry> </row> <row><entry><p>SIP Client API </p> </entry> <entry><p>To enable applications to interact with the SIP Server </p> </entry> </row> <row><entry><p>SIP Codec API </p> </entry> <entry><p>To access SIP header fields. </p> </entry> </row> </tbody> </tgroup> </table> </section> <section><title>SIP Profile Agent API class structure</title> <p>The Profile Agent subsystem provides the following classes: </p> <table id="GUID-0849E821-ADEE-5159-A116-88425A9B7D3D"><tgroup cols="2"><colspec colname="col0"/><colspec colname="col1"/><thead><row><entry>Class</entry> <entry>Description</entry> </row> </thead> <tbody><row><entry><p> <xref href="GUID-F324C2F6-1336-361C-B270-EFBAA256C46A.dita"><apiname>CSIPProfileAgent</apiname></xref>  </p> </entry> <entry><p>Provides an ECOM interface for SIP Profile Agent plug-ins. </p> </entry> </row> <row><entry><p> <xref href="GUID-8E42520B-698F-3925-8F0F-6CD0F9745EF2.dita"><apiname>MSIPProfileAgentObserver</apiname></xref>  </p> </entry> <entry><p>Provides an interface to receive SIP profile registration, update and deregistration events, and also any errors reported while doing these tasks. </p> </entry> </row> </tbody> </tgroup> </table> </section> </conbody><related-links><link href="GUID-A0AF4BAE-E4C4-52BE-BB61-92DFE9422D8D.dita"><linktext>Developing a SIP
                Profile Agent plug-in</linktext> </link> <link href="GUID-E9AF73E8-DF31-5C5E-889E-96CCD4C4A46B.dita"><linktext>Example IETF
                profile agent plug-in</linktext> </link> </related-links></concept>