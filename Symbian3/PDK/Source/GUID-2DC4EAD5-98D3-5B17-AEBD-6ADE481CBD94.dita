<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="GUID-2DC4EAD5-98D3-5B17-AEBD-6ADE481CBD94" xml:lang="en"><title>Call
in Progress Tutorial</title><shortdesc>This tutorial describes how to get the call progress with the telephony
API for applications. </shortdesc><prolog><metadata><keywords/></metadata></prolog><taskbody>
<context>The client applications can determine the status of voice, data and
fax calls with the <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony</apiname></xref> functions.</context>


<steps id="GUID-3321492D-D51F-5047-9C62-4E0951726010">
<step id="GUID-1C4E0B81-25D0-5645-9C85-F2EFAB23BBD8"><cmd/>
<info>create a new instance of <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony</apiname></xref>  </info>
</step>
<step id="GUID-0D3DCBA1-B00C-5EFD-A905-CCF7EE4DFE4C"><cmd/>
<info>use<xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::GetIndicator()</apiname></xref> to
get the call progress information </info>
<info>The function returns a <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>TIndicatorV1</apiname></xref> object
that contains the call progress information </info>
</step>
<step id="GUID-82FEA69E-58DB-53B2-AD6D-3C7EC5A17BD0"><cmd/>
<info>pass the enumeration <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::EGetIndicatorCancel</apiname></xref> to
cancel the aynchronous request </info>
</step>
<step id="GUID-1A45FD91-3793-5322-829F-4498F841E6E2"><cmd/>
<info>use <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::EIndicatorChange</apiname></xref> to
get the notification of any changes in the call progress information </info>
</step>
<step id="GUID-780B4933-9C44-50FC-B020-368B5150A05D"><cmd/>
<info>pass the enumeration <xref href="GUID-97D402C8-B4B7-385A-92B3-D3FCC0CA575A.dita"><apiname>CTelephony::EIndicatorChangeCancel</apiname></xref> to
cancel the notification request </info>
</step>
</steps>
<example id="GUID-B43C210D-813A-58D6-8ADE-1FEF7C5FBE58"><title>Call in progress
example</title> <codeblock id="GUID-8A109B25-F01C-5495-A109-E4424DD3A24E" xml:space="preserve">#include &lt;e32base.h&gt;
#include &lt;Etel3rdParty.h&gt;

class CClientApp : public CActive
    { 

private:
    CTelephony* iTelephony;
    CTelephony::TIndicatorV1 iIndicatorV1;
    CTelephony::TIndicatorV1Pckg iIndicatorV1Pckg;

public:
    CClientApp(CTelephony* aTelephony);
    void SomeFunction();

private:
    /*
       These are the pure virtual methods from CActive that  
       MUST be implemented by all active objects
       */
    void RunL();
    void DoCancel();
   };

CClientApp::CClientApp(CTelephony* aTelephony)
    : CActive(EPriorityStandard),
      iTelephony(aTelephony),
      iIndicatorV1Pckg(iIndicatorV1)
    {
    //default constructor
    }

void CClientApp::SomeFunction()
    {
    iTelephony-&gt;GetIndicator(iStatus, iIndicatorV1Pckg);
    SetActive();
    }

void CClientApp::RunL()
    {
    if(iStatus==KErrNone)
       {
       if(iIndicatorV1.iCapabilities &amp; CTelephony::KIndCallInProgress)
          {
          // We can detect when a call is in progress
          if(iIndicatorV1.iIndicator &amp; CTelephony::KIndCallInProgress)
             {} // A call is in progress
          else
             {} // A call is not in progress
          }
       else
          {} // We do not know whether a call is in progress
       }
    }

void CClientApp::DoCancel()
    {
    iTelephony-&gt;CancelAsync(CTelephony::EGetIndicatorCancel);
    }
</codeblock> </example>
</taskbody></task>