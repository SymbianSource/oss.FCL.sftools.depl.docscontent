<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-485B1284-9DB0-5AF7-906A-89A830B9FE44" xml:lang="en"><title>Handles
Overview</title><shortdesc>This document provides an overview of handles.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-115D8AE7-F04D-47DE-83B4-0F651D721006"><title>Purpose</title> <p>Allows
a thread or process to identify an object which is owned or managed by another
thread or process. Handles allow a client to access, or refer to, Kernel objects.</p> </section>
<section id="GUID-245AC90F-A46C-488E-B4FE-435F93851682"><title>Architectural
relationships</title> <p>All handles are instances of classes derived from <codeph>RHandleBase</codeph>.
Interactions between the holder of a handle and the object which the handle
represents are mediated through the Kernel. Handles are also used in client-server
relations; the client side refers to a server side session through a handle,
an<codeph>RSessionBase</codeph> object.</p> </section>
<section id="GUID-DCBCFDE8-F8BA-455A-8918-0EC26EADE2C8"><title>Description</title> <p>The
handle class, <xref href="GUID-727D2B62-09A9-3CBC-AB6F-591E52EC68EB.dita"><apiname>RHandleBase</apiname></xref>, encapsulates the basic behavior
common to all handles; for example, <codeph>Close()</codeph> to close a handle.
In particular, the class hides the handle-number which identifies the object
which the handle represents.</p> <p>The class is abstract in the sense that
a <codeph>RHandleBase</codeph> object is never explicitly instantiated. It
is always a base class to a concrete handle class; for example, <codeph>RSemaphore</codeph>, <codeph>RMutex</codeph>, <codeph>RThread</codeph> etc.</p> </section>
<section id="GUID-9ABD8697-9E59-44D6-8F2C-4D73A3EF15E9"><title>See also</title> <p><xref href="GUID-BE0C94BE-94F0-54B3-8674-366C09261E5D.dita">Reference Counting Objects
Overview</xref> </p> <p><xref href="GUID-5D4B86D3-20C4-5D87-A6C1-225018D32347.dita">Threads
and Process Management Overview</xref> </p> <p><xref href="GUID-D0D27AEA-FDDB-5F6F-94F6-ADDF5910DC47.dita">Client/Server
Overview</xref> </p> </section>
</conbody></concept>