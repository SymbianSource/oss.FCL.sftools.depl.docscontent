<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-2D93660B-8206-5D20-85F5-6FFCF4549127"><title>Persistent stores</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>A store is persistent if you can close it, re-open it, and then gain access to the same data.</p> <p>A persistent store has the concept of a root stream. The root stream is, in effect, the starting point from which all others streams within the store can be found.</p> <p>Before closing a persistent store you have created, you must set the ID of the root stream. After you have opened the persistent store, the first thing you must do is look up the root stream ID. You can then open the root stream and start reading data from the store.</p> <p>Persistent stores are represented by the abstract class <codeph>CPersistentStore</codeph>. This class, derived from <codeph>CStreamStore</codeph> has the root stream ID and expands on the abstract framework provided by <codeph>CStreamStore</codeph>, by adding behaviour for setting and retrieving the root stream ID.</p> <p>File stores are an example of persistent stores.</p> <p>The following diagram shows the idea of a persistent store with a root stream:</p> <fig id="GUID-8A987703-9602-563A-97D9-6DD6012708C4"><image href="GUID-FD503B6E-889C-521F-B61A-0EBDCA8CD9AC_d0e572975_href.png" placement="inline"/></fig> <section><title>See also</title> <p><xref href="GUID-C9D8D913-C65F-5A69-A606-30F59BFB38E2.dita">File stores</xref> </p> </section> </conbody></concept>