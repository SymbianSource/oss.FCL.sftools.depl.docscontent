<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en" id="GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164"><title> Bluetooth Test Technology</title><prolog><metadata><keywords/></metadata></prolog><conbody><p>This topic is intended to be a reference for information about the Bluetooth test technology area. The topic describes the high-level test philosophy, the types of test that this test technology area contains, what is being tested, and describes the test environment that the tests are run in. The following information is intended for distribution within Symbian, to its customers, and Symbian developer communities only. </p> <section><title> Bluetooth test technology area scope</title> <p><b> Components under Test</b> </p> <p>The Bluetooth subsystem provides support for Bluetooth, a short-range radio communications technology, standardised by the Bluetooth SIG in the form of the v2.0 Bluetooth Specification. The Bluetooth test suites test the following components under the Bluetooth technology area: </p> <ul><li id="GUID-8B9B1EA8-AEE8-5988-A4B6-A688C39B82A9"><p> <b> Bluetooth User:</b> This component provides the application level APIs for configuring and managing Bluetooth connections. The following components of Bluetooth User are tested: </p> <ul><li id="GUID-9F0CDFF6-38AC-5EA5-B2EF-DD3EA50313EE"><p> <b>Bluetooth Library:</b> This component provides setup and configuration details such as device type, Bluetooth sockets and link management options. </p> </li> <li id="GUID-F25F7B87-9E97-5C19-B9DE-EC3A29298C6B"><p> <b>Bluetooth Sockets:</b> Sockets provided by <codeph>CBluetoothSocket</codeph> instead of <codeph>RSocket</codeph>. </p> </li> <li id="GUID-99A7AB76-670E-5A0B-94B9-5ACBDECE75D9"><p> <b>BluetoothAV:</b> Provides the data structure for <codeph>BluetoothAV </codeph> operations for <codeph>AVDTP</codeph>, <codeph>GAVDP</codeph>, and <codeph>A2DP</codeph>, and so on. </p> </li> </ul> </li> <li id="GUID-EDD12FA5-E823-5EB9-88BE-E7717B59EC41"><p> <b> Bluetooth SDP:</b> The Symbian platform Bluetooth Service Discovery Protocol (SDP) component provides the functionality of the SDP required for Bluetooth connectivity. </p> </li> <li id="GUID-7C81846A-120F-5F85-B91E-CD92FABA253E"><p> <b>Bluetooth GAVDP:</b> The Symbian platform Bluetooth GAVDP component provides licensees the interfaces to implement Bluetooth GAVDP profile support on their platforms. </p> </li> </ul> <p><b> Scope of testing</b> </p> <p>This technology area provides a number of test suites to test APIs that Symbian identifies as PublishedAll and PublishedPartner, and are documented in the Symbian platform Library. These test suites can be used as a regression test suite, and also as part of a compatibility testing program. The test suite provides two types of tests, connected and unconnected tests. </p> <p> <b>Note:</b> For more information about the individual classes, refer to <xref href="GUID-AE127620-37B6-5401-A61C-E16C8BF6E1D8.dita">Bluetooth Verification Suite</xref>. </p> <p><b>Connected tests</b> </p> <p>The connected tests run Bluetooth commands from one device (called the Master), and send or receive data to/from another device (called the Slave). One device sends data over Bluetooth (this is the Active role) and the other device (the Passive role) will receive this data. Note that both the Master and Slave devices take turns at taking the Active and Passive roles. </p> <p><b>Master tests</b> </p> <p>The Master tests control the Slave tests. These tests run on the Master device and use UCC commands to start a test run on the Slave device. </p> <p><b>Slave tests</b> </p> <p>The Slave tests are controlled by the Master tests. A Slave test run is instigated by a UCC command on a Master test. The results of each Slave test is sent back to the Master and integrated into the results for the relevant Master test. </p> <p>For example, a Master test calls a UCC command which tells the Slave device to start a Slave script. A Slave test on this script runs and the result is sent (using UCC) to the Master device. </p> <p>Following is an example of a Bluetooth connected script using UCC: </p> <ol id="GUID-F0D123D2-E7CF-5C9E-B5F1-DCB3B08E3A3F"><li id="GUID-494067C5-8E0A-5AA5-86F1-F92A6BA9477B"><p>The Master script is started on the Master device. </p> </li> <li id="GUID-8B0F1ADE-E7ED-5E63-83BE-31D512702F05"><p>The Master script initialises UCC services on the Slave PC. </p> </li> <li id="GUID-C8D4B706-1E44-5DEF-8A49-3D03108C5A77"><p>The Master script starts a Slave script running on the Slave device. </p> </li> <li id="GUID-AB3B1788-990A-5DD2-8CD4-FB3001B10D93"><p>The Master starts a test. </p> </li> <li id="GUID-C476DA3C-6104-587C-BF19-9352246CCD4B"><p>The Master test creates Bluetooth objects. </p> </li> <li id="GUID-8A8FB753-F263-52D3-AD95-4F6D8EFE5C48"><p>The Script test starts, creates Bluetooth objects, and starts its Bluetooth dongle, which listens for incoming connections. </p> </li> <li id="GUID-3368AAAB-B8CC-5910-838F-915144A01F75"><p>The Slave test waits until the Master requests it to proceed. </p> </li> <li id="GUID-912BE97C-B475-529C-83DF-D657E20760F3"><p>The Master test tells the Slave to continue and requests its Bluetooth dongle to connect to the Slave Bluetooth dongle. </p> </li> <li id="GUID-A46E3C5F-BD25-5E6A-9BA9-51C384D6AD9F"><p>The Slave test accepts this connection and sends the result to the Master. </p> </li> <li id="GUID-1D1F850F-28DB-5E9B-BA15-032F9B52D9D6"><p>The Master receives the result and integrates it into its result of this test. </p> </li> <li id="GUID-70B038A0-1BFF-5E6D-8E3B-4576B9989724"><p>The Master test is completed and the results are printed to a log file. </p> </li> <li id="GUID-139B66FD-5B86-5617-B0A0-AEE24B130DE5"><p>The Master script ends the UCC services running on the Slave PC. </p> </li> <li id="GUID-7D6E80B2-4DB8-538F-9D84-D35CAC281F6D"><p>The Master script is closed. </p> </li> </ol> <p><b> Unconnected tests</b> </p> <p>The unconnected tests run on a single device attached to a Bluetooth dongle. The tests are standalone, as they do not send or receive data to/from another device. </p> <p><b> Test omissions</b> </p> <p>Not applicable. </p> </section> <section><title> Bluetooth test technology environment</title> <p>Two devices, both attached with a Bluetooth dongle, are required to run these tests. Connected tests require a UCC setup to be configured. This involves having a Master side PC running the UCC and a Slave PC running the remote services for multi-device synchronised tests. UCC is a PC service. If the tests are run on H2 or H4 board, the board has to be connected to a PC running UCC. </p> <p> <b>Note:</b> For more information about UCC setup, refer to <b>Symbian Verification Suite</b> » <b>Use case controller (UCC)</b>. </p> <p>All tests are controlled by the Master side connected device or emulator. Each device runs a script, where UCC is used to keep the tests in sync. The main device, which initiates the connection, is known as the Master device. The device, which accepts the connection, is called the Slave device. The Master device can either be a PC or a H2 or H4 board. However, the Slave device is always emulator because all the Master and Slave scripts are reversed and Slave scripts are executed on the Master device as well. For this reason, only the test coverage on the Master device is taken into consideration. There are separate Master and Slave scripts for each device. </p> <p><b>Device under Test Setup</b> </p> <p>The device under test (hardware platform, phone or emulator) should have an appropriate Symbian platform or licensee UI build. On a Symbian platform reference board this requires connecting a CASIRA pod (a Bluetooth dongle) to COM3 and on the Slave or Master emulator PC to COM0. For licensee UI variant devices, the built-in Bluetooth hardware is used. In this scenario, configure the Bluetooth COM port in the corresponding <filepath>hctl.ini</filepath> file. </p> <p><b>PC Setup</b> </p> <p>The PC should have Symbian or equivalent licensee developer kit, PDT and relevant compilers (Code Warrior, RVCT or GCCE) installed to build and execute the test code. The host PCs also require a Use-Case Controller (UCC) environment to be configured for connected tests to be run. </p> <p><b>Network Environment Setup</b> </p> <p>The PC and the device under test should be on the same network. To set up TCP/IP communication between the PC and the device under test Symbian, refer to <xref href="GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164.dita#GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164/GUID-9C830ADB-6419-55FC-90A9-E433BB4B0E3A">Appendix A</xref>. </p> <p><b>Test dependencies</b> </p> <p>Any mention to <b>epoc32</b> is offset by <filepath>%EPOCROOT%</filepath> that is, full path where the <b>epoc</b> tree is installed. </p> <p><b> Test Data</b> </p> <p>Test data for each test suite is in the following location: </p> <ul><li id="GUID-EDBBAF63-2A40-5F1B-98F2-730E1E191EB4"><p> <filepath>…\bluetoothapitest\bluetoothsvs\T_BTSdpAPI\testdata</filepath> </p> </li> <li id="GUID-1FB69BEB-5A6D-5B06-9C33-544915236066"><p> <filepath>
                     …\bluetoothapitest\bluetoothsvs\T_BTSockAddrAPI\testdata</filepath>  </p> </li> <li id="GUID-3666B2CE-0378-5CB2-B01C-FD9C0A8E9F7E"><p> <filepath>
                     …\bluetoothapitest\bluetoothsvs\T_BTSockAPI\testdata</filepath>  </p> </li> <li id="GUID-AAEA35D9-876F-59AB-8E49-346B0A95347D"><p> <filepath> …\bluetoothapitest\bluetoothsvs\T_BTUserAPI\testdata
                     </filepath>  </p> </li> <li id="GUID-CC486EAC-4F0B-5E19-8510-529D4D563FAF"><p> <filepath>…\bluetoothapitest\bluetoothsvs\testdata</filepath>  </p> </li> <li id="GUID-6B5D8924-1A72-5353-912C-E304E89609AF"><p> <filepath>…\bluetoothapitest\bluetoothsvs\T_BTGavdpAPI\testdata</filepath> </p> </li> </ul> <p>There is also test data common to all Bluetooth suites, which consists of the <filepath>CommDbWintap.xml</filepath> and <filepath>CommDbNtras.xml</filepath> files. These files are used to change the CommsDAT for testing on emulator and hardware respectively. </p> <p><b>Building and executing tests</b> </p> <p>Before building and execution SVS, a new <filepath>btuinotifiers.dll</filepath> which used for tests need to be built. This new <filepath>btuinotifiers.dll</filepath> pops up window asking user to input password while Bluetooth is establishing connection. Without doing this, most connective case need user’s interaction while cases are running. If password is not input in time, cases will fail because of time out. </p> <p>This <filepath>btuinotifiers.dll</filepath> used for tests can be built from the following location: </p> <p> <filepath> os/ shortlinksrv/ bluetooth/ btexample/ testui/
             btuiautonotifiers/ group</filepath>  </p> <p>Execute the following commands to build it: </p> <p><userinput>bldmake bldfiles</userinput> </p> <p><userinput>abld test build [winscw|armv5] [urel|udeb]</userinput> </p> <p>The following code block illustrates the Bluetooth test suite hierarchical structure after the build process. This structure can be viewed from the <filepath> .. %EPOCROOT%\epoc32\testdriver\testproduct</filepath> folder after building the test suite. </p> <p> <b> Note:</b> For information about the TestDriver test suite structure, see <b>Symbian Verification Suite » TestDriver » Using TestDriver » Results » Viewing the test results</b>. </p> <codeblock id="GUID-7E039674-E042-55DA-9A5F-2FF80C729D94" xml:space="preserve">&lt;Component&gt; - Bluetooth
&lt;Device type&gt; - master
&lt;Test type&gt; - connected
&lt;Sub-component-BT-SDP&gt; - BT-SDP-PublicApi-Master-suite
&lt;suite&gt; - BTSDP-Agent-PublicApi-Active-Master-suite
&lt;suite&gt; - BTSDP-Agent-PublicApi-Passive-Master-suite
&lt;suite&gt; - BTSDP-Database-PublicApi-Active-Master-suite
&lt;suite&gt; - BTSDP-Database-PublicApi-Passive-Master-suite
&lt;suite&gt; - BTSDP-Lists-PublicApi-Active-Master-suite
&lt;suite&gt; - BTSDP-Lists-PublicApi-Passive-Master-suite
&lt;suite&gt; - BTSDP-Search-PublicApi-Active-Master-suite
&lt;suite&gt; - BTSDP-Search-PublicApi-Passive-Master-suite
&lt;Sub-component-BT-USER-SOCK&gt; - BT-USER-SOCK-PublicApi-Master-suite
&lt;suite&gt; - BT-USER-SOCK-PublicApi-Active-Master-suite
&lt;suite&gt; - BT-USER-SOCK-PublicApi-Passive-Master-suite
&lt;Sub-component-BT-USER-SOCK&gt; - BT-USER-PublicApi-Master-suite
&lt;suite&gt; - BT-USER-Access-Public-Act-Master-suite
&lt;suite&gt; - BT-USER-Adapter-Public-Act-Master-suite
&lt;Sub-component-BT-GAVDP&gt; - BT-GAVDP-PublishedPartner-Master-Suite
&lt;suite&gt; - BT-GAVDP-PublishedPartner-Active-Master-suite
&lt;suite&gt; - BT-GAVDP-PublishedPartner-Passive-Master-suite
&lt;Test type&gt; - unconnected
&lt;Sub-component-BT-SDP&gt; - BT-SDP-PublicApi-Master-suite
&lt;suite&gt; - BTSDP-Agent-PublicApi-Unconnected-suite
&lt;suite&gt; - BTSDP-Lists-PublicApi-Unconnected-suite
&lt;suite&gt; - BTSDP-SearchPattern-PublicApi-Unconnected-suite
&lt;Sub-component-BT-USER-SOCK&gt; - BT-USER-SOCK-PublicApi-suite
&lt;suite&gt; - BT-USER-SOCK-PublicApi-Unconnected-suite
&lt;Sub-component-BT-SOCK-ADDR&gt; - BT-Sock-Addr-API-PublicApi-suite
&lt;suite&gt; - BT-sock-addr-api-publicapi-suite
&lt;Sub-component-BT-USER&gt; - BT-USER-PublicApi-Master-suite
&lt;suite&gt; - BT-USER-BTAccReq-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-BTPhyLinAda-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-BTPhyLin-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-BTSynBan-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-BTSynLin-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-BTSynPac-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-L2CapSocAdd-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-RfRemPortPara-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-RfRPNTra-Pub-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpCntProtCapa-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpHeaderCompCapa-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpMediaTransCapa-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpRecoveryCapa-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpReportingCapa-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpSEPInfo-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpSrvCate-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-AvdtpSockAddr-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-CnvtToSymbianErr-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-NonSBCCodecCapa-PubPart-Unc-Suite
&lt;suite&gt; - BT-USER-SEID-PubPart-Unc-Suite
&lt;Test type&gt; - connected - auto
&lt;Sub-component-BT-USER&gt; - BT-USER-PublicApi-Master-Auto-suite
&lt;suite&gt; - BT-USER-Access-Pub-Act-Mas-Auto-suite
&lt;suite&gt; - BT-USER-Adapter-Pub-Act-Mas-Auto-suite
&lt;suite&gt; - BT-USER-PhyLinks-Pub-Act-Mas-Auto-suite
&lt;suite&gt; - BT-USER-SyncLink-Pub-Act-Mas-Auto-Suite

&lt;Device type&gt; - slave
&lt;Sub-component-BT-SDP&gt; - BT-SDP-PublicApi-Slave-suite
&lt;suite&gt; - BTSDP-Agent-PublicApi-Active-Slave-suite
&lt;suite&gt; - BTSDP-Agent-PublicApi-Passive-Slave-suite
&lt;suite&gt; - BTSDP-Database-PublicApi-Active-Slave-suite
&lt;suite&gt; - BTSDP-Database-PublicApi-Passive-Slave-suite
&lt;suite&gt; - BTSDP-Lists-PublicApi-Active-Slave-suite
&lt;suite&gt; - BTSDP-Lists-PublicApi-Passive-Slave-suite
&lt;suite&gt; - BTSDP-Search-PublicApi-Active-Slave-suite
&lt;suite&gt; - BTSDP-Search-PublicApi-Passive-Slave-suite
&lt;Sub-component-BT-USER-SOCK&gt; - BT-USER-SOCK-PublicApi-Slave-suite
&lt;suite&gt; - BT-USER-SOCK-PublicApi-Active-Slave-suite
&lt;suite&gt; - BT-USER-SOCK-PublicApi-Passive-Slave-s
&lt;Sub-component-BT-USER-SOCK&gt; - BT-USER-PublicApi-Slave-suite
&lt;suite&gt; - BT-USER-Access-Public-Pass-Slave-suite
&lt;suite&gt; - BT-USER-Access-Pub-Pass-Sla-Auto-suite
&lt;suite&gt; - BT-USER-Adapter-Public-Pass-Slave-suite
&lt;suite&gt; - BT-USER-Adapter-Pub-Pass-Sla-Auto-suite
&lt;suite&gt; - BT-USER-PhyLinks-Pub-Pass-Sla-Auto-suite
&lt;suite&gt; - BT-USER-SyncLink-Pub-Pass-Sla-Auto-Suite
&lt;Sub-component-BT-GAVDP&gt; - BT-GAVDP-PublishedPartner-Slave-suite
&lt;suite&gt; - BT-GAVDP-PublishedPartner-Active-Master-suite
&lt;suite&gt; - BT-GAVDP-PublishedPartner-Active-Slave-suite
&lt;suite&gt; - BT-GAVDP-PublishedPartner-Passive-Master-suite
&lt;suite&gt; - BT-GAVDP-PublishedPartner-Passive-Slave-suite
</codeblock> <p>The hierarchical test suite structure facilitates easy build and execution of the complete test suite or part of it. For example, if the path specified is: </p> <ul><li id="GUID-440D01CF-139C-53B8-91CA-672FE8DE8EF2"><p> <b>&lt;bluetooth&gt;:</b> The entire suite is built or executed. </p> </li> <li id="GUID-F41D3FF6-AD07-5B75-9CE0-6449420AD01F"><p> <b>&lt;bluetooth.master.unconnected&gt;:</b> All the five unconnected suites are built or executed. </p> </li> <li id="GUID-BF997EA8-E04A-58C5-9712-DE359BB8B457"><p> <b>&lt;bluetooth.master.unconnected.BT-SDP-PublicApi-Master-suite.BTSDP-Agent-PublicApi-Unconnected-suite&gt;:</b> Only <codeph>BTSDP-Agent-PublicApi-Unconnected-suite</codeph> is built or executed. </p> </li> </ul> <p>The following subsequent sections describe the sequence of commands to be executed on emulator and hardware. </p> <p> <b>Notes:</b>  </p> <ul><li id="GUID-47D4C896-6756-5A99-9BC5-A8D6B9C2B219"><p>Refer to the code block in this section for sub-component and test suite names. </p> </li> <li id="GUID-F0F26B2C-7859-55F7-A5C4-A7FF55AE48E5"><p>Ensure that you ignore the <xref href="GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164.dita#GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164/GUID-7F89D0CA-7A4B-581E-8A17-A6FA04F11AA6">Steps to build and execute tests manually</xref> section for automated testing and the <xref href="GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164.dita#GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164/GUID-26E435EF-5B61-51F8-8E6B-8A0D59D4A590">Steps to build and execute tests using TestDriver</xref> section for manual testing. </p> </li> </ul> <p><b>General environment setup</b> </p> <p>Perform the following steps for the <codeph>WINSCW</codeph> or <codeph>ARMV5</codeph> platforms: </p> <p> <b>Note:</b> For building additional components, refer to the specific sub-component test suite description document in <b>Symbian Verification Suite</b> » <b>API regression test suite</b> » <b>API test suites for Bluetooth</b>. </p> <ol id="GUID-701FCD00-5B2E-5909-8966-B36AC0E6E18A"><li id="GUID-B25FD0BF-F051-577A-9A0D-D6579635A3E2"><p>The entire Bluetooth Test component can be built from <filepath>\bluetoothapitest\bluetoothsvs\group\…</filepath>. Individual test components can be built from the respective group directory: </p> <ul><li id="GUID-7BBB20A7-6152-55DA-BFFE-442B8387C1DB"><p> <filepath>\bluetoothapitest\bluetoothsvs\T_BTSdpAPI\group</filepath> </p> </li> <li id="GUID-028035EC-105F-575D-AC3C-5902C0794D08"><p> <filepath>\bluetoothapitest\bluetoothsvs\T_BTSockAddrAPI\group</filepath> </p> </li> <li id="GUID-C6B9F0AD-3785-561C-98E0-4BD2A12A41E7"><p> <filepath>\bluetoothapitest\bluetoothsvs\T_BTSockAPI\group</filepath> </p> </li> <li id="GUID-468A5813-0421-5CC2-958E-AAC941E07F13"><p> <filepath>\bluetoothapitest\bluetoothsvs\T_BTUserAPI\group
                          </filepath>  </p> </li> <li id="GUID-F657CB42-2B4D-5FF3-9E49-A19E99BF8330"><p> <filepath>\bluetoothapitest\bluetoothsvs\T_BTGavdpAPI\group</filepath> </p> </li> </ul> </li> <li id="GUID-43859785-3694-544A-8CCC-9C48E02C2AAD"><p>Execute the following commands to build the Bluetooth Test component: </p> <p><userinput>bldmake bldfiles</userinput> </p> <p><userinput>abld test build [winscw|armv5] [urel|udeb]</userinput> </p> <p><userinput>abld test build [winscw|armv5] [urel|udeb]</userinput> </p> <p><userinput>%EPOCROOT%\epoc32\release\winscw\&lt;udeb/urel&gt;ced z:\bluetooth\[CommDbNtras.xml |CommDbWintap.xml]</userinput> </p> <p> <b>Note:</b> This command performs the following tasks: </p> <ul><li id="GUID-2344667B-B8AE-5F69-A3D9-954AFDED4271"><p>Updates CommDB to use the appropriate transport mechanism (NT RAS by default). For more information about NT RAS, refer to <xref href="GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164.dita#GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164/GUID-9C830ADB-6419-55FC-90A9-E433BB4B0E3A">Appendix A</xref>. </p> </li> <li id="GUID-BF2E9CD4-71E3-54E0-AC2D-3B937A218214"><p>If any username or password creation or changes on NT RAS connection the above command must be executed to reflect the new NT RAS account details. </p> </li> <li id="GUID-D8FBDFF4-034D-5DFC-BD01-3B54BA0AA2EB"><p>Suppresses any WinTap prompts. </p> </li> </ul> </li> </ol> <p id="GUID-26E435EF-5B61-51F8-8E6B-8A0D59D4A590"><b>Steps to build and execute tests using TestDriver</b> </p> <p><b>For WINSCW platform: </b> </p> <ol id="GUID-427A01EA-AB99-5772-83D2-C2E5696FC290"><li id="GUID-1A3EDC54-D645-518B-A582-DFFCB5D81957"><p>Communication between the PC and the device under test (Symbian platform device) is enabled using STAT. So, the device under test must have STAT installed. </p> <p> <b>Note:</b> Refer to <b>Symbian Verification Suite » TestDriver » Using TestDriver » Communicating with the device » STAT plug-in</b> for more information. </p> </li> <li id="GUID-1B04A742-7782-5249-B664-DE5B85ABCB0A"><p>Configure the TestDriver using the automated scripts located at the following location: </p> <p> <filepath>\bluetoothapitest\bluetoothsvs\group\…</filepath>  </p> <p><userinput>testdriversetup</userinput> </p> <p> <filepath>testdriversetup.bat</filepath> calls <filepath>testdriversetup.pl</filepath> which applies an appropriate set of configuration parameters. This should be done in both Master and Slave devices. </p> </li> <li id="GUID-90600D64-70F2-5804-822F-C4688F52A881"><p>Build the test code by running the following command: </p> <p><userinput>Testdriver build [–p [winscw|armv5]] [–b [udeb|urel]] –s bluetooth[.master|slave[.&lt;test suite name &gt;]]</userinput> </p> <p>Testdriver commands can be executed from any location. </p> </li> <li id="GUID-650A15C1-C86C-59FA-8562-ECBC19104544"><p>Execute the tests by running the following command: </p> <p><userinput>testdriver run</userinput> </p> </li> </ol> <p> <b>Note:</b> All scripts and test data are automatically removed from the system drive of the device under test after the execution. </p> <p><b>For ARMV5 platform: </b> </p> <ol id="GUID-33F90FE7-163A-5DA5-BD51-F9C9CFE83EAA"><li id="GUID-A66D8B08-FE83-5F5B-8747-CC70CDD25F37"><p>Communication between the PC and the device under test (Symbian platform device) is enabled using STAT. So, the device under test must have STAT installed. </p> </li> <li id="GUID-22DAF144-AEE2-5340-B7AF-52FD338EDE59"><p> <b>Communication between PC and hardware</b>: Refer to <b>Symbian Verification Suite » TestDriver » Using TestDriver » Communicating with the device » STAT plug-in</b> for details on the various methods of communication between the PC and hardware. The ROM image is built on the PC and transferred to the hardware board using MMC card. </p> </li> <li id="GUID-020225F9-0A38-58AA-8733-6D0FCD066836"><p>TestDriver can be configured using the automated scripts located at: <filepath>\bluetoothapitest\bluetoothsvs\group\…</filepath>  </p> <p><userinput> testdriversetup </userinput> </p> <p> <filepath>testdriversetup.bat</filepath> calls <filepath>testdriversetup.pl</filepath> which applies an appropriate set of configuration parameters. This should be done in both Master and Slave devices. </p> </li> <li id="GUID-AF26F8E3-3B5C-5A52-8982-0F0F45041D28"><p>Build the test code by running the following command: </p> <p><userinput>Testdriver build [–p [winscw|armv5]] [–b [udeb|urel]] –s bluetooth[.master|slave[.&lt;test suite name &gt;]]</userinput> </p> <p>Testdriver commands can be executed from any location. </p> </li> <li id="GUID-F3DA9157-16E8-5DC1-A23E-CCB8D4F3E93D"><p>Build the ROM image by running the following command: </p> <p><userinput>buildrom –D_STARTUPMODE2 –D_EABI=ARMV5 -DRVCT -DUSE_STRONG_CRYPTOGRAPHY -D_CUSTOM_COMMSDAT &lt;h2/h4hrp&gt; techview_statapi platsec</userinput> </p> </li> <li id="GUID-BC204F50-9686-54C7-A915-39257DF6AE70"><p>Execute the tests by running the following command: </p> <p><userinput>testdriver run –tcp – –ip &lt;client IP address of the NT RAS connection&gt;</userinput> </p> </li> </ol> <p> <b>Note:</b> All scripts and test data are automatically removed from the system drive of the device under test after the execution. </p> <p id="GUID-7F89D0CA-7A4B-581E-8A17-A6FA04F11AA6"><b>Steps to build and execute tests manually (Tests built into ROM)</b> </p> <p><b>For WINSCW platform: </b> </p> <ol id="GUID-36A2DB5D-7AEB-5D16-8A2C-934E75A0F2FC"><li id="GUID-E46AB563-BB29-54E9-AE3C-0F1948D05CC4"><p> <b>Setup Scripts:</b> The <filepath>setup_t_bluetooth.script</filepath> file is used to execute the entire bluetooth test suite. Following setup scripts are used to execute class specific test suites: </p> <ul><li id="GUID-67750733-25F3-50F8-986A-C0581694DAC5"><p> <filepath>setup-BT-SOCK-ADDR-PublicApi.script</filepath>  </p> </li> <li id="GUID-699B523F-7AE8-5AED-A8AA-30A6FD2B1CB5"><p> <filepath> setup-BT-USER-SOCK-PublicApi.script</filepath>  </p> </li> </ul> </li> <li id="GUID-17DA675F-30A4-5FD6-9012-368E457B227A"><p> <b>Running Scripts:</b>  </p> <p>Change directory to <filepath>…%EPOCROOT%\epoc32\release\winscw\&lt;urel/udeb&gt;</filepath>  </p> </li> <li id="GUID-284C87AC-F734-50A8-A96D-1680B22F5012"><p> <b>Execute the Test:</b>  </p> <p><userinput>testexecute z:\bluetooth\setup_&lt;test suite name&gt;.script</userinput> </p> <p><userinput>testexecute c:\bluetooth\&lt;test suite name&gt;.script</userinput> </p> <p> <filepath>t_ bluetooth.script</filepath> is used to execute the entire Bluetooth test suite. </p> </li> </ol> <p><b>For ARMV5 platform: </b> </p> <ol id="GUID-255E141D-2BFE-512A-B36E-C8382BA938B6"><li id="GUID-B2C9B926-6487-5159-8ACA-4661AC0D123E"><p>Build the ROM image by running the following command: </p> <p><userinput>buildrom –D_EABI=ARMV5 -DRVCT -DUSE_STRONG_CRYPTOGRAPHY -D_CUSTOM_COMMSDAT &lt;h2/h4hrp&gt; techview_statapi platsec t_bluetooth</userinput> </p> </li> <li id="GUID-FD2039DD-7EA8-54CC-A900-4D1AB0AB7D39"><p> <b>Setup Scripts:</b> The <filepath>setup_t_bluetooth.script</filepath> file is used to execute the entire bluetooth test suite. Following setup scripts are used to execute class specific test suites: </p> <ul><li id="GUID-F75538F9-7429-5F88-AAB2-3DF29A536E9B"><p> <filepath>setup-BT-SOCK-ADDR-PublicApi.script</filepath>  </p> </li> <li id="GUID-3C5F5105-422A-566A-8CE3-3C99B83F9D36"><p> <filepath> setup-BT-USER-SOCK-PublicApi.script</filepath>  </p> </li> </ul> </li> <li id="GUID-EB94E932-9241-5149-9459-5AC0FB896D92"><p> <b>Running Scripts:</b>  </p> <p><userinput>Open eshell </userinput> </p> </li> <li id="GUID-3114323F-65B1-5403-97BA-F513FC195A30"><p> <b>Execute the Test:</b>  </p> <p><userinput>testexecute z:\bluetooth\setup_&lt;test suite name&gt;.script</userinput> </p> <p><userinput>testexecute c:\bluetooth\&lt;test suite name&gt;.script</userinput> </p> <p> <filepath>t_ bluetooth.script</filepath> is used to execute the entire Bluetooth test suite. </p> </li> </ol> <p><b>Buildrom Overflow Error</b> </p> <p>The default ROM size for a OMAP (H2, H4 boards) is currently up to 32 MB. </p> <p>If the ROM is greater than 32MB and less than 64MB in size, then the <filepath>h2.oby</filepath> or <filepath>h4hrp.oby</filepath> file can be modified, depending on the device being used. The value of <codeph>"ROMMEGS"</codeph> must be set to the desired ROM size. <b>Note:</b> This value must be specified in hexadecimal format. </p> <p>Images executing in RAM consume part of the 64MB of available system memory. Hence, it is critical to ensure that there is enough memory remaining to run the OS and the required application. This availability of memory can vary dynamically depending on usage, so making ROMs that are close to the limit is risky and can slow down the execution rate dramatically. Alternatively, a custom ROM can be built with only a subset of the tests included. </p> <p> <b>Note:</b> The above options must also be available for other, non OMAP, platforms. </p> <p><b>Steps to build and execute tests on phone directly using .pkg file</b> </p> <p><b>For ARMV5 platform: </b> </p> <ol id="GUID-7147D918-1F4E-5690-94CF-3220F9499013"><li id="GUID-27D69E8B-F50C-5234-A4AD-693619D634B9"><p> <b> EShell and TestExecute:</b>  </p> <p>The phone must have eshell and 
                     testexecute installed. </p> </li> <li id="GUID-1172EBD3-E0F1-53DA-A4BA-1E8F6ABA9415"><p> <b> Certificate files:</b>  </p> <p>Ensure <filepath>.cer</filepath> and <filepath>.key</filepath> files are placed into <filepath>/epoc32/pkg/</filepath> directory on the PC and rename as<filepath>zeus.cer</filepath> and <filepath>SymbianACS.key</filepath> correspondingly. </p> </li> <li id="GUID-C881DD57-1BB2-5B17-A643-ABE6C08BE7E0"><p> <b>Create and install SIS-file:</b>  </p> <p>Execute <filepath>makesisfiles.bat</filepath> from <filepath>/epoc32/pkg/</filepath> directory. </p> <p><userinput>makesisfiles.bat</userinput> </p> <p>This creates <filepath>t_btsockaddrapi.sis,</filepath> <filepath>t_btuserapi.sis,</filepath> and <filepath>t_BTSdpAPI.sis</filepath> files. The files must be copied to an MMC card, transferred to the phone and executed. </p> <p>When the above files are executed, the Bluetooth test suite is installed on the device. </p> <p> <b>Note:</b> If there is no SIS installer available, you can use a different tool (for example; STAT desktop, which can be found in <filepath>%EPOCROOT%\epoc32\tools\stat\statdesktop.exe</filepath>) to install the <filepath>.sis</filepath> file. </p> </li> <li id="GUID-EBD7EFDD-C63E-55AE-874D-7991EB4B1D09"><p> <b> Running Scripts: </b>  </p> <p>Run the test scripts. For more information refer to <xref href="GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164.dita#GUID-D861A9E6-C24B-5B87-B179-1E8CEE1AC164/GUID-7F89D0CA-7A4B-581E-8A17-A6FA04F11AA6">Steps to build and execute tests manually (Tests built into ROM)</xref>. </p> </li> </ol> <p><b>Selective Execution of Test Cases using TCS File</b> </p> <p>Test cases can be executed selectively using a <filepath>.tcs</filepath> file. The <filepath>.tcs</filepath> file contains the IDs of test cases: </p> <ul><li id="GUID-CC56A32C-7731-59E3-8C30-697E3E3905DC"><p>to be excluded from a test run </p> </li> <li id="GUID-A4BCAE6A-2C3F-576B-B0AD-4186F152C3F1"><p>to be executed on their own. Therefore, excluding all other test cases in the test script from a test run. </p> </li> </ul> <p>The test case IDs can be specified as a range, a list, or a combination of both, where each range or individual test case ID is delimited by a new-line character. </p> <p>For example, range of test case IDs to be excluded can be specified as: </p> <p> <codeph>BTSDP-Agent-PublicApi-Active-0301:
             BTSDP-Agent-PublicApi-Active-0305</codeph>  </p> <p>Test cases from 301 to 305 (301 and 305 included) are either excluded or are the only ones to be executed during a test run. </p> <p>A list of test cases IDs can be: </p> <p> <codeph>BTSDP-Agent-PublicApi-Active-0301</codeph>  </p> <p> <codeph>BTSDP-Agent-PublicApi-Active-0306</codeph>  </p> <p> <codeph>BTSDP-Agent-PublicApi-Active-0310</codeph>  </p> <p>A combination of range and list can be: </p> <p> <codeph>BTSDP-Agent-PublicApi-Active-0301:BTSDP-Agent-PublicApi-Active-0305</codeph> </p> <p> <codeph>BTSDP-PublicApi-AttrValBool-Active-Master-0001:BTSDP-PublicApi-AttrValBool-Active-Master-005</codeph> </p> <p> <codeph>BTSDP-PublicApi-AttrValNil-Active-Master-0104</codeph>  </p> <p> <codeph>BTSDP-PublicApi-AttrIdMatchList-Active-Master-0201</codeph>  </p> <p>There is a <filepath>.tcs</filepath> file corresponding to each test script, , which is located at the following location: </p> <p> <filepath>…\bluetoothapitest\bluetoothsvs\config</filepath>  </p> <p>For more information on location of <filepath>.tcs</filepath> files, see <xref href="GUID-A1E57AF0-45B0-5C0C-AEB3-FABAC45C42BF.dita#GUID-A1E57AF0-45B0-5C0C-AEB3-FABAC45C42BF/GUID-2BC94645-4027-5056-BA31-ED0429D8C658">TCS file source location</xref> in T_BTGavdpAPI Test Suite, and <xref href="GUID-48189AB5-5FFC-516B-932C-C934C54E17B5.dita#GUID-48189AB5-5FFC-516B-932C-C934C54E17B5/GUID-225707CD-1BBF-5B17-AF1F-6E1C1543E402">TCS file source location</xref> in BT-USER API Test Suite. </p> <p>The <filepath>.tcs</filepath> file must be modified when using the test driver for test execution. When executing the tests manually, the following testexecute command illustrates the usage of the <filepath>.tcs</filepath> file: </p> <p><userinput>testexecute %EPOCROOT%\epoc32\release\winscw\&lt;urel/udeb&gt;\&lt;test suite name&gt;.script –[tcx|tci] %EPOCROOT%\epoc32\release\winscw\&lt;urel/udeb&gt;\t_bluetooth.tcs</userinput> </p> <p>The <codeph>-tcx</codeph> switch is used to execute all the tests in the specified script excluding the test cases specified in the <filepath>.tcs</filepath> file. The<codeph> –tci </codeph> switch is used to execute only the tests specified in the <filepath>.tcs</filepath> file from the specified script. </p> <p><b>Test Results</b> </p> <p><b>Test results log file location</b> </p> <p>After tests complete execution, result logs can be found on the system drive of the device in the <filepath>\logs\testexecute\</filepath> directory. On the PC, if tests are executed using TestDriver, results can be in one of the following folders: </p> <ul><li id="GUID-7F9F1E4A-1B5E-5462-937D-863CADD9ED9A"><p> <filepath>%EPOCROOT%\epoc32\TestDriver\results\</filepath>  </p> </li> <li id="GUID-8C99186E-2B45-5A33-97F2-1BC564A5611E"><p> <filepath>%EPOCROOT%\epoc32\winscw\c\logs\testexecute</filepath>  </p> </li> </ul> <p>If the tests are run manually. When using TestDriver, a new test result folder is created for each test run that is, results are not overwritten each time a test run is executed. A <filepath>.html</filepath> log file can be found for each script contained in the suite, in its own subfolder. </p> <p>Each testcase in the script contains one test block, which performs some of the actions on an API. The log will display the percentage of testcases that have passed successfully. The script should ideally have a 100% pass rate. </p> <p><b>How to interpret test results</b> </p> <p>Each test suite produces its own HTML log file containing the results of the test run. While examining the log file, the results at the bottom of the log must be checked first. This gives a summary of the number of tests in the suite that have passed, failed or caused panic. In the body of the log, passed tests are highlighted in green, failed tests in red and tests which caused panic are highlighted in blue. </p> <p>If a failed or resulted in a panic, the reason for its failure or panic can be known by examining each step in the test case, listed between the “START_TESTCASE” and “END_TESTCASE” tags. The steps which pass will have the word “INFO” followed by some information regarding the step. A failed step will instead have the word “ERROR”, followed by an explanation of the error (usually with an error code). If a panic occurs, there may be no textual explanation for the problem except the panic code (within the blue highlighted text). </p> <p>When this test suite is run on a real device, some of the tests may fail due to limitations of the device. This is because of the device not having the correct hardware (for example, no BT device exists for a test which needs one), or lack the right software plugins to run the test. This can be spotted if the log displays that a test has failed with the error code <codeph>-5</codeph> (which means <codeph>KErrNotSupported</codeph>). This <codeph>-5</codeph> error code means that the test has failed because the functionality is not supported by the device being used. Therefore, tests failing with the error code <codeph>-5</codeph> are not due to defects in the test scripts, but due to the limitations of the device used. </p> <p> <b> Note:</b> For more information about the TestDriver results, see the <b>Symbian Verification Suite » TestDriver » Using TestDriver » Results » Viewing the test results</b> section. </p> </section> <section><title>OS Focussed Components</title> <p>The tables in this section illustrate the components and classes tested on each Symbian platform baseline. </p> <p>The following table lists the classes tested of the <codeph>T_BTSockAddrAPI</codeph> component on each Symbian platform baseline: </p> <table id="GUID-B5A7BAA4-05C8-5131-B845-09AE3EDA0BD4"><tgroup cols="6"><colspec colname="col0"/><colspec colname="col1"/><colspec colname="col2"/><colspec colname="col3"/><colspec colname="col4"/><colspec colname="col5"/><thead><row><entry> Symbian platform Baseline</entry> <entry>9.1</entry> <entry>9.2</entry> <entry>9.3 </entry> <entry>9.4</entry> <entry>9.5</entry> </row> <row><entry>TBTSockAddr</entry> </row> </thead> <tbody><row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> </tbody> </tgroup> </table> <p> <b>Classes tested of the T_BTSockAddrAPI component</b>  </p> <p>The following table lists the classes tested of the <codeph>T_BTSockAPI</codeph> component on each Symbian platform baseline: </p> <table id="GUID-16F90816-3312-5FA1-86E2-59EC0BED11D8"><tgroup cols="6"><colspec colname="col0"/><colspec colname="col1"/><colspec colname="col2"/><colspec colname="col3"/><colspec colname="col4"/><colspec colname="col5"/><thead><row><entry> Symbian platform Baseline</entry> <entry>9.1</entry> <entry>9.2</entry> <entry>9.3 </entry> <entry>9.4</entry> <entry>9.5</entry> </row> <row><entry>CbluetoothSocket</entry> </row> </thead> <tbody><row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> </tbody> </tgroup> </table> <p> <b>Classes tested of the T_BTSockAPI component</b>  </p> <p>The following table lists the classes tested of the <codeph>T_BTSdpAPI</codeph> component on each Symbian platform baseline: </p> <table id="GUID-65398F36-3CD9-5245-91CA-ED2F1ECD7D6C"><tgroup cols="6"><colspec colname="col0"/><colspec colname="col1"/><colspec colname="col2"/><colspec colname="col3"/><colspec colname="col4"/><colspec colname="col5"/><thead><row><entry> Symbian platform Baseline</entry> <entry>9.1</entry> <entry>9.2</entry> <entry>9.3 </entry> <entry>9.4</entry> <entry>9.5</entry> </row> <row><entry>CelementParser</entry> </row> <row><entry>CsdpAgent</entry> </row> <row><entry>CsdpAttrIdMatchList</entry> </row> <row><entry>CsdpAttrValue</entry> </row> <row><entry>CsdpAttrValueBoolean</entry> </row> <row><entry>CSdpAttrValueDEA</entry> </row> <row><entry>CSdpAttrValueDES</entry> </row> <row><entry>CsdpAttrValueInt</entry> </row> <row><entry>CsdpAttrValueList</entry> </row> <row><entry>CsdpAttrValueNil</entry> </row> <row><entry>CsdpAttrValueString</entry> </row> <row><entry>CSdpAttrValueURL</entry> </row> <row><entry>CSdpAttrValueUUID</entry> </row> <row><entry>CsdpAttrValueUint</entry> </row> <row><entry>CsdpSearchPattern</entry> </row> <row><entry>MsdpAgentNotifier</entry> </row> <row><entry>MsdpAttributeValueVisitor</entry> </row> <row><entry>MsdpElementBuilder</entry> </row> <row><entry>RSdp</entry> </row> <row><entry>RsdpDatabase</entry> </row> <row><entry>RsdpSubSession</entry> </row> <row><entry>SdpUtil</entry> </row> <row><entry>TsdpIntBuf</entry> </row> <row><entry>TsdpIntBuf&lt;Tuint16&gt;</entry> </row> <row><entry>TsdpIntBuf&lt;Tuint32&gt;</entry> </row> <row><entry>TsdpIntBuf&lt;Tuint64&gt;</entry> </row> <row><entry>TsdpIntBuf&lt;Tuint8&gt;</entry> </row> </thead> <tbody><row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> </tbody> </tgroup> </table> <p> <b>Classes tested of the T_BTSdpAPI component</b>  </p> <p>The following table lists the classes tested of the <codeph>T_BTUserAPI</codeph> component on each Symbian platform baseline: </p> <table id="GUID-535445DD-FEFE-5A1A-833F-3CF658211AC2"><tgroup cols="6"><colspec colname="col0"/><colspec colname="col1"/><colspec colname="col2"/><colspec colname="col3"/><colspec colname="col4"/><colspec colname="col5"/><thead><row><entry> Symbian platform Baseline</entry> <entry>9.1</entry> <entry>9.2</entry> <entry>9.3 </entry> <entry>9.4</entry> <entry>9.5</entry> </row> <row><entry>CbluetoothPhysicalLinks</entry> </row> <row><entry>CbluetoothSynchronousLink</entry> </row> <row><entry>TBTAccessRequirements</entry> </row> <row><entry>RBTPhysicalLinkAdapter</entry> </row> <row><entry>TBTSyncBandwidth</entry> </row> <row><entry>TBTSyncPackets</entry> </row> <row><entry>TinquirySockAddr</entry> </row> <row><entry>TL2CapConfig</entry> </row> <row><entry>TL2CAPSockAddr</entry> </row> <row><entry>TrfcommRemotePortParams</entry> </row> <row><entry>TRfcommRPNTransaction</entry> </row> <row><entry>TBTServiceSecurity</entry> </row> </thead> <tbody><row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> </tbody> </tgroup> </table> <p> <b>Classes tested of the T_BTUserAPI component</b>  </p> <table id="GUID-08A26F2C-B569-5CDC-B0EF-8859F6AC5F2F"><tgroup cols="6"><colspec colname="col0"/><colspec colname="col1"/><colspec colname="col2"/><colspec colname="col3"/><colspec colname="col4"/><colspec colname="col5"/><thead><row><entry> Symbian platform Baseline</entry> <entry>9.1</entry> <entry>9.2</entry> <entry>9.3 </entry> <entry>9.4</entry> <entry>9.5</entry> </row> <row><entry>RGavdp</entry> </row> <row><entry>MGavdpUser</entry> </row> <row><entry>TAvdtpContentProtectionCapabilities</entry> </row> <row><entry>TAvdtpHeaderCompressionCapabilities</entry> </row> <row><entry>TAvdtpMediaCodecCapabilities</entry> </row> <row><entry>TAvdtpMediaTransportCapabilities</entry> </row> <row><entry>TAvdtpRecoveryCapabilities</entry> </row> <row><entry>TAvdtpReportingCapabilities</entry> </row> <row><entry>TAvdtpSEPInfo</entry> </row> <row><entry>TAvdtpServiceCapability</entry> </row> <row><entry>TAvdtpServiceCategories</entry> </row> <row><entry>TAvdtpSockAddr</entry> </row> <row><entry>TSEID</entry> </row> </thead> <tbody><row><entry><p>X </p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> <row><entry><p>X</p> </entry> <entry><p>-</p> </entry> <entry><p>-</p> </entry> <entry><p>X</p> </entry> <entry><p>X</p> </entry> </row> </tbody> </tgroup> </table> </section> <section id="GUID-9C830ADB-6419-55FC-90A9-E433BB4B0E3A"><title>Appendix A</title> <p><b>NT Remote Access Service (RAS)</b> </p> <p>If the tests are to be executed on the emulator, the PC should have two COM ports which are connected using null-modem cable. The Symbian emulator talks to one of the COM ports and the NT RAS service talks to the other. If the tests are to be executed on hardware, then one of the serial (COM) ports on the PC has to be connected to the COM3 port on the hardware board. </p> <p>Before setting up NT RAS, ensure that you read the following steps: </p> <ul><li id="GUID-2D24E846-12CB-57B2-B9BD-D40BD06714C2"><p>While configuring NT RAS on a PC, and adding a user, specify the following details: </p> <ul><li id="GUID-04DD0C1B-E733-5C26-B994-438CB99F05A5"><p> <b> User name:</b> RasUser. </p> </li> <li id="GUID-FBBF719C-BD41-5EB1-AB38-8BFEC95BC07C"><p> <b> Password:</b> test_product1. </p> </li> </ul> <p> <b>Note</b>: For more information about setting up NTRAS and configuring NTRAS, see <b>Symbian Verification Suite » TestDriver » Using TestDriver » Communicating with the device » Transport modes » Using TCP/IP</b>. </p> <p> <b>Note:</b> This information is case-sensitive. Networks differ and may enforce strong passwords. In this scenario, the password should be modified in <codeph>commdb</codeph>. This can be done by modifying the following lines in the <filepath>CommDbNtras.xml</filepath> file: </p> <codeblock id="GUID-B9F73500-4AA9-537C-A299-DDE39D8F0AD7" xml:space="preserve">&lt;IfAuthName&gt;RasUser&lt;/IfAuthName&gt; 
&lt;IfAuthPass&gt;test_product1&lt;/IfAuthPass&gt;</codeblock> </li> <li id="GUID-5D99C93F-6650-5E6B-BB6C-489904E53A7A"><p>While configuring NT RAS on a PC, and setting up the Networking components, if TCP/IP is not setup perform the following steps: </p> <ol id="GUID-F205E7CE-3E8C-5464-96E1-B7F6D3268421"><li id="GUID-97BD58A3-E652-5A8A-A7D8-5C633245A598"><p>Clear <b>Allow callers to access my area Networks</b>. </p> </li> <li id="GUID-C462449C-5990-5A9B-A949-9A4B7F3CD2E4"><p>Select <b>Specify TCP/IP addresses</b>. </p> </li> <li id="GUID-3FEA9CBC-6A30-54B7-B018-402B8F0729FE"><p>Specify <b>192.68.0.1</b> in the <b>From</b> field and <b>192.68.0.2</b> in the <b>To</b> field. </p> </li> </ol> </li> <li id="GUID-97388132-BE68-55E4-B798-DD78AA1EFD11"><p>NT RAS is also supported on Windows XP. </p> <p>While installing the null modem on a PC on which Windows XP is installed, open the <b>Phone and Modem Settings</b> section, from <b>Control Panel</b> &gt; <b>Printers and other Hardware</b>. </p> </li> <li id="GUID-DAF1CA85-44D6-5858-B7D3-5C06B6BFD83B"><p>While configuring NT RAS on a PC on which Windows XP is installed, perform the following steps to create a new connection and configure it. </p> <ol id="GUID-DD14FDE4-9FD7-58A7-B487-1831506524D6"><li id="GUID-0E34D21B-3095-5B6C-804A-364E88B1FDD6"><p>From <b>Control Panel</b>, select <b>Network and Internet Connections</b> &gt; <b>Network connections</b> &gt; <b>Create a new connection</b>. </p> </li> <li id="GUID-C5F9126A-982A-58AC-A122-5D60BBD67F60"><p>In the <b>New connection</b> wizard, click <b>Next</b>. </p> </li> <li id="GUID-33A12B78-3613-5398-A3B4-AF7E6CBA3401"><p>Select the <b>Set up an Advanced Connection</b> and <b>Accept incoming connections</b> options. </p> </li> <li id="GUID-86FDAE19-FCC9-5537-89B2-66B7FF042342"><p>Perform the remaining steps under the Configuring NT RAS section. </p> </li> </ol> </li> </ul> </section> </conbody></concept>