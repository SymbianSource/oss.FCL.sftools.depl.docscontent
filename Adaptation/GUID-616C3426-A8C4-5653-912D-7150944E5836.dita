<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-616C3426-A8C4-5653-912D-7150944E5836" xml:lang="en"><title>Keyword reference (G-O)</title><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>This page lists the keywords starting from G to O. </p>
<section id="GUID-DDB9FC14-73FF-5D99-963E-C289D3091FD1"><title>heapmax</title> <codeblock id="GUID-61F649D2-AC86-5EC7-BE9D-3C32D7A644FB" xml:space="preserve">heapmax = &lt;hex-size&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Overrides the default maximum
heap size for the executable. </p> </section>
<section id="GUID-250AC57D-0430-5DBD-B04E-99A874E42256"><title>heapmin</title> <codeblock id="GUID-5E9AE355-8824-5364-80A0-BED24579C043" xml:space="preserve">heapmin = &lt;hex-size&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Overrides the default minimum
heap size for the executable. </p> </section>
<section id="GUID-0A8E6B07-1C40-55DD-A2D8-122E62A285F1"><title>hide[[HWVD]]</title> <codeblock id="GUID-3BC215FB-B263-5D03-9FB0-421305AC41DD" xml:space="preserve">hide[[HWVD]] = &lt;existing-file&gt;</codeblock> <p> <i>rombuild and rofsbuild</i>  </p> <p>Marks the existing file
as hidden. The file is still available to resolve DLL static links. </p> </section>
<section id="GUID-50550839-5F46-5096-98A4-857B62E19C34"><title>_HIDE__ECOM_PLUGIN</title> <codeblock id="GUID-E3AC5736-7A2B-562A-BE90-2A69379BA504" xml:space="preserve">_HIDE__ECOM_PLUGIN(&lt;local build directory&gt;, &lt;rom binary directory&gt;, &lt;local epoc32\data\Z directory&gt;, &lt;rom resources directory&gt;, &lt;DLL filename&gt;, &lt;resource filename&gt;)</codeblock> <p> <i>BUILDROM only</i>  </p> <p>Specifies an ECom plug-in, consisting
of an implementation DLL and an ECom registration resource file, to
be hidden in the ROM and in the SPI file. </p> <p>Symbian platform
code does not use this keyword directly. Instead, it uses the macro <codeph>HIDE_ECOM_PLUGIN</codeph> defined in <filepath>\epoc32\rom\include\header.iby</filepath>. This macro allows the plug-in to be specified more briefly in the
following form: </p> <codeblock id="GUID-ECA76B8E-6BE5-5A3E-80A8-6D6BADE77599" xml:space="preserve">HIDE_ECOM_PLUGIN(&lt;DLL name&gt;,&lt;resource file name&gt;)</codeblock> <p>For example: </p> <codeblock id="GUID-7ED2A190-ED9B-55C9-AEDC-8E9402BDD0A1" xml:space="preserve">HIDE_ECOM_PLUGIN(foo.dll,12345abc.rsc)</codeblock> <p>This feature allows <codeph>BUILDROM</codeph> to hide the ECom
plug-ins. In particular, <codeph>BUILDROM</codeph> hides the DLL associated
with the specified plug-in. The resource registration files that are
passed using the macro are marked as hidden in the SPI file should
you choose to generate one. <codeph>BUILDROM</codeph> implements this
feature using the <xref href="GUID-6843109A-1567-5287-9AFF-3AE5E80334AF.dita#GUID-6843109A-1567-5287-9AFF-3AE5E80334AF/GUID-E54F3C5D-ED40-5196-8D9C-6B7B71826F79">spidatahide</xref> keyword. </p> <p>As part of the ROM building process,
it is possible to add support for multiple languages. This affects
how ECom resource files are specified by <codeph>BUILDROM</codeph>: </p> <ul>
<li id="GUID-A87ABC01-AD2F-5150-A4AD-086EBA94A31B"><p>If an SPI file
is being created, the <codeph>HIDE_ECOM_PLUGIN</codeph> lines are
processed at an intermediate <codeph>BUILDROM</codeph> stage to produce: </p> <codeblock id="GUID-D0BB3B3C-E6D7-56F0-8B95-E41D65B969D1" xml:space="preserve">spidatahide=MULTI_LINGUIFY( EXT sourcename ) &lt;spi-id&gt; &lt;target-spi-dir&gt;</codeblock> <p>During the <codeph>BUILDROM</codeph> localisation stage, these
lines become: </p> <codeblock id="GUID-50A55664-7ECF-561E-9B26-66180E9107BB" xml:space="preserve">spidatahide = &lt;source-file&gt; &lt;spi-id&gt; &lt;target-spi-dir&gt;</codeblock> </li>
<li id="GUID-209212CC-DC03-52A3-8C8A-44CC715274A5"><p>If an SPI file
is not being created, the <codeph>HIDE_COM_PLUGIN</codeph> lines are
processed at an intermediate <codeph>BUILDROM</codeph> stage to produce: </p> <codeblock id="GUID-C0206459-7309-5074-A414-75DDD20DC474" xml:space="preserve">hide=MULTI_LINGUIFY(EXT sourcename)</codeblock> <p>During the <codeph>BUILDROM</codeph> localisation stage, these
lines become: </p> <codeblock id="GUID-6F7E86C6-1957-5417-8619-FD417CE1981D" xml:space="preserve">hide=sourcename.EXT for the default extension
hide=sourcename.Enn for all the language codes nn</codeblock> </li>
</ul> </section>
<section id="GUID-C1133A70-FD7E-4D65-BB4B-E272011F89E7"><title>hcrdata</title><p><codeblock xml:space="preserve">hcrdata = &lt;hcrdata&gt;</codeblock></p><p>Specifies
the location of an HCR data file which is included in
the SMR partition image. </p></section>
<section id="GUID-A1ACEB2A-EAB5-4FAA-BE8C-910D4596A1C2"><title>imagename</title><p><codeblock xml:space="preserve">imagename = &lt;imagename&gt;</codeblock></p><p>Creates
an SMR partition image.</p><draft-comment time="2010-06-24T14:25" translate="no">&lt;section id="GUID-178037D5-6040-4767-A185-0BC91B084770"&gt;&lt;title&gt;keepIAT&lt;/title
&gt;&lt;codeblock&gt;keepIAT&lt;/codeblock&gt;&lt;p&gt;&lt;i&gt;rombuild only&lt;/i&gt;&lt;/p&gt;&lt;p&gt;Retains
old-style  Import Address Table.&lt;/p&gt;&lt;/section&gt;</draft-comment></section>
<section id="GUID-046089DD-D441-5960-9C3C-97639C6CD0AD"><title>kerneldataaddress</title> <codeblock id="GUID-93C4F853-ED21-575C-BF22-1AE4B5C00268" xml:space="preserve">kerneldataaddress = &lt;hex-address&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Kernel data/bss chunk base virtual
address. </p> <p>The recommended value is 0x64000000. </p> </section>
<section id="GUID-85ECD9AF-EDA0-42BB-9989-306F0A0F21B5"><title>kernelconfig </title><codeblock xml:space="preserve">kernelconfig &lt;bit-of-kervel-config&gt; &lt;on | off&gt;</codeblock><p><i>rombuild only</i></p><p>This keyword sets the specified bit
of the kernel configuration flag to <codeph>ON</codeph> or <codeph>OFF</codeph>. The value of <codeph>&lt;bit-of-kervel-config&gt;</codeph> must be between 0 and 31.</p></section>
<section id="GUID-8F83C7C7-9DEC-5EA2-85AF-C5E1CEA68462"><title>kernelheapmax</title> <codeblock id="GUID-33F31257-B9C0-54C4-B777-12F4A4112EEF" xml:space="preserve">kernelheapmax = &lt;hex-size&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Maximum size of the Kernel's heap. </p> <p>The Kernel heap grows in virtual address space until this value
is reached: It can then grow no further. The value is rounded up to
a multiple of the virtual address space mapped by a single page directory
entry - on ARM CPUs this is 1MB. Usually 1 page directory entry's
worth of RAM is specified. The default value is 0x100000; this is
used if none is supplied. </p> </section>
<section id="GUID-00885DED-DF1A-5489-91A7-FA07D915EA2F"><title>kernelheapmin</title> <codeblock id="GUID-E677FADD-D228-5E30-8610-8A6A6C521C22" xml:space="preserve">kernelheapmin = &lt;hex-size&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Minimum size of the Kernel heap,
allocated immediately when the Kernel boots. Specify either a minimal
value or a working set size based on envisaged use. </p> <p>The recommended
value is 0x10000, and is the default value if none is explicitly supplied. </p> </section>
<section id="GUID-560AF806-B405-529A-9222-C43220355D81"><title>kernelromname</title> <codeblock id="GUID-791C3BD2-46DC-5372-893B-A24B4885DAF4" xml:space="preserve">kernelromname = &lt;rom-file-name&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>ROM image on which an extension
ROM is based. This keyword is only valid for extension ROMs </p> </section>
<section id="GUID-1443CA1F-7234-5480-8306-9C28BF16AF82"><title>kerneltrace</title> <codeblock id="GUID-6759ECAB-4531-5C63-94A6-36DC2E3ACBD3" xml:space="preserve">kernelTrace = &lt;32 bit hex-number | decimal number&gt; [&lt;32 bit hex-number | decimal number&gt;]{0,7}</codeblock> <p> <i>rombuild only</i>  </p> <p>Initial value for the kernel trace
mask. You can supply upto eight separate 32 bit masks in order to
enable higher trace flags. The bit values are defined in <filepath>nk_trace.h</filepath>, and only apply to a debug Kernel. </p> <p>To define kernel trace in an <filepath>.oby</filepath> file is optional.
The default value is set as <codeph>0x80000000</codeph> if kernel
trace is not defined. This default value allows the kernel to raise
a panic when an error occurs during runtime. If an invalid value is
set, Buildrom removes the invalid value. For example, if kernel trace
has only 1 invalid bit mask value, Buildrom removes it and resets
the default value. </p> </section>
<section id="GUID-8BC22156-1E47-542F-88CC-37274B879E8A"><title>LANGUAGE_CODE</title> <codeblock id="GUID-58B140B4-ADC8-5F23-94B7-2781D22234C3" xml:space="preserve">LANGUAGE_CODE NN</codeblock> <p> <i>BUILDROM only</i>  </p> <p>Localisation support. Specifies
the Symbian 2-digit codes for languages to be supported in this ROM.
The keyword may be used as many times as necessary. </p> </section>
<section id="GUID-92BCC365-0353-4B29-9D71-356016ABBFCC"><title>maxunpagedsize</title> <codeblock id="GUID-1EBD700F-BF75-552F-9A6C-BD63D690BEFC" xml:space="preserve">maxunpagedsize &lt;maximum_size_of_unpaged_data&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Sets the maximum value for the
size of uncompressed unpaged data for which you can flash the image.
If the size of the unpaged data is greater than <codeph>maximum_size_of_unpaged_data</codeph>, a warning message is displayed. </p> </section>
<section id="GUID-F57DE321-5C08-5D3B-BFE8-B4BD0BA1EBE4"><title>memmodel</title> <codeblock id="GUID-A0643B9B-E6C1-59DD-BE0F-B29353BB03CA" xml:space="preserve">memmodel = moving | direct | multiple &lt;chunk size&gt; &lt;page size&gt;</codeblock> <p> <i>rombuild only</i>  </p> <p>Specifies the memory model to
be used at runtime together with the chunk size and the page size. </p> </section>
<section id="GUID-B97ECBBE-B28F-5241-9D78-DBA20108BB14"><title>multikernel</title> <codeblock id="GUID-198B5D0A-48C8-568A-B345-FA3041C3A479" xml:space="preserve">multikernel</codeblock> <p> <i>rombuild only</i>  </p> <p>Specifies that the ROM image has
multiple kernel executables. These kernels are specified with multiple
primary keywords in the files-section. </p> <p>Note that this keyword
is mutually exclusive with <xref href="GUID-6843109A-1567-5287-9AFF-3AE5E80334AF.dita#GUID-6843109A-1567-5287-9AFF-3AE5E80334AF/GUID-0E5CF5E6-0547-5185-9AE8-B6BF57802017">singlekernel</xref> keyword. </p> </section>
<section id="GUID-977C6041-365A-5D23-A370-A9939689FFD7"><title>MULTI_LINGUIFY</title> <codeblock id="GUID-D9EBBBBB-15D6-5D3A-9D5C-89837DD1F7BF" xml:space="preserve">&lt;xxx&gt;=MULTI_LINGUIFY(EXT &lt;sourcename&gt; &lt;destname&gt;)</codeblock> <p> <i>BUILDROM only</i>  </p> <p>Localisation support. During the
localisation pass, the MULTI_LINGUIFY lines are expanded into one
line per language code. </p> <p>For example, the line: </p> <codeblock id="GUID-435C8CA9-9795-501F-BB34-81B78421C1F4" xml:space="preserve">data=MULTI_LINGUIFY( EXT sourcename destname )</codeblock> <p>is expanded to the lines: </p> <codeblock id="GUID-06DF3C0B-0842-5866-BD47-478F0054E339" xml:space="preserve">data=sourcename.Enn destname.EXT
data=sourcename.Enn destname.Enn</codeblock> <p>The first line is
for the default language code; the remaining lines are for all other
language codes. </p> <p>This provides support for the <codeph>BaflUtils::NearestLanguageFile()</codeph> function, which performs a similar mapping from language codes to
filenames. </p> </section>
<section id="GUID-0432CA22-868F-5C9E-B778-378662954DD8"><title>nowrapper</title> <codeblock id="GUID-9B0830B6-318E-5A39-A2A7-7A99D2EC04DC" xml:space="preserve">nowrapper</codeblock> <p> <i>rombuild only</i>  </p> <p>Specifies that no ROM wrapper
is required. </p> </section>
</conbody></concept>