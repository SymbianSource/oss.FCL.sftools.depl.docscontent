<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-A25FFD79-0797-43EC-8975-8C23E7E539C4" xml:lang="en"><title>Register Access Technology Guide</title><shortdesc>Provides information about the Register Access technology.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<p>The Register Access platform service is implemented in the ASSP
layer. The Register Access functionality is provided to the clients
by implementing the <xref href="GUID-66BB033A-3386-3913-9A25-EF3867D42C2C.dita"><apiname>AsspRegister</apiname></xref> class.</p>
<section id="GUID-F80CF14A-3CB2-41B1-A3BD-DBD116FDBA8C-GENID-1-2-1-10-1-5-1-8-1-1-7-1-3-2">         
   <title>Purpose</title>             <p>The Register Access platform
service provides an interface to the kernel and device drivers to
read, write or modify the contents of only the ASSP registers.</p>  </section>
<section id="GUID-59E2379C-CD1F-4ABD-A380-2195651D1443"><title>Key
concepts</title><dl>
<dlentry>
<dt>Register</dt>
<dd><p>A register is a memory location on the ASSP hardware to store
data that relates to the operation of that hardware. The Symbian platform
support registers that can store 8, 16, 32 and 64–bit data.</p></dd>
</dlentry>
<dlentry>
<dt>Bitmask</dt>
<dd><p>The <codeph>Modify</codeph> function of the AsspRegister class
allows the clients to set or clear certain bits stored in the register.</p></dd>
</dlentry>
<dlentry>
<dt>Application-Specific Standard Product (ASSP)</dt>
<dd><p>ASSP is an integrated circuit consisting of CPU, Memory Management
Unit (MMU), cache and a number of on-chip peripherals, which is intended
to be used in a class of devices. Typical examples include UARTs,
timers, LCD controller that are designed and marketed by a silicon
vendor.</p></dd>
</dlentry>
</dl></section>
<section id="GUID-44AD8B68-B9AF-472A-A4E5-6102B3767E97"><title>Typical
uses</title><p>The Register Access platform service allows the clients
to:</p><ul>
<li><p>read data stored in 8, 16, 32 and 64–bit registers</p></li>
<li><p>store data in 8. 16, 32 and 64–bit registers</p></li>
<li><p>change certain bits of the data in 8, 16, 32 and 64–bit registers.</p></li>
</ul></section>
</conbody></concept>