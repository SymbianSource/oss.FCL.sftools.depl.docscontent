<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-E1277A18-7201-4856-8712-067022F92123" xml:lang="en"><title>DSDIOStack
Class Tutorial</title><shortdesc>Describes the DSDIOStack API class.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-4BDF2833-2D45-4AAF-BB79-FC1215209C3B"><title>Description</title><p>The <xref href="GUID-908B4DA8-8E1C-3B38-90FF-14EC52277B91.dita"><apiname>DSDIOStack</apiname></xref> class
provides the SDIO specific implementation of the initialization state machine
and the support for asynchronous IO read and write operations.</p><table id="GUID-6247B2E9-C6A2-4EDD-9694-71514DEB44FD">
<tgroup cols="2"><colspec colname="col1"/><colspec colname="col2"/>
<tbody>
<row>
<entry><p>Header file</p></entry>
<entry><p><filepath>sdio.h</filepath></p></entry>
</row>
<row>
<entry><p>Source code file</p></entry>
<entry><p><filepath>sdiostack.cpp</filepath></p></entry>
</row>
<row>
<entry><p>Required libraries</p></entry>
<entry><p>EPBUSSDIO</p></entry>
</row>
<row>
<entry><p>Class declaration</p></entry>
<entry><p><codeph>class DSDIOStack : public DStackBase</codeph></p></entry>
</row>
</tbody>
</tgroup>
</table></section>
<section id="GUID-764AE495-9C67-4181-ACCF-F4705FC0CBCA"><title>AcquireStackSM()</title><p>The
function declaration for the <xref href="GUID-A5562C23-91EC-38A4-A13E-1BF70C4920C5.dita"><apiname>AcquireStackSM()</apiname></xref>method is:</p><codeblock xml:space="preserve">IMPORT_C virtual TMMCErr AcquireStackSM();</codeblock><p><b>Description</b></p><p>This adds a new SDIO card to the SDIO card stack.
This is an extension of the <codeph>DSDStack::AcquireStackSM</codeph> state
machine function. It handles the SDIO initialization procedure as described
in version 1.10f of the SDIO card specification.</p><p><b>Parameters</b></p><p>None</p><p><b>Return
value</b></p><table id="GUID-9D79FCCD-516A-4A78-9F74-8E28B0E57E92">
<tgroup cols="2"><colspec colname="col1" colwidth="0.48*"/><colspec colname="col2" colwidth="1.52*"/>
<tbody>
<row>
<entry><p><codeph>TMMCErr</codeph></p></entry>
<entry><p>Return code of the operation. The return value is <codeph>KErrNone</codeph> if
the operation was successful, otherwise an error code.</p></entry>
</row>
</tbody>
</tgroup>
</table></section>
<section id="GUID-017EE801-8BBA-4D8D-9EAC-68534D510A3F"><title>CIMIoReadWriteDirectSM()</title><p>The
function declaration for the <xref href="GUID-2F44539D-406E-3EFF-8F4A-035F1F040BC0.dita"><apiname>CIMIoReadWriteDirectSM()</apiname></xref> method
is:</p><codeblock xml:space="preserve">IMPORT_C TMMCErr CIMIoReadWriteDirectSM();</codeblock><p><b>Description</b></p><p>Implements
the state machine for the IO_RW_DIRECT command (CMD52).</p><p><b>Parameters</b></p><p>None</p><p><b>Return
value</b></p><table id="GUID-695217EC-13A0-4AFF-A0CA-8BBB3AFEBB1A">
<tgroup cols="2"><colspec colname="col1" colwidth="0.48*"/><colspec colname="col2" colwidth="1.52*"/>
<tbody>
<row>
<entry><p><codeph>TMMCErr</codeph></p></entry>
<entry><p>Return code of the operation. The return value is <codeph>KErrNone</codeph> if
the operation was successful, otherwise an error code.</p></entry>
</row>
</tbody>
</tgroup>
</table></section>
<section id="GUID-9D061070-2B38-4A03-89F3-221F6F3BC28B"><title>CIMIoReadWriteExtendedSM()</title><p>The
function declaration for the <xref href="GUID-2513922B-5796-3F96-A09E-FA2014C25A25.dita"><apiname>CIMIoReadWriteExtendedSM()</apiname></xref> method
is:</p><codeblock xml:space="preserve">IMPORT_C TMMCErr CIMIoReadWriteExtendedSM();</codeblock><p><b>Description</b></p><p>Used
to write an CMD53 command to the card.</p><p><b>Parameters</b></p><p>None</p><p><b>Return
value</b></p><table id="GUID-A2C65FB6-DDAE-4EB1-A6D9-588D09735B9B">
<tgroup cols="2"><colspec colname="col1" colwidth="0.48*"/><colspec colname="col2" colwidth="1.52*"/>
<tbody>
<row>
<entry><p><codeph>TMMCErr</codeph></p></entry>
<entry><p>Return code of the operation. The return value is <codeph>KErrNone</codeph> if
the operation was successful, otherwise an error code.</p></entry>
</row>
</tbody>
</tgroup>
</table></section>
</conbody></concept>