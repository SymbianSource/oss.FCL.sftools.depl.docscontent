<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) 2007-2010 Nokia Corporation and/or its subsidiary(-ies) All rights reserved. -->
<!-- This component and the accompanying materials are made available under the terms of the License 
"Eclipse Public License v1.0" which accompanies this distribution, 
and is available at the URL "http://www.eclipse.org/legal/epl-v10.html". -->
<!-- Initial Contributors:
    Nokia Corporation - initial contribution.
Contributors: 
-->
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="GUID-092D336A-155A-4F18-AAF7-92E08473700E" xml:lang="en"><title>DMA Overview</title><shortdesc>Direct Memory Access (DMA) uses a controller to copy data
between memory locations, or between memory and peripherals with minimal
involvement from the CPU.</shortdesc><prolog><metadata><keywords/></metadata></prolog><conbody>
<section id="GUID-04298BEC-F064-40C4-9A8C-DFB15953C85B"><title>Purpose</title><p>Direct Memory Access (DMA) channels allow you to copy data between
memory locations, or between memory and peripherals, while minimizing
the use of  the CPU. The transfer operation is performed in hardware
by the DMA controller. The purpose of the DMA platform service is
to provide a common interface between hardware and device drivers
which use DMA.</p><p>The framework is divided into a platform-independent
layer and a platform-specific layer, with the DMA platform service
being the interface between the two. The framework presents an API
for use by device drivers and other client applications which transfer
data by DMA. The PSL must be implemented by hardware developers to
provide the same functionality on multiple platforms.</p></section>
<section id="GUID-140D36E7-EFC1-4206-A563-417AAB6BCC1C"><title>Architecture</title><p><fig id="GUID-0EF82751-1A74-4A39-BA92-E7E8F441E7F7">
<title>DMA Framework</title>
<image href="GUID-A6845EB0-4B4D-49C8-85A5-A933A2C351CF_d0e89230_href.png" placement="inline"/>
</fig></p></section>
</conbody></concept>